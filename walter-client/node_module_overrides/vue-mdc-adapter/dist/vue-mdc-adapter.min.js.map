{"version":3,"file":"vue-mdc-adapter.min.js","sources":["../components/base/apply-passive.js","../components/base/base-plugin.js","../components/base/custom-element.js","../components/base/custom-link.js","../components/base/custom-event.js","../components/base/custom-button.js","../components/base/custom-icon.js","../components/base/dispatch-event-mixin.js","../components/base/dispatch-focus-mixin.js","../components/base/uniqueid-mixin.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/adapter.js","../node_modules/@material/ripple/util.js","../node_modules/@material/ripple/foundation.js","../components/ripple/mdc-ripple-base.js","../components/ripple/index.js","../components/ripple/mdc-ripple.vue","../components/button/mdc-button-base.vue","../components/button/mdc-button.vue","../components/button/index.js","../components/card/index.js","../components/card/mdc-card.vue","../components/card/mdc-card-primary-action.vue","../components/card/mdc-card-media.vue","../components/card/mdc-card-header.vue","../components/card/mdc-card-title.vue","../components/card/mdc-card-subtitle.vue","../components/card/mdc-card-text.vue","../components/card/mdc-card-actions.vue","../components/card/mdc-card-action-buttons.vue","../components/card/mdc-card-action-button.vue","../components/card/mdc-card-action-icons.vue","../components/card/mdc-card-action-icon.vue","../node_modules/@material/base/component.js","../node_modules/@material/checkbox/constants.js","../node_modules/@material/ripple/index.js","../node_modules/@material/checkbox/adapter.js","../node_modules/@material/checkbox/foundation.js","../node_modules/@material/form-field/adapter.js","../node_modules/@material/form-field/constants.js","../node_modules/@material/form-field/foundation.js","../node_modules/@material/animation/index.js","../components/checkbox/index.js","../components/checkbox/mdc-checkbox.vue","../node_modules/@material/chips/chip/constants.js","../node_modules/@material/chips/chip/adapter.js","../node_modules/@material/chips/chip/foundation.js","../components/chips/mdc-chip.vue","../node_modules/@material/chips/chip-set/constants.js","../node_modules/@material/chips/chip-set/adapter.js","../node_modules/@material/chips/chip-set/foundation.js","../components/chips/index.js","../components/chips/mdc-chip-set.vue","../node_modules/@material/dialog/constants.js","../node_modules/@material/dialog/foundation.js","../node_modules/tabbable/index.js","../node_modules/focus-trap/index.js","../components/dialog/index.js","../components/dialog/mdc-dialog.vue","../node_modules/@material/dialog/util.js","../components/drawer/mdc-permanent-drawer.vue","../node_modules/@material/drawer/slidable/constants.js","../node_modules/@material/drawer/slidable/foundation.js","../node_modules/@material/drawer/persistent/constants.js","../node_modules/@material/drawer/persistent/foundation.js","../node_modules/@material/drawer/util.js","../components/drawer/mdc-persistent-drawer.vue","../node_modules/@material/drawer/temporary/constants.js","../node_modules/@material/drawer/temporary/foundation.js","../components/drawer/mdc-temporary-drawer.vue","../components/drawer/mdc-drawer.vue","../components/drawer/index.js","../components/drawer/mdc-drawer-layout.vue","../components/drawer/mdc-drawer-header.vue","../components/drawer/mdc-drawer-list.vue","../components/drawer/mdc-drawer-item.vue","../components/drawer/mdc-drawer-divider.vue","../components/elevation/index.js","../components/elevation/mdc-elevation.vue","../components/fab/index.js","../components/fab/mdc-fab.vue","../node_modules/@material/grid-list/constants.js","../node_modules/@material/grid-list/foundation.js","../components/grid-list/index.js","../components/grid-list/mdc-grid-list.vue","../components/grid-list/mdc-grid-tile.vue","../components/icon/index.js","../components/icon/mdc-icon.vue","../node_modules/@material/icon-toggle/constants.js","../node_modules/@material/icon-toggle/adapter.js","../node_modules/@material/icon-toggle/foundation.js","../components/icon-toggle/index.js","../components/icon-toggle/mdc-icon-toggle.vue","../components/layout-app/index.js","../components/layout-app/mdc-layout-app.vue","../components/layout-grid/mdc-layout-grid.vue","../components/layout-grid/mdc-layout-cell.vue","../components/layout-grid/index.js","../components/layout-grid/mdc-layout-inner-grid.vue","../node_modules/@material/linear-progress/constants.js","../node_modules/@material/linear-progress/foundation.js","../components/linear-progress/mdc-linear-progress.vue","../components/linear-progress/index.js","../components/list/index.js","../components/list/mdc-list.vue","../components/list/mdc-list-item.vue","../components/list/mdc-list-divider.vue","../components/list/mdc-list-group.vue","../components/list/mdc-list-group-header.vue","../components/list/mdc-list-group-divider.vue","../node_modules/@material/menu/constants.js","../node_modules/@material/menu/adapter.js","../node_modules/@material/menu/foundation.js","../node_modules/@material/menu/util.js","../components/menu/index.js","../components/menu/mdc-menu.vue","../components/menu/mdc-menu-item.vue","../components/menu/mdc-menu-divider.vue","../components/menu/mdc-menu-anchor.vue","../node_modules/@material/radio/constants.js","../node_modules/@material/radio/adapter.js","../node_modules/@material/radio/foundation.js","../components/radio/index.js","../components/radio/mdc-radio.vue","../node_modules/@material/select/constants.js","../node_modules/@material/select/foundation.js","../node_modules/@material/floating-label/constants.js","../node_modules/@material/floating-label/adapter.js","../node_modules/@material/floating-label/foundation.js","../components/select/mdc-select-label.vue","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/line-ripple/adapter.js","../node_modules/@material/line-ripple/foundation.js","../components/select/mdc-select-line-ripple.vue","../node_modules/@material/notched-outline/constants.js","../node_modules/@material/notched-outline/adapter.js","../node_modules/@material/notched-outline/foundation.js","../components/select/index.js","../components/select/mdc-select.vue","../components/select/mdc-select-notched-outline.vue","../node_modules/@material/slider/constants.js","../node_modules/@material/slider/foundation.js","../node_modules/@material/slider/adapter.js","../components/slider/index.js","../components/slider/mdc-slider.vue","../node_modules/@material/snackbar/constants.js","../node_modules/@material/snackbar/foundation.js","../components/snackbar/index.js","../components/snackbar/mdc-snackbar.vue","../components/switch/index.js","../components/switch/mdc-switch.vue","../node_modules/@material/tabs/tab/constants.js","../node_modules/@material/tabs/tab/foundation.js","../components/tabs/mdc-tab.vue","../node_modules/@material/tabs/tab-bar/constants.js","../node_modules/@material/tabs/tab-bar/foundation.js","../components/tabs/index.js","../components/tabs/mdc-tab-bar.vue","../node_modules/@material/textfield/helper-text/constants.js","../node_modules/@material/textfield/helper-text/adapter.js","../node_modules/@material/textfield/helper-text/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/adapter.js","../node_modules/@material/textfield/icon/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/adapter.js","../node_modules/@material/textfield/foundation.js","../components/textfield/index.js","../components/textfield/mdc-textfield.vue","../components/theme/mdc-theme.vue","../components/theme/index.js","../node_modules/@material/toolbar/constants.js","../node_modules/@material/toolbar/foundation.js","../components/toolbar/index.js","../components/toolbar/mdc-toolbar.vue","../components/toolbar/mdc-toolbar-row.vue","../components/toolbar/mdc-toolbar-section.vue","../components/toolbar/mdc-toolbar-menu-icon.vue","../components/toolbar/mdc-toolbar-title.vue","../components/toolbar/mdc-toolbar-icon.vue","../node_modules/@material/top-app-bar/constants.js","../node_modules/@material/top-app-bar/foundation.js","../node_modules/@material/top-app-bar/adapter.js","../node_modules/@material/top-app-bar/short/foundation.js","../components/top-app-bar/index.js","../components/top-app-bar/mdc-top-app-bar.vue","../components/top-app-bar/mdc-top-app-bar-action.vue","../components/typography/mdc-typography.js","../components/typography/index.js","../components/index.js","../components/base/auto-init.js","../components/entry.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const CustomButton = {\n  name: 'custom-button',\n  functional: true,\n  props: {\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      data.attrs.role = 'button'\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else if (data.attrs && data.attrs.href) {\n      // href case\n      element = 'a'\n      data.attrs.role = 'button'\n    } else {\n      // button fallback\n      element = 'button'\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomButtonMixin = {\n  props: {\n    href: String,\n    disabled: Boolean,\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomButton\n  }\n}\n","export function extractIconProp(iconProp) {\n  if (typeof iconProp === 'string') {\n    return {\n      classes: { 'material-icons': true },\n      content: iconProp\n    }\n  } else if (iconProp instanceof Array) {\n    return {\n      classes: iconProp.reduce(\n        (result, value) => Object.assign(result, { [value]: true }),\n        {}\n      )\n    }\n  } else if (typeof iconProp === 'object') {\n    return {\n      classes: iconProp.className\n        .split(' ')\n        .reduce(\n          (result, value) => Object.assign(result, { [value]: true }),\n          {}\n        ),\n      content: iconProp.textContent\n    }\n  }\n}\n","export const DispatchEventMixin = {\n  props: {\n    event: String,\n    'event-target': Object,\n    'event-args': Array\n  },\n  methods: {\n    dispatchEvent(evt) {\n      evt && this.$emit(evt.type, evt)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        click: e => this.dispatchEvent(e)\n      }\n    }\n  }\n}\n","export const DispatchFocusMixin = {\n  data() {\n    return { hasFocus: false }\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp() {\n      this._active = false\n    },\n    onFocusEvent() {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    onBlurEvent() {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus =\n        this.$el === document.activeElement ||\n        this.$el.contains(document.activeElement)\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted() {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcRipple from './mdc-ripple.vue'\n\nexport * from './mdc-ripple-base.js'\n\nexport { mdcRipple }\n\nexport default BasePlugin({\n  mdcRipple\n})\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :classes=\"classes\"\n    :styles=\"styles\" \n    class=\"mdc-ripple\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport { CustomElementMixin } from '../base'\nimport { RippleMixin } from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins: [CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  }\n}\n</script>\n","<template>\n  <custom-button \n    ref=\"root\"\n    :class=\"classes\" \n    :style=\"styles\"\n    :href=\"href\" \n    :link=\"link\" \n    :disabled=\"disabled\"\n    v-on=\"listeners\">\n    <slot />\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-button-base',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  }\n}\n</script>\n","<script>\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport default {\n  name: 'mdc-button',\n  extends: mdcButtonBase,\n  props: {\n    raised: Boolean,\n    unelevated: Boolean,\n    outlined: Boolean,\n    dense: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-button': true,\n        'mdc-button--raised': this.raised,\n        'mdc-button--unelevated': this.unelevated,\n        'mdc-button--outlined': this.outlined,\n        'mdc-button--dense': this.dense\n      }\n    }\n  },\n  watch: {\n    raised() {\n      this.$set(this.classes, 'mdc-button--raised', this.raised)\n    },\n    unelevated() {\n      this.$set(this.classes, 'mdc-button--unelevated', this.unelevated)\n    },\n    outlined() {\n      this.$set(this.classes, 'mdc-button--outlined', this.outlined)\n    },\n    dense() {\n      this.$set(this.classes, 'mdc-button--dense', this.dense)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcButton from './mdc-button.vue'\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport { mdcButtonBase, mdcButton }\n\nexport default BasePlugin({\n  mdcButton\n})\n","import { BasePlugin } from '../base'\r\nimport mdcCard from './mdc-card.vue'\r\nimport mdcCardPrimaryAction from './mdc-card-primary-action.vue'\r\nimport mdcCardMedia from './mdc-card-media.vue'\r\nimport mdcCardHeader from './mdc-card-header.vue'\r\nimport mdcCardTitle from './mdc-card-title.vue'\r\nimport mdcCardSubtitle from './mdc-card-subtitle.vue'\r\nimport mdcCardText from './mdc-card-text.vue'\r\nimport mdcCardActions from './mdc-card-actions.vue'\r\nimport mdcCardActionButtons from './mdc-card-action-buttons.vue'\r\nimport mdcCardActionButton from './mdc-card-action-button.vue'\r\nimport mdcCardActionIcons from './mdc-card-action-icons.vue'\r\nimport mdcCardActionIcon from './mdc-card-action-icon.vue'\r\n\r\nexport {\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcCard,\r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n})\r\n","<template>\n  <div\n    :class=\"{'mdc-card--outlined': outlined}\"\n    class=\"mdc-card\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card',\n  props: {\n    outlined: Boolean\n  }\n}\n</script>\n","<template>\r\n  <custom-link \r\n    :class=\"classes\"\r\n    :style=\"styles\" \n    :link=\"link\" \r\n    class=\"mdc-card-primary-action mdc-card__primary-action\" \r\n    v-on=\"listeners\">\r\n    <slot />\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin, CustomLinkMixin } from '../base'\r\nimport { RippleMixin } from '../ripple/index'\r\nexport default {\r\n  name: 'mdc-card-primary-action',\r\n  mixins: [DispatchEventMixin, CustomLinkMixin, RippleMixin],\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <section \n    :class=\"classes\" \r\n    :style=\"styles\" \n    class=\"mdc-card-media mdc-card__media\">\r\n    <div \n      v-if=\"$slots.default\" \n      class=\"mdc-card__media-content\">\r\n      <slot/>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-media',\r\n  props: {\r\n    src: String,\r\n    square: Boolean\r\n  },\r\n  computed: {\r\n    styles() {\r\n      var styles = {\r\n        backgroundImage: `url(${this.src})`\r\n      }\r\n\r\n      return styles\r\n    },\r\n    classes() {\r\n      return this.square ? 'mdc-card__media--square' : 'mdc-card__media--16-9'\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\n  <section class=\"mdc-card-header mdc-card__primary\">\n    <slot>\n      <h1 \n        v-if=\"title\"\n        :class=\"{'mdc-card__title--large': largeTitle}\"\n        class=\"mdc-card__title\"\n      >\n        {{ title }}\n      </h1>\n      <h2 \n        v-if=\"subtitle\"\n        class=\"mdc-card__subtitle\"\n      >\n        {{ subtitle }} \n      </h2>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-header',\n  props: {\n    title: String,\n    subtitle: String,\n    'large-title': { type: Boolean, default: true }\n  }\n}\n</script>\n","<template>\n  <h1 \n    :class=\"{'mdc-card__title--large': large}\"\n    class=\"mdc-card-title mdc-card__title\">\n    <slot/>\n  </h1>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-title',\n  props: {\n    large: Boolean\n  }\n}\n</script>\n","<template>\n  <h2 class=\"mdc-card-subtitle mdc-card__subtitle\">\n    <slot/>\n  </h2>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'mdc-card-subtitle'\n}\n</script>\n","<template>\n  <section class=\"mdc-card-text mdc-card__supporting-text\">\n    <slot/>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-text'\n}\n</script>\n","<template>\r\n  <section \n    :class=\"classes\" \r\n    class=\"mdc-card-actions mdc-card__actions\">\r\n    <slot/>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-actions',\r\n  props: {\r\n    fullBleed: Boolean\r\n  },\r\n  computed: {\r\n    classes() {\r\n      return {\r\n        'mdc-card__actions--full-bleed': this.fullBleed\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-buttons mdc-card__action-buttons\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-action-buttons'\r\n}\r\n</script>\r\n","<script>\r\nimport { mdcButtonBase } from '../button'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-button',\r\n  extends: mdcButtonBase,\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-button': true,\r\n        'mdc-card__action': true,\r\n        'mdc-card-action-button': true\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-icons mdc-card__action-icons\">\r\n    <slot/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-card-action-icons'\r\n}\r\n</script>\r\n","<template>\r\n  <span \n    :class=\"classes\" \n    :style=\"styles\" \r\n    v-on=\"listeners\">\r\n    <slot>{{ icon }}</slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport { DispatchEventMixin } from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-icon',\r\n  mixins: [DispatchEventMixin],\r\n  props: {\r\n    icon: String\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {\r\n        'mdc-card-action-icon': true,\r\n        'material-icons': !!this.icon,\r\n        'mdc-card__action': true,\r\n        'mdc-card__action--icon': true,\r\n        'mdc-icon-toggle': true\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n  watch: {\r\n    icon() {\r\n      this.$set(this.classes, 'material-icons', !!this.icon)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ripple = new RippleBase(this, {\r\n      isUnbounded: () => true\r\n    })\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /** @return {!MDCRippleFoundation} */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the input element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setNativeControlAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the input element.\n   * @param {string} attr\n   */\n  removeNativeControlAttr(attr) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlAttr: (/* attr: string, value: string */) => {},\n      removeNativeControlAttr: (/* attr: string */) => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.updateAriaChecked_();\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    this.updateAriaChecked_();\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  updateAriaChecked_() {\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.isIndeterminate()) {\n      this.adapter_.setNativeControlAttr(\n        strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      this.adapter_.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","import { BasePlugin } from '../base'\nimport mdcCheckbox from './mdc-checkbox.vue'\n\nexport { mdcCheckbox }\n\nexport default BasePlugin({\n  mdcCheckbox\n})\n","<template>\n  <div\n    :class=\"formFieldClasses\"\n    class=\"mdc-checkbox-wrapper\">\n    <div\n      ref=\"root\"\n      :class=\"classes\"\n      :style=\"styles\"\n      class=\"mdc-checkbox\">\n      <input\n        ref=\"control\"\n        :id=\"vma_uid_\"\n        :name=\"name\"\n        :value=\"value\"\n        type=\"checkbox\"\n        class=\"mdc-checkbox__native-control\"\n        @change=\"onChange\">\n      <div class=\"mdc-checkbox__background\">\n        <svg\n          class=\"mdc-checkbox__checkmark\"\n          viewBox=\"0 0 24 24\">\n          <path\n            class=\"mdc-checkbox__checkmark-path\"\n            fill=\"none\"\n            stroke=\"white\"\n            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n        </svg>\n        <div class=\"mdc-checkbox__mixedmark\"/>\n      </div>\n    </div>\n    <label\n      ref=\"label\"\n      :for=\"vma_uid_\"\n    ><slot>{{ label }}</slot></label>\n  </div>\n</template>\n\n<script>\n/* global HTMLElement */\nimport MDCCheckboxFoundation from '@material/checkbox/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport { getCorrectEventName } from '@material/animation'\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\nimport { RippleBase } from '../ripple'\nimport { applyPassive } from '../base'\n\nexport default {\n  name: 'mdc-checkbox',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    checked: [Boolean, Array],\n    indeterminate: Boolean,\n    disabled: Boolean,\n    label: String,\n    'align-end': Boolean,\n    value: {\n      type: [String, Number],\n      default() {\n        return 'on'\n      }\n    },\n    name: String\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default\n    },\n    formFieldClasses() {\n      return {\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd\n      }\n    }\n  },\n  watch: {\n    checked: 'setChecked',\n    disabled(value) {\n      this.foundation.setDisabled(value)\n    },\n    indeterminate(value) {\n      this.foundation.setIndeterminate(value)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCCheckboxFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setNativeControlAttr: (attr, value) => {\n        this.$refs.control.setAttribute(attr, value)\n      },\n      removeNativeControlAttr: attr => {\n        this.$refs.control.removeAttribute(attr)\n      },\n      registerAnimationEndHandler: handler =>\n        this.$refs.root.addEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler\n        ),\n      deregisterAnimationEndHandler: handler =>\n        this.$refs.root.removeEventListener(\n          getCorrectEventName(window, 'animationend'),\n          handler\n        ),\n      registerChangeHandler: handler =>\n        this.$refs.control.addEventListener('change', handler),\n      deregisterChangeHandler: handler =>\n        this.$refs.control.removeEventListener('change', handler),\n      getNativeControl: () => this.$refs.control,\n      forceLayout: () => this.$refs.root.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.$el.parentNode)\n    })\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => RippleBase.isSurfaceActive(this.$refs.control),\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler, applyPassive())\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      }\n    })\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n    this.setChecked(this.checked)\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setIndeterminate(this.indeterminate)\n  },\n  beforeDestroy() {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    setChecked(checked) {\n      this.foundation.setChecked(\n        Array.isArray(checked) ? checked.indexOf(this.value) > -1 : checked\n      )\n    },\n\n    onChange() {\n      this.$emit('update:indeterminate', this.foundation.isIndeterminate())\n      const isChecked = this.foundation.isChecked()\n\n      if (Array.isArray(this.checked)) {\n        const idx = this.checked.indexOf(this.value)\n        if (isChecked) {\n          idx < 0 && this.$emit('change', this.checked.concat(this.value))\n        } else {\n          idx > -1 &&\n            this.$emit(\n              'change',\n              this.checked.slice(0, idx).concat(this.checked.slice(idx + 1))\n            )\n        }\n      } else {\n        this.$emit('change', isChecked)\n      }\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n\n  /**\n   * Registers an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval() {}\n\n  /**\n   * Returns the computed property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getComputedStyleValue(propertyName) {}\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyleProperty(propertyName, value) {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n      registerTrailingIconInteractionHandler: () => {},\n      deregisterTrailingIconInteractionHandler: () => {},\n      notifyInteraction: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /**\n     * Whether a trailing icon click should immediately trigger exit/removal of the chip.\n     * @private {boolean}\n     * */\n    this.shouldRemoveOnTrailingIconClick_ = true;\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n    /** @private {function(!Event): undefined} */\n    this.trailingIconInteractionHandler_ = (evt) => this.handleTrailingIconInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.registerTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.deregisterTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick_;\n  }\n\n  /**\n   * @param {boolean} shouldRemove\n   */\n  setShouldRemoveOnTrailingIconClick(shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter_.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      if (this.shouldRemoveOnTrailingIconClick_) {\n        this.beginExit();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   detail: {\n *     chip: {foundation: !MDCChipFoundation},\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipInteractionEventType;\n\nexport {MDCChipFoundation, MDCChipInteractionEventType};\n","<template>\n  <div\n    :class=\"classes\"\n    :style=\"styles\"\n    tabindex=\"0\"\n    v-on=\"$listeners\">\n    <i\n      v-if=\"haveleadingIcon\"\n      ref=\"leadingIcon\"\n      :class=\"leadingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--leading\"\n    >{{ leadingIcon }}</i>\n    <div\n      v-if=\"isFilter\"\n      class=\"mdc-chip__checkmark\">\n      <svg\n        class=\"mdc-chip__checkmark-svg\"\n        viewBox=\"-2 -3 30 30\">\n        <path\n          class=\"mdc-chip__checkmark-path\"\n          fill=\"none\"\n          stroke=\"black\"\n          d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n      </svg>\n    </div>\n    <div class=\"mdc-chip__text\">\n      <slot/>\n    </div>\n    <i\n      v-if=\"havetrailingIcon\"\n      ref=\"trailingIcon\"\n      :class=\"trailingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--trailing\"\n      tabindex=\"0\"\n      role=\"button\"\n    >{{ trailingIcon }}</i>\n  </div>\n</template>\napplyPassive\n<script>\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\nimport { CustomLinkMixin, emitCustomEvent, applyPassive } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true\n      },\n      styles: {}\n    }\n  },\n  computed: {\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      )\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      )\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className)\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className)\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerEventHandler: (evtType, handler) =>\n        this.$el.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) =>\n        this.$el.removeEventListener(evtType, handler),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n      notifyTrailingIconInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n\n      registerTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.addEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      deregisterTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.removeEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      notifyRemoval: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.REMOVAL_EVENT,\n          { chip: this },\n          true\n        )\n      },\n      getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this.$el).getPropertyValue(propertyName),\n      setStyleProperty: (property, value) =>\n        this.$set(this.styles, property, value)\n    })\n\n    this.foundation.init()\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    toggleSelected() {\n      this.foundation.toggleSelected()\n    },\n    isSelected() {\n      return this.foundation.isSelected()\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipInteractionEventType} from '../chip/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!MDCChipInteractionEventType): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!MDCChipInteractionEventType): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Removes the chip object from the chip set.\n   * @param {!Object} chip\n   */\n  removeChip(chip) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipFoundation, MDCChipInteractionEventType} from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      removeChip: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<!MDCChipFoundation>}\n     */\n    this.selectedChips_ = [];\n\n    /** @private {function(!MDCChipInteractionEventType): undefined} */\n    this.chipInteractionHandler_ = (evt) => this.handleChipInteraction_(evt);\n    /** @private {function(!MDCChipInteractionEventType): undefined} */\n    this.chipRemovalHandler_ = (evt) => this.handleChipRemoval_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  /**\n   * Selects the given chip. Deselects all other chips if the chip set is of the choice variant.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  select(chipFoundation) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE)) {\n      this.deselectAll_();\n    }\n    chipFoundation.setSelected(true);\n    this.selectedChips_.push(chipFoundation);\n  }\n\n  /**\n   * Deselects the given chip.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  deselect(chipFoundation) {\n    const index = this.selectedChips_.indexOf(chipFoundation);\n    if (index >= 0) {\n      this.selectedChips_.splice(index, 1);\n    }\n    chipFoundation.setSelected(false);\n  }\n\n  /** Deselects all selected chips. */\n  deselectAll_() {\n    this.selectedChips_.forEach((chipFoundation) => {\n      chipFoundation.setSelected(false);\n    });\n    this.selectedChips_.length = 0;\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipInteraction_(evt) {\n    const chipFoundation = evt.detail.chip.foundation;\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      if (chipFoundation.isSelected()) {\n        this.deselect(chipFoundation);\n      } else {\n        this.select(chipFoundation);\n      }\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipRemoval_(evt) {\n    const {chip} = evt.detail;\n    this.deselect(chip.foundation);\n    this.adapter_.removeChip(chip);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","import { BasePlugin } from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { mdcChip, mdcChipSet }\n\nexport default BasePlugin({\n  mdcChip,\n  mdcChipSet\n})\n","<template>\n  <div\n    :class=\"classes\"\n    v-on=\"$listeners\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation'\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n    input: [Boolean]\n  },\n  provide() {\n    return { mdcChipSet: this }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n        'mdc-chip-set--input': this.input\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      },\n      removeChip: chip => {\n        // TODO: may need refactoring\n        this.$nextTick(() => chip.$destroy())\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {}\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ROOT: 'mdc-dialog',\n  OPEN: 'mdc-dialog--open',\n  ANIMATING: 'mdc-dialog--animating',\n  BACKDROP: 'mdc-dialog__backdrop',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',\n  CANCEL_BTN: 'mdc-dialog__footer__button--cancel',\n};\n\nexport const strings = {\n  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',\n  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',\n  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',\n  ACCEPT_EVENT: 'MDCDialog:accept',\n  CANCEL_EVENT: 'MDCDialog:cancel',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCDialogFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyAccept: () => {},\n      notifyCancel: () => {},\n      trapFocusOnSurface: () => {},\n      untrapFocusOnSurface: () => {},\n      isDialog: (/* el: Element */) => /* boolean */ false,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));\n    this.isOpen_ = false;\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.BACKDROP)) {\n        this.cancel(true);\n      }\n    };\n    this.dialogClickHandler_ = (evt) => this.handleDialogClick_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.cancel(true);\n      }\n    };\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n  };\n\n  destroy() {\n    // Ensure that dialog is cleaned up when destroyed\n    if (this.isOpen_) {\n      this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n      this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n      this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n      this.adapter_.untrapFocusOnSurface();\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n      this.enableScroll_();\n    }\n  }\n\n  open() {\n    this.isOpen_ = true;\n    this.disableScroll_();\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  close() {\n    this.isOpen_ = false;\n    this.enableScroll_();\n    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.untrapFocusOnSurface();\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  accept(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyAccept();\n    }\n\n    this.close();\n  }\n\n  cancel(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyCancel();\n    }\n\n    this.close();\n  }\n\n  handleDialogClick_(evt) {\n    const {target} = evt;\n    if (this.adapter_.eventTargetHasClass(target, cssClasses.ACCEPT_BTN)) {\n      this.accept(true);\n    } else if (this.adapter_.eventTargetHasClass(target, cssClasses.CANCEL_BTN)) {\n      this.cancel(true);\n    }\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.adapter_.isDialog(evt.target)) {\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      if (this.isOpen_) {\n        this.adapter_.trapFocusOnSurface();\n      };\n    };\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","module.exports = function(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var basicTabbables = [];\n  var orderedTabbables = [];\n\n  // A node is \"available\" if\n  // - it's computed style\n  var isUnavailable = createIsUnavailable(elementDocument);\n\n  var candidateSelectors = [\n    'input',\n    'select',\n    'a[href]',\n    'textarea',\n    'button',\n    '[tabindex]',\n  ];\n\n  var candidates = el.querySelectorAll(candidateSelectors.join(','));\n\n  if (options.includeContainer) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n    if (\n      candidateSelectors.some(function(candidateSelector) {\n        return matches.call(el, candidateSelector);\n      })\n    ) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var candidate, candidateIndexAttr, candidateIndex;\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    candidate = candidates[i];\n    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10)\n    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;\n\n    if (\n      candidateIndex < 0\n      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')\n      || candidate.disabled\n      || isUnavailable(candidate, elementDocument)\n    ) {\n      continue;\n    }\n\n    if (candidateIndex === 0) {\n      basicTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        index: i,\n        tabIndex: candidateIndex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(function(a, b) {\n      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;\n    })\n    .map(function(a) {\n      return a.node\n    });\n\n  Array.prototype.push.apply(tabbableNodes, basicTabbables);\n\n  return tabbableNodes;\n}\n\nfunction createIsUnavailable(elementDocument) {\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed\n  var isOffCache = [];\n\n  // \"off\" means `display: none;`, as opposed to \"hidden\",\n  // which means `visibility: hidden;`. getComputedStyle\n  // accurately reflects visiblity in context but not\n  // \"off\" state, so we need to recursively check parents.\n\n  function isOff(node, nodeComputedStyle) {\n    if (node === elementDocument.documentElement) return false;\n\n    // Find the cached node (Array.prototype.find not available in IE9)\n    for (var i = 0, length = isOffCache.length; i < length; i++) {\n      if (isOffCache[i][0] === node) return isOffCache[i][1];\n    }\n\n    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = isOff(node.parentNode);\n    }\n\n    isOffCache.push([node, result]);\n\n    return result;\n  }\n\n  return function isUnavailable(node) {\n    if (node === elementDocument.documentElement) return false;\n\n    var computedStyle = elementDocument.defaultView.getComputedStyle(node);\n\n    if (isOff(node, computedStyle)) return true;\n\n    return computedStyle.visibility === 'hidden';\n  }\n}\n","var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n\n  var container = (typeof element === 'string')\n    ? document.querySelector(element)\n    : element;\n\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)\n    ? userOptions.returnFocusOnDeactivate\n    : true;\n  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)\n    ? userOptions.escapeDeactivates\n    : true;\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause,\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n\n    var defaultedActivateOptions = {\n      onActivate: (activateOptions && activateOptions.onActivate !== undefined)\n        ? activateOptions.onActivate\n        : config.onActivate,\n    };\n\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n\n    var defaultedDeactivateOptions = {\n      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate,\n      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate,\n    };\n\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n    // Ensure that the focused element doesn't capture the event that caused the focus trap activation\n    setTimeout(function () {\n      tryFocus(firstFocusNode());\n    }, 0);\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({ returnFocus: false });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    // Checking for a blur method here resolves a Firefox issue (#15)\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement)  return;\n\n  node.focus();\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;\n","import { BasePlugin } from '../base'\nimport mdcDialog from './mdc-dialog.vue'\n\nexport { mdcDialog }\n\nexport default BasePlugin({\n  mdcDialog\n})\n","<template>\n  <aside\n    ref=\"root\"\n    :class=\"classes\"\n    :style=\"styles\"\n    :aria-labelledby=\"'label' + vma_uid_\"\n    :aria-describedby=\"'desc' + vma_uid_\"\n    class=\"mdc-dialog\"\n    role=\"alertdialog\"\n  >\n    <div\n      ref=\"surface\"\n      :class=\"surfaceClasses\"\n      class=\"mdc-dialog__surface\">\n      <header\n        v-if=\"title\"\n        class=\"mdc-dialog__header\">\n        <h2\n          :id=\"'label' + vma_uid_\"\n          class=\"mdc-dialog__header__title\">\n          {{ title }}\n        </h2>\n      </header>\n      <section\n        :id=\"'desc' + vma_uid_\"\n        :class=\"bodyClasses\"\n        class=\"mdc-dialog__body\">\n        <slot />\n      </section>\n      <footer\n        v-if=\"accept||cancel\"\n        class=\"mdc-dialog__footer\">\n        <mdcButton\n          v-if=\"cancel\"\n          ref=\"cancel\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          class=\"mdc-dialog__footer__button mdc-dialog__footer__button--cancel\"\n          @click=\"onCancel\"\n        >{{ cancel }}</mdcButton>\n        <mdcButton\n          ref=\"accept\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          :disabled=\"acceptDisabled\"\n          class=\"mdc-dialog__footer__button mdc-dialog__footer__button--accept\"\n          @click=\"onAccept\"\n        >{{ accept }}</mdcButton>\n      </footer>\n    </div>\n    <div class=\"mdc-dialog__backdrop\"/>\n  </aside>\n</template>\n\n<script>\nimport MDCDialogFoundation from '@material/dialog/foundation'\nimport { createFocusTrapInstance } from '@material/dialog/util'\nimport { mdcButton } from '../button'\nimport { VMAUniqueIdMixin } from '../base'\n\nexport default {\n  name: 'mdc-dialog',\n  components: {\n    mdcButton: mdcButton\n  },\n  mixins: [VMAUniqueIdMixin],\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    title: { type: String },\n    accept: { type: String, default: 'Ok' },\n    acceptDisabled: Boolean,\n    cancel: { type: String },\n    accent: Boolean,\n    scrollable: Boolean,\n    open: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-theme--dark': this.dark\n      },\n      styles: {},\n      surfaceClasses: {},\n      bodyClasses: {\n        'mdc-dialog__body--scrollable': this.scrollable\n      }\n    }\n  },\n  watch: { open: 'onOpen_' },\n  mounted() {\n    if (this.accept) {\n      this.focusTrap = createFocusTrapInstance(\n        this.$refs.surface,\n        this.$refs.accept\n      )\n    }\n\n    this.foundation = new MDCDialogFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      addBodyClass: className => document.body.classList.add(className),\n      removeBodyClass: className => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$refs.root.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$refs.root.removeEventListener(evt, handler),\n      registerSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.addEventListener(evt, handler)\n      },\n      deregisterSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.removeEventListener(evt, handler)\n      },\n      registerDocumentKeydownHandler: handler =>\n        document.addEventListener('keydown', handler),\n      deregisterDocumentKeydownHandler: handler =>\n        document.removeEventListener('keydown', handler),\n      registerTransitionEndHandler: handler =>\n        this.$refs.surface.addEventListener('transitionend', handler),\n      deregisterTransitionEndHandler: handler =>\n        this.$refs.surface.removeEventListener('transitionend', handler),\n      notifyAccept: () => {\n        this.$emit('change', false)\n        this.$emit('accept')\n      },\n      notifyCancel: () => {\n        this.$emit('change', false)\n        this.$emit('cancel')\n      },\n      trapFocusOnSurface: () => this.focusTrap && this.focusTrap.activate(),\n      untrapFocusOnSurface: () => this.focusTrap && this.focusTrap.deactivate(),\n      isDialog: el => this.$refs.surface === el\n    })\n\n    this.foundation.init()\n    this.open && this.foundation.open()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {\n    onOpen_(value) {\n      if (value) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    onCancel() {\n      if (this.$listeners['validateCancel']) {\n        this.$emit('validateCancel', {\n          cancel: (notify = true) => {\n            // if notify = false, the dialog will close\n            // but the notifyAccept method will not be called\n            // so we need to notify listeners the open state\n            // is changing.\n            if (!notify) {\n              this.$emit('change', false)\n            }\n            this.foundation.cancel(notify)\n          }\n        })\n      } else {\n        this.foundation.cancel(true)\n      }\n    },\n    onAccept() {\n      if (this.$listeners['validate']) {\n        this.$emit('validate', {\n          accept: (notify = true) => {\n            // if notify = false, the dialog will close\n            // but the notifyAccept method will not be called\n            // so we need to notify listeners the open state\n            // is changing.\n            if (!notify) {\n              this.$emit('change', false)\n            }\n            this.foundation.accept(notify)\n          }\n        })\n      } else {\n        this.foundation.accept(true)\n      }\n    },\n    show() {\n      this.foundation.open()\n    },\n    close() {\n      this.foundation.close()\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createFocusTrap from 'focus-trap';\n\nexport function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    initialFocus: acceptButtonEl,\n    clickOutsideDeactivates: true,\n  });\n}\n","<template>\n  <nav class=\"mdc-permanent-drawer mdc-drawer--permanent mdc-typography\">\n    <nav class=\"mdc-drawer__content\">\n      <div \n        v-if=\"toolbarSpacer\" \n        class=\"mdc-drawer__toolbar-spacer\"/>\n      <slot />\n    </nav>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-permanent-drawer',\n  props: {\n    'toolbar-spacer': Boolean\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","<template>\n  <aside\n    :class=\"classes\"\n    class=\"mdc-persistent-drawer mdc-drawer--persistent mdc-typography\">\n    <nav\n      ref=\"drawer\"\n      class=\"mdc-drawer__drawer\">\n      <div\n        v-if=\"toolbarSpacer\"\n        class=\"mdc-drawer__toolbar-spacer\"/>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCPersistentDrawerFoundation from '@material/drawer/persistent/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-persistent-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'toolbar-spacer': Boolean,\n    open: Boolean\n  },\n  data() {\n    return {\n      classes: {}\n    }\n  },\n  watch: {\n    open: '_refresh'\n  },\n  mounted() {\n    const { FOCUSABLE_ELEMENTS } = MDCPersistentDrawerFoundation.strings\n\n    this.foundation = new MDCPersistentDrawerFoundation({\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: className => {\n        return this.$el.classList.contains(className)\n      },\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      registerTransitionEndHandler: handler => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: handler => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: handler => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: handler => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: value => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: el => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: el => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: el => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change', true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change', false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return (\n          getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n        )\n      },\n      isDrawer: el => {\n        return el === this.$refs.drawer\n      }\n    })\n    this.foundation && this.foundation.init()\n    this._refresh()\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()\n      } else {\n        this.foundation && this.foundation.close()\n      }\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","<template>\n  <aside\n    :class=\"classes\"\n    class=\"mdc-temporary-drawer mdc-drawer--temporary mdc-typography\">\n    <nav\n      ref=\"drawer\"\n      class=\"mdc-drawer__drawer\">\n      <div\n        v-if=\"toolbarSpacer\"\n        class=\"mdc-drawer__toolbar-spacer\"/>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCTemporaryDrawerFoundation from '@material/drawer/temporary/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-temporary-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: Boolean,\n    'toolbar-spacer': Boolean\n  },\n  data() {\n    return {\n      classes: {}\n    }\n  },\n  watch: {\n    open: '_refresh'\n  },\n  mounted() {\n    const {\n      FOCUSABLE_ELEMENTS,\n      OPACITY_VAR_NAME\n    } = MDCTemporaryDrawerFoundation.strings\n\n    this.foundation = new MDCTemporaryDrawerFoundation({\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: className => {\n        return this.$el.classList.contains(className)\n      },\n      addBodyClass: className => document.body.classList.add(className),\n      removeBodyClass: className => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(\n          util.remapEvent(evt),\n          handler,\n          util.applyPassive()\n        )\n      },\n      registerTransitionEndHandler: handler => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: handler => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: handler => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: handler => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: value => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      updateCssVariable: value => {\n        if (util.supportsCssCustomProperties()) {\n          this.$el.style.setProperty(OPACITY_VAR_NAME, value)\n        }\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: el => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: el => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: el => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change', true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change', false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return (\n          getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n        )\n      },\n      isDrawer: el => el === this.$refs.drawer\n    })\n    this.foundation && this.foundation.init()\n    this._refresh()\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()\n      } else {\n        this.foundation && this.foundation.close()\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <component\n    ref=\"drawer\"\n    :is=\"type\"\n    v-model=\"open_\"\n    :toolbar-spacer=\"toolbarSpacer\"\n    class=\"mdc-drawer\"\n    @change=\"onChange\"\n    @open=\"$emit('open')\"\n    @close=\"$emit('close')\" >\n    <slot />\n  </component>\n</template>\n\n<script>\nimport mdcPermanentDrawer from './mdc-permanent-drawer.vue'\nimport mdcPersistentDrawer from './mdc-persistent-drawer.vue'\nimport mdcTemporaryDrawer from './mdc-temporary-drawer.vue'\n\nconst media = new class {\n  get small() {\n    return (\n      this._small || (this._small = window.matchMedia('(max-width: 839px)'))\n    )\n  }\n\n  get large() {\n    return (\n      this._large || (this._large = window.matchMedia('(min-width: 1200px)'))\n    )\n  }\n}()\n\nexport default {\n  name: 'mdc-drawer',\n  components: {\n    'mdc-permanent-drawer': mdcPermanentDrawer,\n    'mdc-persistent-drawer': mdcPersistentDrawer,\n    'mdc-temporary-drawer': mdcTemporaryDrawer\n  },\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: Boolean,\n    permanent: Boolean,\n    persistent: Boolean,\n    temporary: Boolean,\n    drawerType: {\n      type: String,\n      validator: val => {\n        return val in ['temporary', 'persistent', 'permanent']\n      }\n    },\n    toolbarSpacer: Boolean,\n    toggleOn: String,\n    toggleOnSource: { type: Object, required: false },\n    openOn: String,\n    openOnSource: { type: Object, required: false },\n    closeOn: String,\n    closeOnSource: { type: Object, required: false }\n  },\n  provide() {\n    return { mdcDrawer: this }\n  },\n  data() {\n    return {\n      small: false,\n      large: false,\n      open_: false\n    }\n  },\n  computed: {\n    type() {\n      if (this.permanent) {\n        return 'mdc-permanent-drawer'\n      } else if (this.persistent) {\n        return 'mdc-persistent-drawer'\n      } else if (this.temporary) {\n        return 'mdc-temporary-drawer'\n      } else {\n        switch (this.drawerType) {\n          case 'permanent':\n            return 'mdc-permanent-drawer'\n          case 'persistent':\n            return 'mdc-persistent-drawer'\n          case 'temporary':\n            return 'mdc-temporary-drawer'\n          default:\n            return this.small ? 'mdc-temporary-drawer' : 'mdc-persistent-drawer'\n        }\n      }\n    },\n    isPermanent() {\n      return this.permanent || this.type === 'mdc-permanent-drawer'\n    },\n    isPersistent() {\n      return this.persistent || this.type === 'mdc-persistent-drawer'\n    },\n    isTemporary() {\n      return this.temporary || this.type === 'mdc-temporary-drawer'\n    },\n    isResponsive() {\n      return !(\n        this.permanent ||\n        this.persistent ||\n        this.temporary ||\n        this.drawerType\n      )\n    }\n  },\n  watch: {\n    open: 'onOpen_'\n  },\n  created() {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.small = media.small.matches\n      this.large = media.large.matches\n    }\n  },\n  mounted() {\n    if (this.toggleOn) {\n      this.toggleOnEventSource = this.toggleOnSource || this.$root\n      this.toggleOnEventSource.$on(this.toggleOn, this.toggle)\n    }\n    if (this.openOn) {\n      this.openOnEventSource = this.openOnSource || this.$root\n      this.openOnEventSource.$on(this.openOn, this.show)\n    }\n    if (this.closeOn) {\n      this.closeOnEventSource = this.closeOnSource || this.$root\n      this.closeOnEventSource.$on(this.closeOn, this.close)\n    }\n    media.small.addListener(this.refreshMedia)\n    media.large.addListener(this.refreshMedia)\n    this.$nextTick(() => this.refreshMedia())\n  },\n  beforeDestroy() {\n    media.small.removeListener(this.refreshMedia)\n    media.large.removeListener(this.refreshMedia)\n\n    if (this.toggleOnEventSource) {\n      this.toggleOnEventSource.$off(this.toggleOn, this.toggle)\n    }\n    if (this.openOnEventSource) {\n      this.openOnEventSource.$off(this.openOn, this.show)\n    }\n    if (this.closeOnEventSource) {\n      this.closeOnEventSource.$off(this.closeOn, this.close)\n    }\n  },\n  methods: {\n    onOpen_(value) {\n      this.isPermanent || (this.open_ = value)\n    },\n    onChange(event) {\n      this.$emit('change', event)\n      this.$root.$emit('vma:layout')\n    },\n    show() {\n      this.open_ = true\n    },\n    close() {\n      this.isPermanent || (this.open_ = false)\n    },\n    toggle() {\n      this.isPermanent || (this.isOpen() ? this.close() : this.show())\n    },\n    isOpen() {\n      return this.isPermanent || this.open_\n    },\n    refreshMedia() {\n      this.small = media.small.matches\n      this.large = media.large.matches\n      if (this.isResponsive) {\n        if (this.large) {\n          this.show()\n        } else {\n          this.close()\n        }\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcDrawer from './mdc-drawer.vue'\nimport mdcDrawerLayout from './mdc-drawer-layout.vue'\nimport mdcDrawerHeader from './mdc-drawer-header.vue'\nimport mdcDrawerList from './mdc-drawer-list.vue'\nimport mdcDrawerItem from './mdc-drawer-item.vue'\nimport mdcDrawerDivider from './mdc-drawer-divider.vue'\n\nexport {\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n}\n\nexport default BasePlugin({\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n})\n","<template>\n  <div class=\"mdc-drawer-layout\">\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-layout'\n}\n</script>\n","<template>\n  <header \n    v-if=\"show\" \n    class=\"mdc-drawer-header mdc-drawer__header\">\n    <div class=\"mdc-drawer__header-content\">\n      <slot />\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-header',\n  props: {\n    permanent: Boolean,\n    persistent: Boolean,\n    temporary: Boolean\n  },\n  inject: ['mdcDrawer'],\n  computed: {\n    show() {\n      if (this.temporary || this.persistent || this.permanent) {\n        return (\n          (this.temporary && this.mdcDrawer.isTemporary) ||\n          (this.persistent && this.mdcDrawer.isPersistent) ||\n          (this.permanent && this.mdcDrawer.isPermanent)\n        )\n      } else {\n        return true\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <nav \n    :class=\"classes\" \n    class=\"mdc-drawer-list mdc-list\">\n    <slot/>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-list',\n  props: {\n    dense: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-list--dense': this.dense\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <custom-link\n    :link=\"link\"\n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\"\n    class=\"mdc-drawer-item mdc-list-item\"\n    v-on=\"mylisteners\">\n    <span\n      v-if=\"hasStartDetail\"\n      class=\"mdc-list-item__graphic\">\n      <slot name=\"start-detail\">\n        <i\n          class=\"material-icons\"\n          aria-hidden=\"true\">{{ startIcon }}</i>\n      </slot>\n    </span>\n    <slot/>\n  </custom-link>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomLinkMixin } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-drawer-item',\n  inject: ['mdcDrawer'],\n  mixins: [DispatchEventMixin, CustomLinkMixin],\n  props: {\n    startIcon: String,\n    temporaryClose: {\n      type: Boolean,\n      default: true\n    },\n    activated: Boolean,\n    exactActiveClass: {\n      type: String,\n      default: 'mdc-list-item--activated'\n    }\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    mylisteners() {\n      return {\n        ...this.$listeners,\n        click: e => {\n          this.mdcDrawer.isTemporary &&\n            this.temporaryClose &&\n            this.mdcDrawer.close()\n          this.dispatchEvent(e)\n        }\n      }\n    },\n    itemClasses() {\n      return {\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    hasStartDetail() {\n      return this.startIcon || this.$slots['start-detail']\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple && this.ripple.destroy()\n    this.ripple = null\n  }\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-divider'\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcElevation from './mdc-elevation.vue'\n\nexport { mdcElevation }\n\nexport default BasePlugin({\n  mdcElevation\n})\n","<template>\n  <div class=\"mdc-elevation\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-elevation',\n  props: {}\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcFAB from './mdc-fab.vue'\n\nexport { mdcFAB }\n\nexport default BasePlugin({\n  mdcFAB\n})\n","<template>\n  <custom-button \n    :class=\"classes\" \n    :style=\"styles\" \n    :href=\"href\"\n    :link=\"link\" \n    class=\"mdc-fab\" \n    v-on=\"listeners\" >\n    <span class=\"mdc-fab__icon\">\n      <slot>{{ icon }}</slot>\n    </span>\n  </custom-button>\n</template>\n\n<script>\nimport { DispatchEventMixin, CustomButtonMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-fab',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  props: {\n    icon: String,\n    mini: Boolean,\n    absolute: Boolean,\n    fixed: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'material-icons': this.icon,\n        'mdc-fab--mini': this.mini,\n        'mdc-fab--absolute': this.absolute,\n        'mdc-fab--fixed': this.fixed\n      },\n      styles: {}\n    }\n  },\n  watch: {\n    icon() {\n      this.$set(this.classes, 'material-icons', this.icon)\n    },\n    mini() {\n      this.$set(this.classes, 'mdc-fab--mini', this.mini)\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcGridList from './mdc-grid-list.vue'\nimport mdcGridTile from './mdc-grid-tile.vue'\n\nexport { mdcGridList, mdcGridTile }\n\nexport default BasePlugin({\n  mdcGridList,\n  mdcGridTile\n})\n","<template>\n  <div class=\"mdc-grid-list\">\n    <ul \n      :class=\"classes\" \n      :style=\"styles\" \n      class=\"mdc-grid-list__tiles\">\n      <slot/>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MDCGridListFoundation from '@material/grid-list/foundation'\n\nexport default {\n  name: 'mdc-grid-list',\n  props: {\n    width: [String, Number],\n    ratio: String,\n    'narrow-gutter': Boolean,\n    'header-caption': Boolean,\n    'icon-align-start': Boolean,\n    'icon-align-end': Boolean,\n    'with-support-text': Boolean,\n    interactive: Boolean\n  },\n  provide() {\n    return { mdcGrid: this }\n  },\n  computed: {\n    classes() {\n      let classes = {}\n\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter\n      classes['mdc-grid-list--header-caption'] = this.headerCaption\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText\n      classes['mdc-grid-list--non-interactive'] = !this.interactive\n\n      return classes\n    },\n    styles() {\n      var defaultWidth = 200\n      return {\n        '--mdc-grid-list-tile-width': `${this.width || defaultWidth}px`\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCGridListFoundation({\n      getOffsetWidth: () => {\n        return this.$el.offsetWidth\n      },\n      getNumberOfTiles: () => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR\n        ).length\n      },\n      getOffsetWidthForTileAtIndex: index => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR\n        )[index].offsetWidth\n      },\n      setStyleForTilesElement: (property, value) => {\n        this.$el.querySelector(\n          MDCGridListFoundation.strings.TILES_SELECTOR\n        ).style[property] = value\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\" \n    :tabindex=\"isInteractive ? '0' : undefined\"\n    class=\"mdc-grid-tile\"\n    v-on=\"isInteractive ? listeners : clickListener\">\n    <div \n      v-if=\"cover\" \n      class=\"mdc-grid-tile__primary\">\n      <div \n        :style=\"{ backgroundImage: 'url(' + src + ')' }\"\n        class=\"mdc-grid-tile__primary-content\"/>\n    </div>\n    <div \n      v-else \n      class=\"mdc-grid-tile__primary\">\n      <img \n        :src=\"src\" \n        class=\"mdc-grid-tile__primary-content\" >\n    </div>\n    <span \n      v-if=\"title || supportText\" \n      class=\"mdc-grid-tile__secondary\">\n      <i \n        v-if=\"icon\" \n        class=\"mdc-grid-tile__icon material-icons\">{{ icon }}</i>\n      <span \n        v-if=\"title\" \n        class=\"mdc-grid-tile__title\">{{ title }}</span>\n      <span \n        v-if=\"supportText\" \n        class=\"mdc-grid-tile__support-text\">{{ supportText }}</span>\n    </span>\n  </li>\n</template>\n\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-grid-tile',\n  inject: ['mdcGrid'],\n  mixins: [DispatchEventMixin],\n  props: {\n    src: String,\n    cover: Boolean,\n    icon: String,\n    title: String,\n    'support-text': String,\n    selected: Boolean,\n    activated: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    clickListener() {\n      return { click: e => this.dispatchEvent(e) }\n    },\n    itemClasses() {\n      return {\n        'mdc-grid-tile--selected': this.selected,\n        'mdc-grid-tile--activated': this.activated\n      }\n    },\n    isInteractive() {\n      return this.mdcGrid && this.mdcGrid.interactive\n    },\n    hasStartDetail() {\n      return this.startIcon || this.$slots['start-detail']\n    },\n    hasEndDetail() {\n      return this.endIcon || this.$slots['end-detail']\n    }\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  mounted() {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy() {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\r\nimport mdcIcon from './mdc-icon.vue'\r\n\r\nexport { mdcIcon }\r\n\r\nexport default BasePlugin({\r\n  mdcIcon\r\n})\r\n","<template>\n  <span \n    :class=\"{'material-icons':!!icon}\" \n    class=\"mdc-icon mdc-icon--material\">\n    <slot>{{ icon }}</slot>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-icon',\n  props: {\n    icon: String\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","import { BasePlugin } from '../base'\nimport mdcIConToggle from './mdc-icon-toggle.vue'\n\nexport { mdcIConToggle }\n\nexport default BasePlugin({\n  mdcIConToggle\n})\n","<template>\n  <span \n    :class=\"classes\" \n    :style=\"styles\" \n    :tabindex=\"tabIndex\"\n    :data-toggle-on=\"toggleOnData\" \n    :data-toggle-off=\"toggleOffData\"\n    class=\"mdc-icon-toggle\"\n    role=\"button\"\n    aria-pressed=\"false\">\n    <i \n      :class=\"iconClasses\" \n      aria-hidden=\"true\">{{ text }}</i>\n  </span>\n</template>\n\n<script>\nimport MDCIconToggleFoundation from '@material/icon-toggle/foundation'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    toggleOn: [String, Object],\n    toggleOff: [String, Object],\n    value: Boolean,\n    disabled: Boolean,\n    accent: Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-icon-toggle--accent': this.accent\n      },\n      styles: {},\n      iconClasses: {},\n      tabIndex: 0,\n      text: ''\n    }\n  },\n  computed: {\n    toggleOnData() {\n      let toggle = this.toggleOn\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    },\n    toggleOffData() {\n      let toggle = this.toggleOff\n      return (\n        toggle &&\n        JSON.stringify(\n          typeof toggle === 'string'\n            ? {\n                content: toggle,\n                cssClass: 'material-icons'\n              }\n            : {\n                content: toggle.icon || toggle.content,\n                label: toggle.label,\n                cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n              }\n        )\n      )\n    }\n  },\n  watch: {\n    value(value) {\n      this.foundation && this.foundation.toggle(value)\n    },\n    disabled(disabled) {\n      this.foundation && this.foundation.setDisabled(disabled)\n    },\n    toggleOnData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    toggleOffData() {\n      this.foundation && this.foundation.refreshToggleData()\n    },\n    accent(value) {\n      this.$set(this.classes, 'mdc-icon-toggle--secondary', value)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCIconToggleFoundation({\n      addClass: className => this.$set(this.iconClasses, className, true),\n      removeClass: className => this.$delete(this.iconClasses, className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$el.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$el.removeEventListener(evt, handler),\n      setText: text => {\n        this.text = text\n      },\n      getTabIndex: () => this.tabIndex,\n      setTabIndex: tabIndex => {\n        this.tabIndex = tabIndex\n      },\n      getAttr: (name, value) => this.$el.getAttribute(name, value),\n      setAttr: (name, value) => {\n        this.$el.setAttribute(name, value)\n      },\n      rmAttr: name => {\n        this.$el.removeAttribute(name)\n      },\n      notifyChange: evtData => {\n        this.$emit('input', evtData.isOn)\n      }\n    })\n    this.foundation.init()\n    this.foundation.toggle(this.value)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation.isKeyboardActivated()\n    })\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n    this.ripple.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLayoutApp from './mdc-layout-app.vue'\n\nexport { mdcLayoutApp }\n\nexport default BasePlugin({\n  mdcLayoutApp\n})\n","<template>\n  <div class=\"mdc-layout-app\">\n\n    <div class=\"mdc-layout-app--toolbar-wrapper\">\n      <slot name=\"toolbar\" />\n    </div>\n\n    <div class=\"mdc-layout-app--main-container\">\n\n      <div class=\"mdc-layout-app--drawer-wrapper\">\n        <slot name=\"drawer\" />\n      </div>\n\n      <div class=\"mdc-layout-app--content-wrapper\">\n        <slot />\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-app'\n}\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div class=\"mdc-layout-grid__inner\">\n      <slot/>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-grid',\n  props: {\n    'fixed-column-width': Boolean,\n    'align-left': Boolean,\n    'align-right': Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-layout-grid': true,\n        'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth,\n        'mdc-layout-grid--align-left': this.alignLeft,\n        'mdc-layout-grid--align-right': this.alignRight\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div \n    :class=\"classes\" \n    class=\"mdc-layout-cell mdc-layout-grid__cell\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nconst spanOptions = {\n  type: [String, Number],\n  default: null,\n  validator: function(value) {\n    var num = Number(value)\n    return isFinite(num) && num <= 12 && num > 0\n  }\n}\n\nexport default {\n  name: 'mdc-layout-cell',\n  props: {\n    span: spanOptions,\n    order: spanOptions,\n    phone: spanOptions,\n    tablet: spanOptions,\n    desktop: spanOptions,\n    align: {\n      type: String,\n      validator: function(value) {\n        return ['top', 'bottom', 'middle'].indexOf(value) !== -1\n      }\n    }\n  },\n  computed: {\n    classes() {\n      let classes = []\n\n      if (this.span) {\n        classes.push(`mdc-layout-grid__cell--span-${this.span}`)\n      }\n\n      if (this.order) {\n        classes.push(`mdc-layout-grid__cell--order-${this.order}`)\n      }\n\n      if (this.phone) {\n        classes.push(`mdc-layout-grid__cell--span-${this.phone}-phone`)\n      }\n\n      if (this.tablet) {\n        classes.push(`mdc-layout-grid__cell--span-${this.tablet}-tablet`)\n      }\n\n      if (this.desktop) {\n        classes.push(`mdc-layout-grid__cell--span-${this.desktop}-desktop`)\n      }\n\n      if (this.align) {\n        classes.push(`mdc-layout-grid__cell--align-${this.align}`)\n      }\n\n      return classes\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\nimport mdcLayoutCell from './mdc-layout-cell.vue'\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\n\nexport { mdcLayoutGrid, mdcLayoutCell, mdcLayoutInnerGrid }\n\nexport default BasePlugin({\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n})\n","<template>\n  <div class=\"mdc-layout-inner-grid mdc-layout-grid__inner\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-inner-grid'\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n};\n\nexport const strings = {\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n  BUFFER_SELECTOR: '.mdc-linear-progress__buffer',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {transformStyleProperties} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCLinearProgressFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      getPrimaryBar: () => /* el: Element */ {},\n      getBuffer: () => /* el: Element */ {},\n      hasClass: (/* className: string */) => false,\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* el: Element, styleProperty: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));\n  }\n\n  init() {\n    this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress_ = 0;\n  }\n\n  setDeterminate(isDeterminate) {\n    this.determinate_ = isDeterminate;\n    if (this.determinate_) {\n      this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n    } else {\n      this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), 1);\n      this.setScale_(this.adapter_.getBuffer(), 1);\n    }\n  }\n\n  setProgress(value) {\n    this.progress_ = value;\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getPrimaryBar(), value);\n    }\n  }\n\n  setBuffer(value) {\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getBuffer(), value);\n    }\n  }\n\n  setReverse(isReversed) {\n    this.reverse_ = isReversed;\n    if (this.reverse_) {\n      this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n    } else {\n      this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n    }\n  }\n\n  open() {\n    this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n  }\n\n  close() {\n    this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n  }\n\n  setScale_(el, scaleValue) {\n    const value = 'scaleX(' + scaleValue + ')';\n    transformStyleProperties.forEach((transformStyleProperty) => {\n      this.adapter_.setStyle(el, transformStyleProperty, value);\n    });\n  }\n}\n","<template>\n  <div \n    :class=\"classes\" \n    :style=\"styles\" \n    role=\"progressbar\" \n    class=\"mdc-linear-progress\">\n    <div class=\"mdc-linear-progress__buffering-dots\"/>\n    <div \n      ref=\"buffer\" \n      class=\"mdc-linear-progress__buffer\"/>\n    <div \n      ref=\"primary\" \n      class=\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"/>\n    </div>\n    <div class=\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"/>\n    </div>\n  </div>  \n</template>\n\n<script>\nimport MDCLinearProgressFoundation from '@material/linear-progress/foundation'\n\nconst ProgressPropType = {\n  type: [Number, String],\n  validator(value) {\n    return Number(value) >= 0 && Number(value) <= 1\n  }\n}\n\nexport default {\n  name: 'mdc-linear-progress',\n  props: {\n    open: { type: Boolean, default: true },\n    indeterminate: Boolean,\n    reverse: Boolean,\n    accent: Boolean,\n    progress: ProgressPropType,\n    buffer: ProgressPropType\n  },\n  data() {\n    return {\n      classes: { 'mdc-linear-progress--accent': this.accent },\n      styles: {}\n    }\n  },\n  watch: {\n    open() {\n      if (this.open) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    progress() {\n      this.foundation.setProgress(Number(this.progress))\n    },\n    buffer() {\n      this.foundation.setBuffer(Number(this.buffer))\n    },\n    indeterminate() {\n      this.foundation.setDeterminate(!this.indeterminate)\n    },\n    reverse() {\n      this.foundation.setReverse(this.reverse)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLinearProgressFoundation({\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      getPrimaryBar: () => /* el: Element */ {\n        return this.$refs.primary\n      },\n      getBuffer: () => /* el: Element */ {\n        return this.$refs.buffer\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className)\n      },\n      setStyle: (el, styleProperty, value) => {\n        el.style[styleProperty] = value\n      }\n    })\n    this.foundation.init()\n\n    this.foundation.setReverse(this.reverse)\n    this.foundation.setProgress(Number(this.progress))\n    this.foundation.setBuffer(Number(this.buffer))\n    this.foundation.setDeterminate(!this.indeterminate)\n    if (this.open) {\n      this.foundation.open()\n    } else {\n      this.foundation.close()\n    }\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcLinearProgress from './mdc-linear-progress.vue'\n\nexport { mdcLinearProgress }\n\nexport default BasePlugin({\n  mdcLinearProgress\n})\n","import { BasePlugin } from '../base'\nimport mdcList from './mdc-list.vue'\nimport mdcListItem from './mdc-list-item.vue'\nimport mdcListDivider from './mdc-list-divider.vue'\nimport mdcListGroup from './mdc-list-group.vue'\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\n\nexport {\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n}\n\nexport default BasePlugin({\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n})\n","<template>\n  <ul \n    :class=\"classes\" \n    class=\"mdc-list\">\n    <slot/>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list',\n  props: {\n    dense: Boolean,\n    avatarList: Boolean,\n    twoLine: Boolean,\n    bordered: Boolean,\n    interactive: Boolean\n  },\n  provide() {\n    return { mdcList: this }\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list--dense': this.dense,\n        'mdc-list--avatar-list': this.avatarList,\n        'mdc-list--two-line': this.twoLine,\n        'mdc-list--bordered': this.bordered,\n        'mdc-list--non-interactive': !this.interactive\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"[classes, itemClasses]\"\n    :style=\"styles\" \n    :tabindex=\"isInteractive ? '0' : undefined\"   \n    class=\"mdc-list-item\"\n    v-on=\"isInteractive ? $listeners : {}\">\n\n    <span \n      v-if=\"hasStartDetail\" \n      class=\"mdc-list-item__graphic\">\n      <slot name=\"start-detail\"/>\n    </span>\n\n    <span \n      v-if=\"hasSecondary\" \n      class=\"mdc-list-item__text\">\n      <slot/>\n      <span class=\"mdc-list-item__secondary-text\">\n        <slot name=\"secondary\"/>\n      </span>\n    </span>\n    <slot v-else/>\n\n    <span \n      v-if=\"hasEndDetail\" \n      class=\"mdc-list-item__meta\">\n      <slot name=\"end-detail\"/>\n    </span>\n\n  </li>\n</template>\n\n<script>\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-list-item',\n  inject: ['mdcList'],\n  props: {\n    selected: Boolean,\n    activated: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    itemClasses() {\n      return {\n        'mdc-list-item--selected': this.selected,\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    isInteractive() {\n      return this.mdcList && this.mdcList.interactive\n    },\n    hasSecondary() {\n      return this.$slots['secondary'] && (this.mdcList && this.mdcList.twoLine)\n    },\n    hasEndDetail() {\n      return !!this.$slots['end-detail']\n    },\n    hasStartDetail() {\n      return !!this.$slots['start-detail']\n    }\n  },\n  watch: {\n    isInteractive(value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  mounted() {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy() {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple() {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple() {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <li \n    :class=\"classes\" \n    role=\"separator\" \n    class=\"mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-divider',\n  props: {\n    inset: Boolean,\n    padded: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'mdc-list-divider--inset': this.inset,\n        'mdc-list-divider--padded': this.padded\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-list-group\"><slot/></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group'\n}\n</script>\n","<template>\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot/></h3>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-header'\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-divider'\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  OPEN: 'mdc-menu--open',\n  ANIMATING_OPEN: 'mdc-menu--animating-open',\n  ANIMATING_CLOSED: 'mdc-menu--animating-closed',\n  SELECTED_LIST_ITEM: 'mdc-list-item--selected',\n};\n\n/** @enum {string} */\nconst strings = {\n  ITEMS_SELECTOR: '.mdc-menu__items',\n  SELECTED_EVENT: 'MDCMenu:selected',\n  CANCEL_EVENT: 'MDCMenu:cancel',\n  ARIA_DISABLED_ATTR: 'aria-disabled',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Amount of time to wait before triggering a selected event on the menu. Note that this time\n  // will most likely be bumped up once interactive lists are supported to allow for the ripple to\n  // animate before closing the menu\n  SELECTED_TRIGGER_DELAY: 50,\n  // Total duration of menu open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,\n  // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.\n  OFFSET_TO_MENU_HEIGHT_RATIO: 0.1,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasNecessaryDom() {}\n\n  /**\n   * @param {EventTarget} target\n   * @param {string} attributeName\n   * @return {string}\n   */\n  getAttributeForEventTarget(target, attributeName) {}\n\n  /** @return {{ width: number, height: number }} */\n  getInnerDimensions() {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {number} */\n  getNumberOfItems() {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerBodyClickHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterBodyClickHandler(handler) {}\n\n  /**\n   * @param {EventTarget} target\n   * @return {number}\n   */\n  getIndexForEventTarget(target) {}\n\n  /** @param {{index: number}} evtData */\n  notifySelected(evtData) {}\n\n  notifyCancel() {}\n\n  saveFocus() {}\n\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  focus() {}\n\n  /** @return {number} */\n  getFocusedItemIndex() /* number */ {}\n\n  /** @param {number} index */\n  focusItemAtIndex(index) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @param {{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttrForOptionAtIndex(index, attr, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   */\n  rmAttrForOptionAtIndex(index, attr) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForOptionAtIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  rmClassForOptionAtIndex(index, className) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   menuHeight: number,\n *   menuWidth: number,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasNecessaryDom: () => false,\n      getAttributeForEventTarget: () => {},\n      getInnerDimensions: () => ({}),\n      hasAnchor: () => false,\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getNumberOfItems: () => 0,\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      registerBodyClickHandler: () => {},\n      deregisterBodyClickHandler: () => {},\n      getIndexForEventTarget: () => 0,\n      notifySelected: () => {},\n      notifyCancel: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFocused: () => false,\n      focus: () => {},\n      getFocusedItemIndex: () => -1,\n      focusItemAtIndex: () => {},\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      setPosition: () => {},\n      setMaxHeight: () => {},\n      setAttrForOptionAtIndex: () => {},\n      rmAttrForOptionAtIndex: () => {},\n      addClassForOptionAtIndex: () => {},\n      rmClassForOptionAtIndex: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event)} */\n    this.clickHandler_ = (evt) => this.handlePossibleSelected_(evt);\n    /** @private {function(!Event)} */\n    this.keydownHandler_ = (evt) => this.handleKeyboardDown_(evt);\n    /** @private {function(!Event)} */\n    this.keyupHandler_ = (evt) => this.handleKeyboardUp_(evt);\n    /** @private {function(!Event)} */\n    this.documentClickHandler_ = (evt) => this.handleDocumentClick_(evt);\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.selectedTriggerTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {number} */\n    this.itemHeight_;\n    /** @private {Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {number} */\n    this.selectedIndex_ = -1;\n    /** @private {boolean} */\n    this.rememberSelection_ = false;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n\n    // A keyup event on the menu needs to have a corresponding keydown\n    // event on the menu. If the user opens the menu with a keydown event on a\n    // button, the menu will only get the key up event causing buggy behavior with selected elements.\n    /** @private {boolean} */\n    this.keyDownWithinMenu_ = false;\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    clearTimeout(this.selectedTriggerTimerId_);\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin 4-plet of margins from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /** @param {boolean} rememberSelection */\n  setRememberSelection(rememberSelection) {\n    this.rememberSelection_ = rememberSelection;\n    this.setSelectedIndex(-1);\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * @param {?number} focusIndex\n   * @private\n   */\n  focusOnOpen_(focusIndex) {\n    if (focusIndex === null) {\n      // If this instance of MDCMenu remembers selections, and the user has\n      // made a selection, then focus the last selected item\n      if (this.rememberSelection_ && this.selectedIndex_ >= 0) {\n        this.adapter_.focusItemAtIndex(this.selectedIndex_);\n        return;\n      }\n\n      this.adapter_.focus();\n      // If that doesn't work, focus first item instead.\n      if (!this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    } else {\n      this.adapter_.focusItemAtIndex(focusIndex);\n    }\n  }\n\n  /**\n   * Handle clicks and cancel the menu if not a child list-item\n   * @param {!Event} evt\n   * @private\n   */\n  handleDocumentClick_(evt) {\n    let el = evt.target;\n\n    while (el && el !== document.documentElement) {\n      if (this.adapter_.getIndexForEventTarget(el) !== -1) {\n        return;\n      }\n      el = el.parentNode;\n    }\n\n    this.adapter_.notifyCancel();\n    this.close(evt);\n  };\n\n  /**\n   * Handle keys that we want to repeat on hold (tab and arrows).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardDown_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key, shiftKey} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n    const isArrowUp = key === 'ArrowUp' || keyCode === 38;\n    const isArrowDown = key === 'ArrowDown' || keyCode === 40;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    // The menu needs to know if the keydown event was triggered on the menu\n    this.keyDownWithinMenu_ = isEnter || isSpace;\n\n    const focusedItemIndex = this.adapter_.getFocusedItemIndex();\n    const lastItemIndex = this.adapter_.getNumberOfItems() - 1;\n\n    if (shiftKey && isTab && focusedItemIndex === 0) {\n      this.adapter_.focusItemAtIndex(lastItemIndex);\n      evt.preventDefault();\n      return false;\n    }\n\n    if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {\n      this.adapter_.focusItemAtIndex(0);\n      evt.preventDefault();\n      return false;\n    }\n\n    // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling\n    if (isArrowUp || isArrowDown || isSpace) {\n      evt.preventDefault();\n    }\n\n    if (isArrowUp) {\n      if (focusedItemIndex === 0 || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(lastItemIndex);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex - 1);\n      }\n    } else if (isArrowDown) {\n      if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex + 1);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardUp_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key} = evt;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEscape = key === 'Escape' || keyCode === 27;\n\n    if (isEnter || isSpace) {\n      // If the keydown event didn't occur on the menu, then it should\n      // disregard the possible selected event.\n      if (this.keyDownWithinMenu_) {\n        this.handlePossibleSelected_(evt);\n      }\n      this.keyDownWithinMenu_ = false;\n    }\n\n    if (isEscape) {\n      this.adapter_.notifyCancel();\n      this.close();\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handlePossibleSelected_(evt) {\n    if (this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true') {\n      return;\n    }\n    const targetIndex = this.adapter_.getIndexForEventTarget(evt.target);\n    if (targetIndex < 0) {\n      return;\n    }\n    // Debounce multiple selections\n    if (this.selectedTriggerTimerId_) {\n      return;\n    }\n    this.selectedTriggerTimerId_ = setTimeout(() => {\n      this.selectedTriggerTimerId_ = 0;\n      this.close();\n      if (this.rememberSelection_) {\n        this.setSelectedIndex(targetIndex);\n      }\n      this.adapter_.notifySelected({index: targetIndex});\n    }, numbers.SELECTED_TRIGGER_DELAY);\n  }\n\n  /**\n   * @return {AutoLayoutMeasurements} Measurements used to position menu popup.\n   */\n  getAutoLayoutMeasurements_() {\n    const anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n\n    return {\n      viewport: viewport,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      menuHeight: this.dimensions_.height,\n      menuWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu.\n   * @return {Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, menuHeight, menuWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = menuHeight - availableTop;\n    const bottomOverflow = menuHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = menuWidth - availableLeft;\n    const rightOverflow = menuWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return corner;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    let x = 0;\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n      x = rightOffset;\n    } else {\n      const leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n      x = leftOffset;\n    }\n    return x;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {viewport, viewportDistance, anchorHeight, menuHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuFoundation.numbers;\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const canOverlapVertically = !avoidVerticalOverlap;\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to bottom\n      // anchor corner. Bottom margin is ignored in such cases.\n      if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));\n      }\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to top\n      // anchor corners. Top margin is ignored in that case.\n      if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));\n      }\n    }\n    return y;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n\n    // When maximum height is not specified, it is handled from css.\n    if (this.anchorCorner_ & CornerBit.BOTTOM) {\n      if (isBottomAligned) {\n        maxHeight = viewportDistance.top + this.anchorMargin_.top;\n      } else {\n        maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    if (!this.adapter_.hasAnchor()) {\n      return;\n    }\n\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuHeight = this.getMenuMaxHeight_(corner);\n    let verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    const position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset + 'px' : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset + 'px' : '0',\n    };\n    const {anchorWidth, menuHeight, menuWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu, otherwise keep corner.\n    if (anchorWidth / menuWidth > numbers.ANCHOR_TO_MENU_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that\n    // scale animation is \"anchored\" on the anchor.\n    if (!(this.anchorCorner_ & CornerBit.BOTTOM) &&\n        Math.abs(verticalOffset / menuHeight) > numbers.OFFSET_TO_MENU_HEIGHT_RATIO) {\n      const verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;\n      const originPercent = (corner & CornerBit.BOTTOM) ? 100 - verticalOffsetPercent : verticalOffsetPercent;\n      verticalAlignment = Math.round(originPercent * 100) / 100 + '%';\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Open the menu.\n   * @param {{focusIndex: ?number}=} options\n   */\n  open({focusIndex = null} = {}) {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);\n      this.focusOnOpen_(focusIndex);\n      this.adapter_.registerBodyClickHandler(this.documentClickHandler_);\n      if (!this.quickOpen_) {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu.\n   * @param {Event=} evt\n   */\n  close(evt = null) {\n    const targetIsDisabled = evt ?\n      this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true' :\n      false;\n\n    if (targetIsDisabled) {\n      return;\n    }\n\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);\n      if (!this.quickOpen_) {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n    this.isOpen_ = false;\n    this.adapter_.restoreFocus();\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {number} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /**\n   * @param {number} index Index of the item to set as selected.\n   */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');\n      this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses.SELECTED_LIST_ITEM);\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses.SELECTED_LIST_ITEM);\n    }\n  }\n}\n\nexport {MDCMenuFoundation, AnchorMargin};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n/**\n * Clamps a value between the minimum and the maximum, returning the clamped value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value));\n}\n\n\n/**\n * Returns the easing value to apply at time t, for a given cubic bezier curve.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Parameters are as follows:\n * - time: The current time in the animation, scaled between 0 and 1.\n * - x1: The x value of control point P1.\n * - y1: The y value of control point P1.\n * - x2: The x value of control point P2.\n * - y2: The y value of control point P2.\n * @param {number} time\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nfunction bezierProgress(time, x1, y1, x2, y2) {\n  return getBezierCoordinate_(solvePositionFromXValue_(time, x1, x2), y1, y2);\n}\n\n/**\n * Compute a single coordinate at a position point between 0 and 1.\n * c1 and c2 are the matching coordinate on control points P1 and P2, respectively.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} t\n * @param {number} c1\n * @param {number} c2\n * @return {number}\n */\nfunction getBezierCoordinate_(t, c1, c2) {\n  // Special case start and end.\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  // Step one - from 4 points to 3\n  let ic0 = t * c1;\n  let ic1 = c1 + t * (c2 - c1);\n  const ic2 = c2 + t * (1 - c2);\n\n  // Step two - from 3 points to 2\n  ic0 += t * (ic1 - ic0);\n  ic1 += t * (ic2 - ic1);\n\n  // Final step - last point\n  return ic0 + t * (ic1 - ic0);\n}\n\n/**\n * Project a point onto the Bezier curve, from a given X. Calculates the position t along the curve.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} xVal\n * @param {number} x1\n * @param {number} x2\n * @return {number}\n */\nfunction solvePositionFromXValue_(xVal, x1, x2) {\n  const EPSILON = 1e-6;\n  const MAX_ITERATIONS = 8;\n\n  if (xVal <= 0) {\n    return 0;\n  } else if (xVal >= 1) {\n    return 1;\n  }\n\n  // Initial estimate of t using linear interpolation.\n  let t = xVal;\n\n  // Try gradient descent to solve for t. If it works, it is very fast.\n  let tMin = 0;\n  let tMax = 1;\n  let value = 0;\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    value = getBezierCoordinate_(t, x1, x2);\n    const derivative = (getBezierCoordinate_(t + EPSILON, x1, x2) - value) / EPSILON;\n    if (Math.abs(value - xVal) < EPSILON) {\n      return t;\n    } else if (Math.abs(derivative) < EPSILON) {\n      break;\n    } else {\n      if (value < xVal) {\n        tMin = t;\n      } else {\n        tMax = t;\n      }\n      t -= (value - xVal) / derivative;\n    }\n  }\n\n  // If the gradient descent got stuck in a local minimum, e.g. because\n  // the derivative was close to 0, use a Dichotomy refinement instead.\n  // We limit the number of interations to 8.\n  for (let i = 0; Math.abs(value - xVal) > EPSILON && i < MAX_ITERATIONS; i++) {\n    if (value < xVal) {\n      tMin = t;\n      t = (t + tMax) / 2;\n    } else {\n      tMax = t;\n      t = (t + tMin) / 2;\n    }\n    value = getBezierCoordinate_(t, x1, x2);\n  }\n  return t;\n}\n\nexport {getTransformPropertyName, clamp, bezierProgress};\n","import { BasePlugin } from '../base'\nimport mdcMenu from './mdc-menu.vue'\nimport mdcMenuItem from './mdc-menu-item.vue'\nimport mdcMenuDivider from './mdc-menu-divider.vue'\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\n\nexport { mdcMenu, mdcMenuItem, mdcMenuDivider, mdcMenuAnchor }\n\nexport default BasePlugin({\n  mdcMenu,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n})\n","<template>\n  <div \n    ref=\"root\" \n    :class=\"classes\" \n    :style=\"styles\" \n    class=\"mdc-menu mdc-simple-menu\" \n    tabindex=\"-1\">\n    <ul \n      ref=\"items\" \n      class=\"mdc-simple-menu__items mdc-list\" \n      role=\"menu\" \n      aria-hidden=\"true\">\n      <slot/>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { MDCMenuFoundation } from '@material/menu/foundation'\nimport { getTransformPropertyName } from '@material/menu/util'\nimport { emitCustomEvent } from '../base'\n\nexport default {\n  name: 'mdc-menu',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    open: [Boolean, Object],\n    'quick-open': Boolean,\n    'anchor-corner': [String, Number],\n    'anchor-margin': Object\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {},\n      items: []\n    }\n  },\n  watch: {\n    open: 'onOpen_',\n    quickOpen(nv) {\n      this.foundation.setQuickOpen(nv)\n    },\n    anchorCorner(nv) {\n      this.foundation.setAnchorCorner(Number(nv))\n    },\n    anchorMargin(nv) {\n      this.foundation.setAnchorMargin(nv)\n    }\n  },\n  mounted() {\n    const refreshItems = () => {\n      this.items = [].slice.call(\n        this.$refs.items.querySelectorAll('.mdc-list-item[role]')\n      )\n      this.$emit('update')\n    }\n    this.slotObserver = new MutationObserver(() => refreshItems())\n    this.slotObserver.observe(this.$el, {\n      childList: true,\n      subtree: true\n    })\n\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$refs.root.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.$refs.items),\n      getAttributeForEventTarget: (target, attributeName) =>\n        target.getAttribute(attributeName),\n      getInnerDimensions: () => ({\n        width: this.$refs.items.offsetWidth,\n        height: this.$refs.items.offsetHeight\n      }),\n      hasAnchor: () =>\n        this.$refs.root.parentElement &&\n        this.$refs.root.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () =>\n        this.$refs.root.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => ({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }),\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.root.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.root.removeEventListener(type, handler),\n      registerBodyClickHandler: handler =>\n        document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: handler =>\n        document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: target => this.items.indexOf(target),\n      notifySelected: evtData => {\n        const evt = {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        }\n        this.$emit('change', false)\n        this.$emit('select', evt)\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.SELECTED_EVENT, evt)\n      },\n      notifyCancel: () => {\n        this.$emit('change', false)\n        this.$emit('cancel')\n        emitCustomEvent(this.$el, MDCMenuFoundation.strings.CANCEL_EVENT, {})\n      },\n      saveFocus: () => {\n        this._previousFocus = document.activeElement\n      },\n      restoreFocus: () => {\n        if (this._previousFocus) {\n          this._previousFocus.focus()\n        }\n      },\n      isFocused: () => document.activeElement === this.$refs.root,\n      focus: () => this.$refs.root.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: index => this.items[index].focus(),\n      isRtl: () =>\n        getComputedStyle(this.$refs.root).getPropertyValue('direction') ===\n        'rtl',\n      setTransformOrigin: origin => {\n        this.$set(\n          this.styles,\n          `${getTransformPropertyName(window)}-origin`,\n          origin\n        )\n      },\n      setPosition: position => {\n        this.$set(this.styles, 'left', position.left)\n        this.$set(this.styles, 'right', position.right)\n        this.$set(this.styles, 'top', position.top)\n        this.$set(this.styles, 'bottom', position.bottom)\n      },\n      setMaxHeight: height => {\n        this.$set(this.styles, 'max-height', height)\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => {\n        this.items[index].setAttribute(attr, value)\n      },\n      rmAttrForOptionAtIndex: (index, attr) => {\n        this.items[index].removeAttribute(attr)\n      },\n      addClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.add(className)\n      },\n      rmClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.remove(className)\n      }\n    })\n\n    refreshItems()\n    this.foundation.init()\n    if (this.anchorCorner !== void 0) {\n      this.foundation.setAnchorCorner(Number(this.anchorCorner))\n    }\n    if (this.anchorMargin !== void 0) {\n      this.foundation.setAnchorMargin(this.anchorMargin)\n    }\n  },\n  beforeDestroy() {\n    this._previousFocus = null\n    this.slotObserver.disconnect()\n    this.foundation.destroy()\n  },\n\n  methods: {\n    onOpen_(value) {\n      if (value) {\n        this.foundation.open(typeof value === 'object' ? value : void 0)\n      } else {\n        this.foundation.close()\n      }\n    },\n    show(options) {\n      this.foundation.open(options)\n    },\n    hide() {\n      this.foundation.close()\n    },\n    isOpen() {\n      return this.foundation ? this.foundation.isOpen() : false\n    }\n  }\n}\n</script>\n","<template>\n  <li \n    :tabindex=\"disabled?'-1':'0'\" \n    :aria-disabled=\"disabled\" \n    class=\"mdc-menu-item mdc-list-item\"\n    role=\"menuitem\"\n  >\n    <slot/>\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-item',\n  props: {\n    disabled: Boolean\n  }\n}\n</script>\n","<template>\n  <li \n    role=\"separator\" \n    class=\"mdc-menu-divider mdc-list-divider\"/>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-divider'\n}\n</script>\n","<template>\n  <div class=\"mdc-menu-anchor\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-anchor'\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Radio. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRadioAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n}\n\nexport default MDCRadioAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n    });\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\nexport default MDCRadioFoundation;\n","import { BasePlugin } from '../base'\nimport mdcRadio from './mdc-radio.vue'\n\nexport { mdcRadio }\n\nexport default BasePlugin({\n  mdcRadio\n})\n","<template>\n  <div\n    :class=\"formFieldClasses\"\n    class=\"mdc-radio-wrapper\">\n    <div\n      ref=\"root\"\n      :class=\"classes\"\n      :style=\"styles\"\n      class=\"mdc-radio\">\n      <input\n        ref=\"control\"\n        :id=\"vma_uid_\"\n        :name=\"name\"\n        type=\"radio\"\n        class=\"mdc-radio__native-control\"\n        @change=\"sync\">\n\n      <div\n        class=\"mdc-radio__background\">\n        <div class=\"mdc-radio__outer-circle\"/>\n        <div class=\"mdc-radio__inner-circle\"/>\n      </div>\n    </div>\n    <label\n      ref=\"label\"\n      :for=\"vma_uid_\"><slot>{{ label }}</slot></label>\n  </div>\n</template>\n\n<script>\nimport MDCRadioFoundation from '@material/radio/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\nimport { RippleBase } from '../ripple'\nimport { applyPassive } from '../base'\n\nexport default {\n  name: 'mdc-radio',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'picked',\n    event: 'change'\n  },\n  props: {\n    name: { type: String, required: true },\n    value: String,\n    picked: String,\n    checked: Boolean,\n    label: String,\n    'align-end': Boolean,\n    disabled: Boolean\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {},\n      formFieldClasses: {\n        'mdc-form-field': this.label,\n        'mdc-form-field--align-end': this.label && this.alignEnd\n      }\n    }\n  },\n  watch: {\n    checked: 'setChecked',\n    disabled(value) {\n      this.foundation.setDisabled(value)\n    }\n  },\n  mounted() {\n    // add foundation\n    this.foundation = new MDCRadioFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      getNativeControl: () => this.$refs.control\n    })\n\n    // add ripple\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => false,\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler, applyPassive())\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      }\n    })\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n\n    this.foundation.setValue(this.value ? this.value : this.label)\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setChecked(\n      this.checked || this.picked == this.foundation.getValue()\n    )\n\n    // refresh model\n    this.checked && this.sync()\n  },\n  beforeDestroy() {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    setChecked(checked) {\n        this.foundation.setChecked(checked)\n    },\n    isChecked() {\n      return this.foundation.isChecked()\n    },\n    sync() {\n      this.$emit('change', this.foundation.getValue())\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n};\n\nconst strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getSelectedIndex: () => /* number */ -1,\n      setSelectedIndex: (/* index: number */) => {},\n      setDisabled: (/* disabled: boolean */) => {},\n      getValue: () => /* string */ '',\n      setValue: (/* value: string */) => {},\n      isRtl: () => false,\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    this.focusHandler_ = (evt) => this.handleFocus_(evt);\n    this.blurHandler_ = (evt) => this.handleBlur_(evt);\n    this.selectionHandler_ = (evt) => this.handleSelect_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerInteractionHandler('change', this.selectionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterInteractionHandler('change', this.selectionHandler_);\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.floatLabelWithValue_();\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.adapter_.setDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  floatLabelWithValue_() {\n    const optionHasValue = this.adapter_.getValue().length > 0;\n    this.adapter_.floatLabel(optionHasValue);\n    this.notchOutline(optionHasValue);\n  }\n\n  handleFocus_() {\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n  }\n\n  handleBlur_() {\n    this.floatLabelWithValue_();\n    this.adapter_.deactivateBottomLine();\n  }\n\n  handleSelect_() {\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\n  <label\n    :class=\"labelClasses\"\n    class=\"mdc-floating-label\">\n    <slot />\n  </label>\n</template>\n\n<script>\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\n\nexport default {\n  name: 'mdc-select-label',\n  data() {\n    return {\n      labelClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCFloatingLabelFoundation({\n      addClass: className => {\n        this.$set(this.labelClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.labelClasses, className)\n      },\n      getWidth: () => this.$el.offsetWidth,\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\n  <div\n    :class=\"lineClasses\"\n    :style=\"lineStyles\"\n    class=\"mdc-line-ripple\"/>\n</template>\n\n<script>\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\n\nexport default {\n  name: 'mdc-select-line-ripple',\n  data() {\n    return {\n      lineClasses: {},\n      lineStyles: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLineRippleFoundation({\n      addClass: className => {\n        this.$set(this.lineClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.lineClasses, className)\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      setStyle: (name, value) => {\n        this.$set(this.lineStyles, name, value)\n      },\n      registerEventHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterEventHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","import { BasePlugin } from '../base'\nimport mdcSelect from './mdc-select.vue'\n\nexport { mdcSelect }\n\nexport default BasePlugin({\n  mdcSelect\n})\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"rootClasses\"\n    :style=\"styles\"\n    class=\"mdc-select\">\n    <select\n      ref=\"native_control\"\n      v-bind=\"$attrs\"\n      class=\"mdc-select__native-control\"\n      v-on=\"listeners\">\n      <option\n        v-if=\"!!label\"\n        class=\"mdc-option\"\n        value=\"\"\n        disabled\n        selected/>\n      <slot/>\n    </select>\n    <!-- label -->\n    <select-label\n      v-if=\"label\"\n      ref=\"label\">{{ label }}</select-label>\n    <!-- line ripple -->\n    <select-line-riple\n      v-if=\"!outlined\"\n      ref=\"line\"/>\n    <!-- outline -->\n    <select-notched-outline\n      v-if=\"outlined\"\n      ref=\"outline\"\n    />\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\n\nimport SelectLabel from './mdc-select-label.vue'\nimport SelectLineRiple from './mdc-select-line-ripple.vue'\nimport SelectNotchedOutline from './mdc-select-notched-outline.vue'\n\nexport default {\n  name: 'mdc-select',\n  components: {\n    SelectLabel,\n    SelectLineRiple,\n    SelectNotchedOutline\n  },\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    box: Boolean,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': this.box,\n        'mdc-select--outlined': this.outlined,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.$emit('change', event.target.value)\n      }\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value)\n    },\n    value: 'refreshIndex'\n  },\n  mounted() {\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      activateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.activate()\n        }\n      },\n      deactivateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.deactivate()\n        }\n      },\n      setDisabled: disabled => (this.$refs.native_control.disabled = disabled),\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.native_control.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.native_control.removeEventListener(type, handler),\n      getSelectedIndex: () => this.$refs.native_control.selectedIndex,\n      setSelectedIndex: index =>\n        (this.$refs.native_control.selectedIndex = index),\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n      isRtl: () => {\n        return (\n          window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n          'rtl'\n        )\n      },\n      notchOutline: (labelWidth, isRtl) => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.notch(labelWidth, isRtl)\n        }\n      },\n      closeOutline: () => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.closeNotch()\n        }\n      },\n      hasOutline: () => !!this.$refs.outline,\n      floatLabel: value => {\n        if (this.$refs.label) {\n          this.$refs.label.foundation.float(value)\n        }\n      },\n      hasLabel: () => !!this.$refs.label,\n      getLabelWidth: () => {\n        if (this.$refs.label) {\n          return this.$refs.label.foundation.getWidth()\n        }\n      }\n    })\n\n    this.foundation.init()\n\n    this.foundation.setDisabled(this.disabled)\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.foundation.setSelectedIndex(idx)\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <div\n      ref=\"outlined\"\n      :class=\"outlinedClasses\"\n      class=\"mdc-notched-outline\">\n      <svg>\n        <path\n          ref=\"outlinedPath\"\n          class=\"mdc-notched-outline__path\"/>\n      </svg>\n    </div>\n    <div\n      ref=\"outlinedIdle\"\n      class=\"mdc-notched-outline__idle\"/>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundationFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-select-notched-outline',\n  data() {\n    return {\n      outlinedClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundationFoundation({\n      getWidth: () => this.$refs.outlined.offsetWidth,\n      getHeight: () => this.$refs.outlined.offsetHeight,\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n      setOutlinePathAttr: value => {\n        const path = this.$refs.outlinedPath\n        path.setAttribute('d', value)\n      },\n      getIdleOutlineStyleValue: propertyName => {\n        return window\n          .getComputedStyle(this.$refs.outlinedIdle)\n          .getPropertyValue(propertyName)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Adapter for MDC Slider.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Slider into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSliderAdapter {\n  /**\n   * Returns true if className exists for the slider Element\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the slider Element\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the slider Element\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns a string if attribute name exists on the slider Element,\n   * otherwise returns null\n   * @param {string} name\n   * @return {?string}\n   */\n  getAttribute(name) {}\n\n  /**\n   * Sets attribute name on slider Element to value\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttribute(name, value) {}\n\n  /**\n   * Removes attribute name from slider Element\n   * @param {string} name\n   */\n  removeAttribute(name) {}\n\n  /**\n   * Returns the bounding client rect for the slider Element\n   * @return {?ClientRect}\n   */\n  computeBoundingRect() {}\n\n  /**\n   * Returns the tab index of the slider Element\n   * @return {number}\n   */\n  getTabIndex() {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * Deregisters an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * Emits a custom event MDCSlider:input from the root\n   */\n  notifyInput() {}\n\n  /**\n   * Emits a custom event MDCSlider:change from the root\n   */\n  notifyChange() {}\n\n  /**\n   * Sets a style property of the thumb container element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setThumbContainerStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets a style property of the track element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setTrackStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets the inner text of the pin marker to the passed value\n   * @param {number} value\n   */\n  setMarkerValue(value) {}\n\n  /**\n   * Appends the passed number of track markers to the track mark container element\n   * @param {number} numMarkers\n   */\n  appendTrackMarkers(numMarkers) {}\n\n  /**\n   * Removes all track markers fromt he track mark container element\n   */\n  removeTrackMarkers() {}\n\n  /**\n   * Sets a style property of the last track marker to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setLastTrackMarkersStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns true if the root element is RTL, otherwise false\n   * @return {boolean}\n   */\n  isRTL() {}\n}\n\nexport default MDCSliderAdapter;\n","import { BasePlugin } from '../base'\nimport mdcSlider from './mdc-slider.vue'\n\nexport { mdcSlider }\n\nexport default BasePlugin({\n  mdcSlider\n})\n","<template>\n  <div\n    :class=\"classes\"\n    class=\"mdc-slider\"\n    tabindex=\"0\"\n    role=\"slider\">\n    <div class=\"mdc-slider__track-container\">\n      <div\n        :style=\"trackStyles\"\n        class=\"mdc-slider__track\"/>\n      <div\n        v-if=\"hasMarkers\"\n        class=\"mdc-slider__track-marker-container\">\n        <div\n          v-for=\"markerNum in numMarkers\"\n          :key=\"markerNum\"\n          :style=\"(markerNum == numMarkers) ? lastTrackMarkersStyles : {}\"\n          class=\"mdc-slider__track-marker\"\n        />\n      </div>\n    </div>\n    <div\n      ref=\"thumbContainer\"\n      :style=\"thumbStyles\"\n      class=\"mdc-slider__thumb-container\">\n      <div\n        v-if=\"isDiscrete\"\n        class=\"mdc-slider__pin\">\n        <span class=\"mdc-slider__pin-value-marker\">{{ markerValue }}</span>\n      </div>\n      <svg\n        class=\"mdc-slider__thumb\"\n        width=\"21\"\n        height=\"21\">\n        <circle\n          cx=\"10.5\"\n          cy=\"10.5\"\n          r=\"7.875\"/>\n      </svg>\n      <div class=\"mdc-slider__focus-ring\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSliderFoundation from '@material/slider/foundation'\nimport { DispatchFocusMixin, applyPassive } from '../base'\n\nexport default {\n  name: 'mdc-slider',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: [Number, String],\n    min: { type: [Number, String], default: 0 },\n    max: { type: [Number, String], default: 100 },\n    step: { type: [Number, String], default: 0 },\n    displayMarkers: Boolean,\n    disabled: Boolean,\n    layoutOn: String,\n    layoutOnSource: { type: Object, required: false }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-slider--discrete': !!this.step,\n        'mdc-slider--display-markers': this.displayMarkers\n      },\n      trackStyles: {},\n      lastTrackMarkersStyles: {},\n      thumbStyles: {},\n      markerValue: '',\n      numMarkers: 0\n    }\n  },\n  computed: {\n    isDiscrete() {\n      return !!this.step\n    },\n    hasMarkers() {\n      return !!this.step && this.displayMarkers && this.numMarkers\n    }\n  },\n  watch: {\n    value() {\n      if (this.foundation.getValue() !== Number(this.value)) {\n        this.foundation.setValue(this.value)\n      }\n    },\n    min() {\n      this.foundation.setMin(Number(this.min))\n    },\n    max() {\n      this.foundation.setMax(Number(this.max))\n    },\n    step() {\n      this.foundation.setStep(Number(this.step))\n    },\n    disabled() {\n      this.foundation.setDisabled(this.disabled)\n    }\n  },\n  mounted() {\n    this.foundation = new MDCSliderFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      addClass: className => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.classes, className, true)\n      },\n      getAttribute: name => this.$el.getAttribute(name),\n      setAttribute: (name, value) => this.$el.setAttribute(name, value),\n      removeAttribute: name => this.$el.removeAttribute(name),\n      computeBoundingRect: () => this.$el.getBoundingClientRect(),\n      getTabIndex: () => this.$el.tabIndex,\n      registerInteractionHandler: (type, handler) => {\n        this.$el.addEventListener(type, handler, applyPassive())\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$el.removeEventListener(type, handler, applyPassive())\n      },\n      registerThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.addEventListener(\n          type,\n          handler,\n          applyPassive()\n        )\n      },\n      deregisterThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.removeEventListener(\n          type,\n          handler,\n          applyPassive()\n        )\n      },\n      registerBodyInteractionHandler: (type, handler) => {\n        document.body.addEventListener(type, handler)\n      },\n      deregisterBodyInteractionHandler: (type, handler) => {\n        document.body.removeEventListener(type, handler)\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      },\n      notifyInput: () => {\n        this.$emit('input', this.foundation.getValue())\n      },\n      notifyChange: () => {\n        this.$emit('change', this.foundation.getValue())\n      },\n      setThumbContainerStyleProperty: (propertyName, value) => {\n        this.$set(this.thumbStyles, propertyName, value)\n      },\n      setTrackStyleProperty: (propertyName, value) => {\n        this.$set(this.trackStyles, propertyName, value)\n      },\n      setMarkerValue: value => {\n        this.markerValue = value\n      },\n      appendTrackMarkers: numMarkers => {\n        this.numMarkers = numMarkers\n      },\n      removeTrackMarkers: () => {\n        this.numMarkers = 0\n      },\n      setLastTrackMarkersStyleProperty: (propertyName, value) => {\n        this.$set(this.lastTrackMarkersStyles, propertyName, value)\n      },\n      isRTL: () => false\n    })\n\n    this.foundation.init()\n    this.foundation.setDisabled(this.disabled)\n    if (Number(this.min) <= this.foundation.getMax()) {\n      this.foundation.setMin(Number(this.min))\n      this.foundation.setMax(Number(this.max))\n    } else {\n      this.foundation.setMax(Number(this.max))\n      this.foundation.setMin(Number(this.min))\n    }\n    this.foundation.setStep(Number(this.step))\n    this.foundation.setValue(Number(this.value))\n    if (this.hasMarkers) {\n      this.foundation.setupTrackMarker()\n    }\n\n    this.$root.$on('vma:layout', this.layout)\n\n    if (this.layoutOn) {\n      this.layoutOnEventSource = this.layoutOnSource || this.$root\n      this.layoutOnEventSource.$on(this.layoutOn, this.layout)\n    }\n  },\n  beforeDestroy() {\n    this.$root.$off('vma:layout', this.layout)\n    if (this.layoutOnEventSource) {\n      this.layoutOnEventSource.$off(this.layoutOn, this.layout)\n    }\n    this.foundation.destroy()\n  },\n  methods: {\n    layout() {\n      this.$nextTick(() => {\n        this.foundation && this.foundation.layout()\n      })\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcSnackbar from './mdc-snackbar.vue'\n\nexport { mdcSnackbar }\n\nexport default BasePlugin({\n  mdcSnackbar\n})\n","<template>\n  <div \n    ref=\"root\" \n    :class=\"classes\" \n    :aria-hidden=\"hidden\" \n    class=\"mdc-snackbar\" \n    aria-live=\"assertive\" \n    aria-atomic=\"true\">\n    <div class=\"mdc-snackbar__text\">{{ message }}</div>\n    <div class=\"mdc-snackbar__action-wrapper\">\n      <button \n        ref=\"button\" \n        :aria-hidden=\"actionHidden\" \n        type=\"button\" \n        class=\"mdc-snackbar__action-button\">{{ actionText }}</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation'\nimport { getCorrectEventName } from '@material/animation'\n\nexport default {\n  name: 'mdc-snackbar',\n  model: {\n    prop: 'snack',\n    event: 'queued'\n  },\n  props: {\n    'align-start': Boolean,\n    snack: Object,\n    event: String,\n    'event-source': {\n      type: Object,\n      required: false,\n      default() {\n        return this.$root\n      }\n    },\n    'dismisses-on-action': {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-snackbar--align-start': this.alignStart\n      },\n      message: '',\n      actionText: '',\n      hidden: false,\n      actionHidden: false\n    }\n  },\n  watch: {\n    snack: 'onSnack'\n  },\n  mounted() {\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      setAriaHidden: () => (this.hidden = true),\n      unsetAriaHidden: () => (this.hidden = false),\n      setActionAriaHidden: () => (this.actionHidden = true),\n      unsetActionAriaHidden: () => (this.actionHidden = false),\n      setActionText: text => {\n        this.actionText = text\n      },\n      setMessageText: text => {\n        this.message = text\n      },\n      setFocus: () => this.$refs.button.focus(),\n      visibilityIsHidden: () => document.hidden,\n      registerCapturedBlurHandler: handler =>\n        this.$refs.button.addEventListener('blur', handler, true),\n      deregisterCapturedBlurHandler: handler =>\n        this.$refs.button.removeEventListener('blur', handler, true),\n      registerVisibilityChangeHandler: handler =>\n        document.addEventListener('visibilitychange', handler),\n      deregisterVisibilityChangeHandler: handler =>\n        document.removeEventListener('visibilitychange', handler),\n      registerCapturedInteractionHandler: (evt, handler) =>\n        document.body.addEventListener(evt, handler, true),\n      deregisterCapturedInteractionHandler: (evt, handler) =>\n        document.body.removeEventListener(evt, handler, true),\n      registerActionClickHandler: handler =>\n        this.$refs.button.addEventListener('click', handler),\n      deregisterActionClickHandler: handler =>\n        this.$refs.button.removeEventListener('click', handler),\n      registerTransitionEndHandler: handler => {\n        const root = this.$refs.root\n        root &&\n          root.addEventListener(\n            getCorrectEventName(window, 'transitionend'),\n            handler\n          )\n      },\n      deregisterTransitionEndHandler: handler => {\n        const root = this.$refs.root\n        root &&\n          root.removeEventListener(\n            getCorrectEventName(window, 'transitionend'),\n            handler\n          )\n      },\n      notifyShow: () => this.$emit('show'),\n      notifyHide: () => this.$emit('hide')\n    })\n    this.foundation.init()\n\n    // if event specified use it, else if no snack prop then use default.\n    this.eventName =\n      this.event || (this.snack === void 0 ? 'show-snackbar' : null)\n    if (this.eventName) {\n      this.eventSource.$on(this.eventName, this.show)\n    }\n    this.foundation.setDismissOnAction(this.dismissesOnAction)\n  },\n  beforeDestroy() {\n    if (this.eventSource) {\n      this.eventSource.$off(this.eventName, this.show)\n    }\n    this.foundation.destroy()\n  },\n  methods: {\n    onSnack(snack) {\n      if (snack && snack.message) {\n        this.foundation.show(snack)\n        this.$emit('queued', snack)\n      }\n    },\n    show(data) {\n      this.foundation.show(data)\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSwitch from './mdc-switch.vue'\n\nexport { mdcSwitch }\n\nexport default BasePlugin({\n  mdcSwitch\n})\n","<template>\n  <div\n    :class=\"{\n      'mdc-form-field': hasLabel,\n      'mdc-form-field--align-end': hasLabel && alignEnd\n    }\"\n    class=\"mdc-switch-wrapper\" >\n\n    <div\n      :class=\"{'mdc-switch--disabled': disabled }\"\n      class=\"mdc-switch\">\n      <input\n        ref=\"control\"\n        :name=\"name\"\n        :id=\"vma_uid_\"\n        :checked=\"checked\"\n        :disabled=\"disabled\"\n        type=\"checkbox\"\n        class=\"mdc-switch__native-control\"\n        @change=\"onChanged\" >\n\n      <div class=\"mdc-switch__background\">\n        <div class=\"mdc-switch__knob\"/>\n      </div>\n\n    </div>\n\n    <label\n      v-if=\"hasLabel\"\n      :for=\"vma_uid_\"\n      class=\"mdc-switch-label\">\n      <slot>{{ label }}</slot>\n    </label>\n\n  </div>\n</template>\n\n<script>\nimport { DispatchFocusMixin, VMAUniqueIdMixin } from '../base'\n\nexport default {\n  name: 'mdc-switch',\n  mixins: [DispatchFocusMixin, VMAUniqueIdMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    checked: Boolean,\n    label: String,\n    alignEnd: Boolean,\n    disabled: Boolean,\n    value: {\n      type: String,\n      default() {\n        return 'on'\n      }\n    },\n    name: String\n  },\n  computed: {\n    hasLabel() {\n      return this.label || this.$slots.default\n    }\n  },\n  methods: {\n    onChanged(event) {\n      this.$emit('change', event.target.checked)\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\nexport const strings = {\n  SELECTED_EVENT: 'MDCTab:selected',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      getOffsetLeft: () => /* number */ 0,\n      notifySelected: () => {},\n    };\n  }\n\n  constructor(adapter = {}) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.isActive_ = false;\n    this.preventDefaultOnClick_ = false;\n\n    this.clickHandler_ = (evt) => {\n      if (this.preventDefaultOnClick_) {\n        evt.preventDefault();\n      }\n      this.adapter_.notifySelected();\n    };\n\n    this.keydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifySelected();\n      }\n    };\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  getComputedWidth() {\n    return this.computedWidth_;\n  }\n\n  getComputedLeft() {\n    return this.computedLeft_;\n  }\n\n  isActive() {\n    return this.isActive_;\n  }\n\n  setActive(isActive) {\n    this.isActive_ = isActive;\n    if (this.isActive_) {\n      this.adapter_.addClass(cssClasses.ACTIVE);\n    } else {\n      this.adapter_.removeClass(cssClasses.ACTIVE);\n    }\n  }\n\n  preventsDefaultOnClick() {\n    return this.preventDefaultOnClick_;\n  }\n\n  setPreventDefaultOnClick(preventDefaultOnClick) {\n    this.preventDefaultOnClick_ = preventDefaultOnClick;\n  }\n\n  measureSelf() {\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.computedLeft_ = this.adapter_.getOffsetLeft();\n  }\n}\n","<template>\r\n  <custom-link \n    :class=\"classes\"\r\n    :style=\"styles\" \n    :link=\"link\"\r\n    class=\"mdc-tab\"\r\n    v-on=\"listeners\">\r\n\r\n    <i \n      v-if=\"!!hasIcon\" \n      ref=\"icon\"\r\n      :class=\"hasIcon.classes\"\r\n      tabindex=\"0\"\r\n      class=\"mdc-tab__icon\">\r\n      <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n    </i>\r\n\r\n    <span \n      v-if=\"hasText\" \n      :class=\"{'mdc-tab__icon-text': !!hasIcon}\">\r\n      <slot/>\r\n    </span>\r\n\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tabs/tab/foundation'\r\nimport {\r\n  CustomLinkMixin,\r\n  DispatchEventMixin,\r\n  emitCustomEvent,\r\n  extractIconProp\r\n} from '../base'\r\nimport { RippleBase } from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object]\r\n  },\r\n  data() {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    hasIcon() {\r\n      if (this.icon || this.$slots.icon) {\r\n        return this.icon ? extractIconProp(this.icon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasText() {\r\n      return !!this.$slots.default\r\n    }\r\n  },\r\n  watch: {\r\n    active(value) {\r\n      if (value) {\r\n        this.foundation.adapter_.notifySelected()\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.foundation = new MDCTabFoundation({\r\n      addClass: className => this.$set(this.classes, className, true),\r\n      removeClass: className => this.$delete(this.classes, className),\r\n      registerInteractionHandler: (type, handler) =>\r\n        this.$el.addEventListener(type, handler),\r\n      deregisterInteractionHandler: (type, handler) =>\r\n        this.$el.removeEventListener(type, handler),\r\n      getOffsetWidth: () => {\r\n        return this.$el.offsetWidth\r\n      },\r\n      getOffsetLeft: () => this.$el.offsetLeft,\r\n      notifySelected: () => {\r\n        emitCustomEvent(\r\n          this.$el,\r\n          MDCTabFoundation.strings.SELECTED_EVENT,\r\n          { tab: this },\r\n          true\r\n        )\r\n      }\r\n    })\r\n    this.foundation.init()\r\n    this.setActive(this.active)\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy() {\r\n    this.foundation.destroy()\r\n    this.ripple.destroy()\r\n  },\r\n  methods: {\r\n    getComputedWidth() {\r\n      return this.foundation.getComputedWidth()\r\n    },\r\n    getComputedLeft() {\r\n      return this.foundation.getComputedLeft()\r\n    },\r\n    isActive() {\r\n      return this.foundation.isActive()\r\n    },\r\n    setActive(isActive) {\r\n      this.foundation.setActive(isActive)\r\n    },\r\n    isDefaultPreventedOnClick() {\r\n      return this.foundation.preventsDefaultOnClick()\r\n    },\r\n    setPreventDefaultOnClick(preventDefaultOnClick) {\r\n      this.foundation.setPreventDefaultOnClick(preventDefaultOnClick)\r\n    },\r\n    measureSelf() {\r\n      this.foundation.measureSelf()\r\n    }\r\n  }\r\n}\r\n</script>\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  UPGRADED: 'mdc-tab-bar-upgraded',\n};\n\nexport const strings = {\n  TAB_SELECTOR: '.mdc-tab',\n  INDICATOR_SELECTOR: '.mdc-tab-bar__indicator',\n  CHANGE_EVENT: 'MDCTabBar:change',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {getCorrectPropertyName} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabBarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      bindOnMDCTabSelectedEvent: () => {},\n      unbindOnMDCTabSelectedEvent: () => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      setStyleForIndicator: (/* propertyName: string, value: string */) => {},\n      getOffsetWidthForIndicator: () => /* number */ 0,\n      notifyChange: (/* evtData: {activeTabIndex: number} */) => {},\n      getNumberOfTabs: () => /* number */ 0,\n      isTabActiveAtIndex: (/* index: number */) => /* boolean */ false,\n      setTabActiveAtIndex: (/* index: number, isActive: true */) => {},\n      isDefaultPreventedOnClickForTabAtIndex: (/* index: number */) => /* boolean */ false,\n      setPreventDefaultOnClickForTabAtIndex: (/* index: number, preventDefaultOnClick: boolean */) => {},\n      measureTabAtIndex: (/* index: number */) => {},\n      getComputedWidthForTabAtIndex: (/* index: number */) => /* number */ 0,\n      getComputedLeftForTabAtIndex: (/* index: number */) => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    this.isIndicatorShown_ = false;\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.activeTabIndex_ = 0;\n    this.layoutFrame_ = 0;\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.bindOnMDCTabSelectedEvent();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    const activeTabIndex = this.findActiveTabIndex_();\n    if (activeTabIndex >= 0) {\n      this.activeTabIndex_ = activeTabIndex;\n    }\n    this.layout();\n  }\n\n  destroy() {\n    this.adapter_.removeClass(cssClasses.UPGRADED);\n    this.adapter_.unbindOnMDCTabSelectedEvent();\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  layoutInternal_() {\n    this.forEachTabIndex_((index) => this.adapter_.measureTabAtIndex(index));\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.layoutIndicator_();\n  }\n\n  layoutIndicator_() {\n    const isIndicatorFirstRender = !this.isIndicatorShown_;\n\n    // Ensure that indicator appears in the right position immediately for correct first render.\n    if (isIndicatorFirstRender) {\n      this.adapter_.setStyleForIndicator('transition', 'none');\n    }\n\n    const translateAmtForActiveTabLeft = this.adapter_.getComputedLeftForTabAtIndex(this.activeTabIndex_);\n    const scaleAmtForActiveTabWidth =\n      this.adapter_.getComputedWidthForTabAtIndex(this.activeTabIndex_) / this.adapter_.getOffsetWidth();\n\n    const transformValue = `translateX(${translateAmtForActiveTabLeft}px) scale(${scaleAmtForActiveTabWidth}, 1)`;\n    this.adapter_.setStyleForIndicator(getCorrectPropertyName(window, 'transform'), transformValue);\n\n    if (isIndicatorFirstRender) {\n      // Force layout so that transform styles to take effect.\n      this.adapter_.getOffsetWidthForIndicator();\n      this.adapter_.setStyleForIndicator('transition', '');\n      this.adapter_.setStyleForIndicator('visibility', 'visible');\n      this.isIndicatorShown_ = true;\n    }\n  }\n\n  findActiveTabIndex_() {\n    let activeTabIndex = -1;\n    this.forEachTabIndex_((index) => {\n      if (this.adapter_.isTabActiveAtIndex(index)) {\n        activeTabIndex = index;\n        return true;\n      }\n    });\n    return activeTabIndex;\n  }\n\n  forEachTabIndex_(iterator) {\n    const numTabs = this.adapter_.getNumberOfTabs();\n    for (let index = 0; index < numTabs; index++) {\n      const shouldBreak = iterator(index);\n      if (shouldBreak) {\n        break;\n      }\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  switchToTabAtIndex(index, shouldNotify) {\n    if (index === this.activeTabIndex_) {\n      return;\n    }\n\n    if (index < 0 || index >= this.adapter_.getNumberOfTabs()) {\n      throw new Error(`Out of bounds index specified for tab: ${index}`);\n    }\n\n    const prevActiveTabIndex = this.activeTabIndex_;\n    this.activeTabIndex_ = index;\n    requestAnimationFrame(() => {\n      if (prevActiveTabIndex >= 0) {\n        this.adapter_.setTabActiveAtIndex(prevActiveTabIndex, false);\n      }\n      this.adapter_.setTabActiveAtIndex(this.activeTabIndex_, true);\n      this.layoutIndicator_();\n      if (shouldNotify) {\n        this.adapter_.notifyChange({activeTabIndex: this.activeTabIndex_});\n      }\n    });\n  }\n\n  getActiveTabIndex() {\n    return this.findActiveTabIndex_();\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\n\nexport { mdcTab, mdcTabBar }\n\nexport default BasePlugin({\n  mdcTab,\n  mdcTabBar\n})\n","<template>\n  <nav \n    :class=\"classes\" \n    class=\"mdc-tab-bar\" \n    v-on=\"$listeners\">\n    <slot/>\n    <span \n      ref=\"indicator\" \n      :style=\"indicatorStyles\"\n      class=\"mdc-tab-bar__indicator\"/>\n  </nav>\n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tabs/tab-bar/foundation'\nimport MDCTabFoundation from '@material/tabs/tab/foundation'\n\nexport default {\n  name: 'mdc-tab-bar',\n  data() {\n    return {\n      classes: {},\n      indicatorStyles: {},\n      tabs: []\n    }\n  },\n  mounted() {\n    this.foundation = new MDCTabBarFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      bindOnMDCTabSelectedEvent: () => {\n        this.$el.addEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT,\n          this.onSelect\n        )\n      },\n      unbindOnMDCTabSelectedEvent: () =>\n        this.$el.removeEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT,\n          this.onSelect\n        ),\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n      getOffsetWidth: () => this.$el.offsetWidth,\n      setStyleForIndicator: (propertyName, value) =>\n        this.$set(this.indicatorStyles, propertyName, value),\n      getOffsetWidthForIndicator: () => this.$refs.indicator.offsetWidth,\n      notifyChange: evtData => {\n        this.$emit('change', evtData.activeTabIndex)\n      },\n      getNumberOfTabs: () => this.tabs.length,\n      isTabActiveAtIndex: index => this.tabs[index].isActive(),\n      setTabActiveAtIndex: (index, isActive) => {\n        // pgbr: 2018-04-07\n        // since it is possible to change the number of tabs programatically\n        // we need to detect the foundation deactivating a tab\n        // that no longer exists but was previously active.\n        if (!isActive && index >= this.tabs.length) {\n          return\n        }\n        this.tabs[index].setActive(isActive)\n      },\n      isDefaultPreventedOnClickForTabAtIndex: index =>\n        this.tabs[index].isDefaultPreventedOnClick(),\n      setPreventDefaultOnClickForTabAtIndex: (index, preventDefaultOnClick) => {\n        this.tabs[index].setPreventDefaultOnClick(preventDefaultOnClick)\n      },\n      measureTabAtIndex: index => this.tabs[index].measureSelf(),\n      getComputedWidthForTabAtIndex: index =>\n        this.tabs[index].getComputedWidth(),\n      getComputedLeftForTabAtIndex: index => this.tabs[index].getComputedLeft()\n    })\n\n    const resetTabs = () => {\n      const tabElements = [].slice.call(\n        this.$el.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR)\n      )\n      this.tabs = tabElements.map(el => el.__vue__)\n\n      let hasText, hasIcon\n      const tabs = this.tabs\n      for (let tab of tabs) {\n        if (tab.hasText) {\n          hasText = true\n          break\n        }\n      }\n      for (let tab of tabs) {\n        if (tab.hasIcon) {\n          hasIcon = true\n          break\n        }\n      }\n\n      if (hasText && hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icons-with-text', true)\n      } else if (hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icon-tab-bar', true)\n      }\n\n      if (this.foundation) {\n        const activeTabIndex = this.foundation.getActiveTabIndex()\n        if (activeTabIndex >= 0) {\n          this.foundation.switchToTabAtIndex(activeTabIndex, true)\n        } else {\n          this.foundation.switchToTabAtIndex(0, true)\n        }\n        this.foundation.layout()\n      }\n    }\n\n    resetTabs()\n\n    this.slotObserver = new MutationObserver(() => resetTabs())\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n    this.foundation.destroy()\n  },\n  methods: {\n    onSelect({ detail }) {\n      const { tab } = detail\n      const index = this.tabs.indexOf(tab)\n      if (index < 0) {\n        throw new Error('mdc-tab-bar internal error: index not found')\n      }\n      this.foundation.switchToTabAtIndex(index, true)\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * Handler accepts list of attribute names.\n   * @param {function(!Array<string>): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && (this.getValue() || this.isBadInput_())) {\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.notchOutline(this.shouldFloat);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the icon.\n   * @param {string} label\n   */\n  setIconAriaLabel(label) {\n    if (this.icon_) {\n      this.icon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the icon.\n   * @param {string} content\n   */\n  setIconContent(content) {\n    if (this.icon_) {\n      this.icon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","import { BasePlugin } from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport { mdcTextField }\n\nexport default BasePlugin({\n  mdcTextField\n})\n","<template>\n  <div\n    :style=\"{width:fullwidth?'100%':undefined}\"\n    :id=\"id\"\n    class=\"mdc-textfield-wrapper\">\n\n    <div\n      ref=\"root\"\n      :class=\"rootClasses\">\n\n      <i\n        v-if=\"!!hasLeadingIcon\"\n        ref=\"icon\"\n        :class=\"hasLeadingIcon.classes\"\n        tabindex=\"0\"\n        class=\"mdc-text-field__icon\">\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\n      </i>\n\n      <!-- workarround for https://github.com/vuejs/rollup-plugin-vue/issues/174 -->\n      <!-- eslint-disable vue/html-self-closing -->\n      <textarea\n        v-if=\"multiline\"\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        :rows=\"rows\"\n        :cols=\"cols\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      ></textarea>\n\n      <input\n        v-else\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :type=\"type\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      >\n\n      <label\n        v-if=\"hasLabel\"\n        ref=\"label\"\n        :class=\"labelClassesUpgraded\"\n        :for=\"vma_uid_\">\n        {{ label }}\n      </label>\n\n      <i\n        v-if=\"!!hasTrailingIcon\"\n        ref=\"icon\"\n        :class=\"hasTrailingIcon.classes\"\n        tabindex=\"0\"\n        class=\"mdc-text-field__icon\">\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\n      </i>\n\n      <div\n        v-if=\"hasOutline\"\n        ref=\"outline\"\n        :class=\"outlineClasses\"\n        class=\"mdc-notched-outline\">\n        <svg>\n          <path\n            :d=\"outlinePathAttr\"\n            class=\"mdc-notched-outline__path\" />\n        </svg>\n      </div>\n      <div\n        v-if=\"hasOutline\"\n        ref=\"outlineIdle\"\n        class=\"mdc-notched-outline__idle\"/>\n      <div\n        v-if=\"hasLineRipple\"\n        ref=\"lineRipple\"\n        :class=\"lineRippleClasses\"\n        :style=\"lineRippleStyles\"/>\n\n    </div>\n\n    <p\n      v-if=\"helptext\"\n      ref=\"help\"\n      :id=\"'help-'+vma_uid_\"\n      :class=\"helpClasses\"\n      aria-hidden=\"true\">\n      {{ helptext }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation'\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation'\n\nimport {\n  extractIconProp,\n  DispatchFocusMixin,\n  CustomElementMixin,\n  VMAUniqueIdMixin,\n  applyPassive\n} from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-textfield',\n  mixins: [CustomElementMixin, DispatchFocusMixin, VMAUniqueIdMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'model'\n  },\n  props: {\n    value: String,\n    type: {\n      type: String,\n      default: 'text',\n      validator: function(value) {\n        return (\n          [\n            'text',\n            'email',\n            'search',\n            'password',\n            'tel',\n            'url',\n            'number'\n          ].indexOf(value) !== -1\n        )\n      }\n    },\n    dense: Boolean,\n    label: String,\n    helptext: String,\n    helptextPersistent: Boolean,\n    helptextValidation: Boolean,\n    box: Boolean,\n    outline: Boolean,\n    disabled: Boolean,\n    required: Boolean,\n    valid: { type: Boolean, default: undefined },\n    fullwidth: Boolean,\n    multiline: Boolean,\n    leadingIcon: [String, Array, Object],\n    trailingIcon: [String, Array, Object],\n    size: { type: [Number, String], default: 20 },\n    minlength: { type: [Number, String], default: undefined },\n    maxlength: { type: [Number, String], default: undefined },\n    rows: { type: [Number, String], default: 8 },\n    cols: { type: [Number, String], default: 40 },\n    id: { type: String }\n  },\n  data: function() {\n    return {\n      text: this.value,\n      rootClasses: {\n        'mdc-textfield': true,\n        'mdc-text-field': true,\n        'mdc-text-field--upgraded': true,\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--dense': this.dense,\n        'mdc-text-field--fullwidth': this.fullwidth,\n        'mdc-text-field--textarea': this.multiline,\n        'mdc-text-field--box': !this.fullwidth && this.box,\n        'mdc-text-field--outlined': !this.fullwidth && this.outline\n      },\n      inputClasses: {\n        'mdc-text-field__input': true\n      },\n      labelClasses: {\n        'mdc-floating-label': true\n      },\n      lineRippleClasses: {\n        'mdc-line-ripple': true\n      },\n      lineRippleStyles: {},\n      helpClasses: {\n        'mdc-text-field-helper-text': true,\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation\n      },\n      outlineClasses: {},\n      outlinePathAttr: undefined\n    }\n  },\n  computed: {\n    inputPlaceHolder() {\n      return this.fullwidth ? this.label : undefined\n    },\n    inputAriaControls() {\n      return this.help ? 'help-' + this.vma_uid_ : undefined\n    },\n    hasLabel() {\n      return !this.fullwidth && this.label\n    },\n    hasOutline() {\n      return !this.fullwidth && this.outline\n    },\n    hasLineRipple() {\n      return !this.hasOutline && !this.multiline\n    },\n    hasLeadingIcon() {\n      if (\n        (this.leadingIcon || this.$slots['leading-icon']) &&\n        !(this.trailingIcon || this.$slots['trailing-icon'])\n      ) {\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {}\n      }\n      return false\n    },\n    hasTrailingIcon() {\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {}\n      }\n      return false\n    },\n    labelClassesUpgraded() {\n      return Object.assign(this.labelClasses, {\n        'mdc-floating-label--float-above': this.value\n      })\n    }\n  },\n  watch: {\n    disabled() {\n      this.foundation && this.foundation.setDisabled(this.disabled)\n    },\n    required() {\n      this.$refs.input && (this.$refs.input.required = this.required)\n    },\n    valid() {\n      if (typeof this.valid !== 'undefined') {\n        this.foundation && this.foundation.setValid(this.valid)\n      }\n    },\n    dense() {\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\n    },\n    helptextPersistent() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setPersistent(this.helptextPersistent)\n    },\n    helptextValidation() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setValidation(this.helptextValidation)\n    },\n    value(value) {\n      if (this.foundation) {\n        if (value !== this.foundation.getValue()) {\n          this.foundation.setValue(value)\n        }\n      }\n    }\n  },\n  mounted() {\n    if (this.$refs.lineRipple) {\n      this.lineRippleFoundation = new MDCLineRippleFoundation({\n        addClass: className => {\n          this.$set(this.lineRippleClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.lineRippleClasses, className)\n        },\n        hasClass: className => {\n          this.$refs.lineRipple.classList.contains(className)\n        },\n        setStyle: (name, value) => {\n          this.$set(this.lineRippleStyles, name, value)\n        },\n        registerEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.addEventListener(evtType, handler)\n        },\n        deregisterEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.removeEventListener(evtType, handler)\n        }\n      })\n      this.lineRippleFoundation.init()\n    }\n\n    if (this.$refs.help) {\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\n        addClass: className => {\n          this.$set(this.helpClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.helpClasses, className)\n        },\n        hasClass: className => {\n          return this.$refs.help.classList.contains(className)\n        },\n        setAttr: (name, value) => {\n          this.$refs.help.setAttribute(name, value)\n        },\n        removeAttr: name => {\n          this.$refs.help.removeAttribute(name)\n        },\n        setContent: (/*content*/) => {\n          // help text get's updated from {{helptext}}\n          // this.$refs.help.textContent = content;\n        }\n      })\n      this.helperTextFoundation.init()\n    }\n\n    if (this.$refs.icon) {\n      if (this.hasLeadingIcon) {\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true)\n      } else if (this.hasTrailingIcon) {\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true)\n      }\n\n      this.iconFoundation = new MDCTextFieldIconFoundation({\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\n        getAttr: attr => this.$refs.icon.getAttribute(attr),\n        removeAttr: attr => this.$refs.icon.removeAttribute(attr),\n        setContent: (/*content*/) => {\n          // icon text get's updated from {{{{ hasTrailingIcon.content }}}}\n          // this.$refs.icon.textContent = content;\n        },\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.icon.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.icon.removeEventListener(evtType, handler)\n        },\n        notifyIconAction: () => this.$emit('icon-action')\n      })\n      this.iconFoundation.init()\n    }\n\n    if (this.$refs.label) {\n      this.labelFoundation = new MDCFloatingLabelFoundation({\n        addClass: className => {\n          this.$set(this.labelClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.labelClasses, className)\n        },\n        getWidth: () => this.$refs.label.offsetWidth,\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.label.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.label.removeEventListener(evtType, handler)\n        }\n      })\n      this.labelFoundation.init()\n    }\n\n    if (this.$refs.outline) {\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\n        getWidth: () => this.$refs.outline.offsetWidth,\n        getHeight: () => this.$refs.outline.offsetHeight,\n        addClass: className => {\n          this.$set(this.outlineClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.outlineClasses, className)\n        },\n        setOutlinePathAttr: value => {\n          this.outlinePathAttr = value\n        },\n        getIdleOutlineStyleValue: propertyName => {\n          const idleOutlineElement = this.$refs.outlineIdle\n          if (idleOutlineElement) {\n            return window\n              .getComputedStyle(idleOutlineElement)\n              .getPropertyValue(propertyName)\n          }\n        }\n      })\n      this.outlineFoundation.init()\n    }\n\n    this.foundation = new MDCTextfieldFoundation(\n      {\n        addClass: className => {\n          this.$set(this.rootClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.rootClasses, className)\n        },\n        hasClass: className => {\n          this.$refs.root.classList.contains(className)\n        },\n        registerTextFieldInteractionHandler: (evtType, handler) => {\n          this.$refs.root.addEventListener(evtType, handler)\n        },\n        deregisterTextFieldInteractionHandler: (evtType, handler) => {\n          this.$refs.root.removeEventListener(evtType, handler)\n        },\n        isFocused: () => {\n          return document.activeElement === this.$refs.input\n        },\n        isRtl: () =>\n          window\n            .getComputedStyle(this.$refs.root)\n            .getPropertyValue('direction') === 'rtl',\n        deactivateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.deactivate()\n          }\n        },\n        activateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.activate()\n          }\n        },\n        setLineRippleTransformOrigin: normalizedX => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.setRippleCenter(normalizedX)\n          }\n        },\n        registerInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.addEventListener(evtType, handler, applyPassive())\n        },\n        deregisterInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.removeEventListener(evtType, handler, applyPassive())\n        },\n        registerValidationAttributeChangeHandler: handler => {\n          const getAttributesList = mutationsList =>\n            mutationsList.map(mutation => mutation.attributeName)\n          const observer = new MutationObserver(mutationsList =>\n            handler(getAttributesList(mutationsList))\n          )\n          const targetNode = this.$refs.input\n          const config = { attributes: true }\n          observer.observe(targetNode, config)\n          return observer\n        },\n        deregisterValidationAttributeChangeHandler: observer => {\n          observer.disconnect()\n        },\n        shakeLabel: shouldShake => {\n          this.labelFoundation.shake(shouldShake)\n        },\n        floatLabel: shouldFloat => {\n          this.labelFoundation.float(shouldFloat)\n        },\n        hasLabel: () => {\n          return !!this.$refs.label\n        },\n        getLabelWidth: () => {\n          return this.labelFoundation.getWidth()\n        },\n        getNativeInput: () => {\n          return this.$refs.input\n        },\n        hasOutline: () => !!this.hasOutline,\n        notchOutline: (notchWidth, isRtl) =>\n          this.outlineFoundation.notch(notchWidth, isRtl),\n        closeOutline: () => this.outlineFoundation.closeNotch()\n      },\n      {\n        helperText: this.helperTextFoundation,\n        icon: this.iconFoundation\n      }\n    )\n\n    this.foundation.init()\n    this.foundation.setValue(this.value)\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.input && (this.$refs.input.required = this.required)\n    if (typeof this.valid !== 'undefined') {\n      this.foundation.setValid(this.valid)\n    }\n\n    if (this.textbox) {\n      this.ripple = new RippleBase(this)\n      this.ripple.init()\n    }\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.lineRippleFoundation && this.lineRippleFoundation.destroy()\n    this.helperTextFoundation && this.helperTextFoundation.destroy()\n    this.iconFoundation && this.iconFoundation.destroy()\n    this.labelFoundation && this.labelFoundation.destroy()\n    this.outlineFoundation && this.outlineFoundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    updateValue(value) {\n      this.$emit('model', value)\n    },\n    focus() {\n      this.$refs.input && this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input && this.$refs.input.blur()\n    }\n  }\n}\n</script>\n","<template>\n  <custom-element \n    :tag=\"tag\" \n    :class=\"classes\"\n    class=\"mdc-theme\">\n    <slot />\n  </custom-element>\n</template>\n\n\n<script>\nimport { CustomElement } from '../base'\n\nconst THEME_COLORS = [\n  'primary',\n  'secondary',\n  'background',\n  'primary-light',\n  'secondary-light',\n  'secondary-dark',\n  'primary-dark'\n]\n\nconst THEME_STYLES = [\n  'text-primary',\n  'text-secondary',\n  'text-hint',\n  'text-icon',\n  'text-disabled'\n]\n\nexport default {\n  name: 'mdc-theme',\n  components: {\n    CustomElement\n  },\n  props: {\n    tag: { type: String, default: 'div' },\n    color: String,\n    background: String\n  },\n  computed: {\n    classes() {\n      let classes = {}\n\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\n        classes[`mdc-theme--${this.color}`] = true\n      }\n\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\n        classes[`mdc-theme--${this.background}-bg`] = true\n\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\n        }\n      }\n      return classes\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTheme from './mdc-theme.vue'\n\nexport { mdcTheme }\n\nexport default BasePlugin({\n  mdcTheme\n})\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  ICON_SELECTOR: '.mdc-toolbar__icon',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","import { BasePlugin } from '../base'\nimport mdcToolbar from './mdc-toolbar.vue'\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\n\nexport {\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n}\n\nexport default BasePlugin({\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n})\n","<template>\n  <header class=\"mdc-toolbar-wrapper\">\n    <!--Toolbar-->\n    <div \n      ref=\"root\" \n      :class=\"rootClasses\" \n      :style=\"rootStyles\">\n      <slot/>\n    </div>\n    <!-- Fixed Adjust Element-->\n    <div \n      v-if=\"fixed || waterfall || fixedLastrow\" \n      ref=\"fixed-adjust\" \n      :style=\"adjustStyles\"\n      class=\"mdc-toolbar-fixed-adjust\"/>\n  </header>\n</template>\n\n<script>\nimport MDCToolbarFoundation from '@material/toolbar/foundation'\n\nexport default {\n  name: 'mdc-toolbar',\n  props: {\n    fixed: Boolean,\n    waterfall: Boolean,\n    'fixed-lastrow': Boolean,\n    flexible: Boolean,\n    'flexible-default': { type: Boolean, default: true }\n  },\n  data() {\n    return {\n      rootClasses: {\n        'mdc-toolbar': true,\n        'mdc-toolbar--fixed': this.fixed || this.waterfall || this.fixedLastrow,\n        'mdc-toolbar--waterfall': this.waterfall,\n        'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,\n        'mdc-toolbar--flexible': this.flexible,\n        'mdc-toolbar--flexible-default-behavior':\n          this.flexible && this.flexibleDefault\n      },\n      rootStyles: {},\n      adjustStyles: {\n        // to avoid top margin collapse with :after el\n        // 0.1 px should be rounded to 0px\n        // TODO: find a better trick\n        // height: '0.1px'\n      },\n      foundation: null\n    }\n  },\n  mounted() {\n    this.foundation = new MDCToolbarFoundation({\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: handler => {\n        window.removeEventListener('resize', handler)\n      },\n      getViewportWidth: () => {\n        return window.innerWidth\n      },\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getOffsetHeight: () => {\n        return this.$refs.root.offsetHeight\n      },\n      getFirstRowElementOffsetHeight: () => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        return el ? el.offsetHeight : undefined\n      },\n      notifyChange: evtData => {\n        this.$emit('change', evtData)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      setStyleForTitleElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.TITLE_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFlexibleRowElement: (property, value) => {\n        let el = this.$refs.root.querySelector(\n          MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR\n        )\n        if (el) el.style.setProperty(property, value)\n      },\n      setStyleForFixedAdjustElement: (property, value) => {\n        this.$set(this.adjustStyles, property, value)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-toolbar-row mdc-toolbar__row\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-row'\n}\n</script>\n","<template>\n  <section \n    :class=\"classes\" \n    class=\"mdc-toolbar-section mdc-toolbar__section\">\n    <slot/>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-section',\n  props: {\n    'align-start': Boolean,\n    'align-end': Boolean,\n    'shrink-to-fit': Boolean\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-toolbar__section--align-start': this.alignStart,\n        'mdc-toolbar__section--align-end': this.alignEnd,\n        'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\"\n    class=\"mdc-toolbar-menu-icon mdc-toolbar__menu-icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-menu-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: { type: String, default: 'menu' }\n  }\n}\n</script>\n","<template>\n  <a \n    class=\"mdc-toolbar-title mdc-toolbar__title\" \n    v-on=\"listeners\">\n    <slot/>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-title',\n  mixins: [DispatchEventMixin]\n}\n</script>\n","<template>\n  <a \n    :class=\"{'material-icons':!!icon}\" \n    class=\"mdc-toolbar-icon mdc-toolbar__icon\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-toolbar-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: String\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  FIXED_CLASS: 'mdc-top-app-bar--fixed',\n  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n  SHORT_CLASS: 'mdc-top-app-bar--short',\n  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n};\n\n/** @enum {number} */\nconst numbers = {\n  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n  MAX_TOP_APP_BAR_HEIGHT: 128,\n};\n\n/** @enum {string} */\nconst strings = {\n  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n  NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n  ROOT_SELECTOR: '.mdc-top-app-bar',\n  TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\n\nexport {strings, cssClasses, numbers};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {strings, cssClasses, numbers} from './constants';\nimport MDCTopAppBarAdapter from './adapter';\nimport MDCFoundation from '@material/base/foundation';\n\n/**\n * @extends {MDCFoundation<!MDCTopAppBarAdapter>}\n */\nclass MDCTopAppBarBaseFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {number} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTopAppBarAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTopAppBarAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTopAppBarAdapter} */ ({\n      hasClass: (/* className: string */) => {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      getTopAppBarHeight: () => {},\n      registerNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterNavigationIconInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyNavigationIconClicked: () => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportScrollY: () => /* number */ 0,\n      getTotalActionItems: () => /* number */ 0,\n    });\n  }\n\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(/** @type {!MDCTopAppBarAdapter} */ adapter) {\n    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));\n\n    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();\n  }\n\n  init() {\n    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);\n  }\n}\n\nexport default MDCTopAppBarBaseFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Top App Bar\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Top App Bar into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTopAppBarAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root Element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the specified inline style property on the root Element to the given value.\n   * @param {string} property\n   * @param {string} value\n   */\n  setStyle(property, value) {}\n\n  /**\n   * Gets the height of the top app bar.\n   * @return {number}\n   */\n  getTopAppBarHeight() {}\n\n  /**\n   * Registers an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the navigation icon element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterNavigationIconInteractionHandler(type, handler) {}\n\n  /**\n   * Emits an event when the navigation icon is clicked.\n   */\n  notifyNavigationIconClicked() {}\n\n  /** @param {function(!Event)} handler */\n  registerScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterScrollHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerResizeHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterResizeHandler(handler) {}\n\n  /** @return {number} */\n  getViewportScrollY() {}\n\n  /** @return {number} */\n  getTotalActionItems() {}\n}\n\nexport default MDCTopAppBarAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCTopAppBarAdapter from '../adapter';\nimport MDCTopAppBarBaseFoundation from '../foundation';\nimport {cssClasses} from '../constants';\n\n/**\n * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}\n * @final\n */\nclass MDCShortTopAppBarFoundation extends MDCTopAppBarBaseFoundation {\n  /**\n   * @param {!MDCTopAppBarAdapter} adapter\n   */\n  constructor(adapter) {\n    super(adapter);\n    // State variable for the current top app bar state\n    this.isCollapsed = false;\n\n    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();\n  }\n\n  init() {\n    super.init();\n    const isAlwaysCollapsed = this.adapter_.hasClass(cssClasses.SHORT_COLLAPSED_CLASS);\n\n    if (this.adapter_.getTotalActionItems() > 0) {\n      this.adapter_.addClass(cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);\n    }\n\n    if (!isAlwaysCollapsed) {\n      this.adapter_.registerScrollHandler(this.scrollHandler_);\n      this.shortAppBarScrollHandler_();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n\n  /**\n   * Scroll handler for applying/removing the collapsed modifier class\n   * on the short top app bar.\n   * @private\n   */\n  shortAppBarScrollHandler_() {\n    const currentScroll = this.adapter_.getViewportScrollY();\n\n    if (currentScroll <= 0) {\n      if (this.isCollapsed) {\n        this.adapter_.removeClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = false;\n      }\n    } else {\n      if (!this.isCollapsed) {\n        this.adapter_.addClass(cssClasses.SHORT_COLLAPSED_CLASS);\n        this.isCollapsed = true;\n      }\n    }\n  }\n}\n\nexport default MDCShortTopAppBarFoundation;\n","import { BasePlugin } from '../base'\nimport mdcTopAppBar from './mdc-top-app-bar.vue'\nimport mdcTopAppBarAction from './mdc-top-app-bar-action.vue'\n\nexport { mdcTopAppBar, mdcTopAppBarAction }\n\nexport default BasePlugin({\n  mdcTopAppBar,\n  mdcTopAppBarAction\n})\n","<template>\n  <header\n    ref=\"root\"\n    :class=\"rootClasses\"\n    :style=\"rootStyles\"\n    v-on=\"$listeners\">\n    <div class=\"mdc-top-app-bar__row\">\n      <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\">\n        <a\n          v-if=\"haveNavigationIcon\"\n          ref=\"navigationIcon\"\n          :class=\"naviconClasses\"\n          href=\"#\"\n          v-on=\"listeners\">{{ icon }}</a>\n        <span\n          v-if=\"!!title\"\n          class=\"mdc-top-app-bar__title\">{{ title }}</span>\n      </section>\n      <section\n        v-if=\"$slots.default\"\n        class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\">\n        <slot/>\n      </section>\n    </div>\n    <div\n      v-if=\"$slots.tabs\"\n      class=\"mdc-top-app-bar__row\">\n      <slot name=\"tabs\"/>\n    </div>\n  </header>\n</template>\n\n<script>\nimport MDCTopAppBarFoundation from '@material/top-app-bar/foundation'\nimport MDCShortTopAppBarFoundation from '@material/top-app-bar/short/foundation'\nimport { DispatchEventMixin } from '../base'\n\nexport default {\n  name: 'mdc-top-app-bar',\n  mixins: [DispatchEventMixin],\n  props: {\n    short: Boolean,\n    shortCollapsed: Boolean,\n    prominent: Boolean,\n    fixed: Boolean,\n    title: String,\n    icon: {\n      type: String,\n      default: 'menu'\n    },\n    iconClasses: Object,\n    dense: Boolean\n  },\n  data() {\n    return {\n      rootStyles: {},\n      rootClasses: {\n        'mdc-top-app-bar': true,\n        'mdc-top-app-bar--dense': this.dense,\n        'mdc-top-app-bar--short': this.short,\n        'mdc-top-app-bar--short-collapsed': this.shortCollapsed,\n        'mdc-top-app-bar--prominent': this.prominent,\n        'mdc-top-app-bar--fixed': this.fixed\n      },\n      foundation: null\n    }\n  },\n  computed: {\n    haveNavigationIcon() {\n      return !!this.icon || this.iconClasses\n    },\n    naviconClasses() {\n      return {\n        'mdc-top-app-bar__navigation-icon': true,\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  },\n  mounted() {\n    const adapter = {\n      addClass: className => {\n        this.$set(this.rootClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.rootClasses, className)\n      },\n      hasClass: className => {\n        return this.$refs.root.classList.contains(className)\n      },\n      setStyle: (property, value) => {\n        this.$set(this.rootStyles, property, value)\n      },\n      getTopAppBarHeight: () => this.$el.clientHeight,\n      registerNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.addEventListener(type, handler)\n        }\n      },\n      deregisterNavigationIconInteractionHandler: (type, handler) => {\n        if (this.$refs.navigationIcon) {\n          this.$refs.navigationIcon.removeEventListener(type, handler)\n        }\n      },\n      notifyNavigationIconClicked: () => {\n        this.$emit('nav')\n      },\n      registerScrollHandler: handler => {\n        window.addEventListener('scroll', handler)\n      },\n      deregisterScrollHandler: handler => {\n        window.removeEventListener('scroll', handler)\n      },\n      registerResizeHandler: handler =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: handler =>\n        window.removeEventListener('resize', handler),\n\n      getViewportScrollY: () => {\n        return window.pageYOffset\n      },\n      getTotalActionItems: () =>\n        this.$refs.root.querySelectorAll(\n          MDCTopAppBarFoundation.strings.ACTION_ITEM_SELECTOR\n        ).length\n    }\n\n    this.foundation = this.short\n      ? new MDCShortTopAppBarFoundation(adapter)\n      : new MDCTopAppBarFoundation(adapter)\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <a\n    :class=\"actioniconClasses\"\n    href=\"#\"\n    class=\"mdc-top-app-bar-action mdc-top-app-bar--action mdc-top-app-bar__action-item\"\n    v-on=\"listeners\">\n    <slot>{{ icon }}</slot>\n  </a>\n</template>\n\n<script>\nimport { DispatchEventMixin } from '../base'\nimport { RippleMixin } from '../ripple'\n\nexport default {\n  name: 'mdc-top-app-bar-action',\n  mixins: [DispatchEventMixin, RippleMixin],\n  props: {\n    icon: String,\n    iconClasses: Object\n  },\n  computed: {\n    actioniconClasses() {\n      return {\n        'material-icons': !!this.icon,\n        ...this.iconClasses\n      }\n    }\n  }\n}\n</script>\n","const typos = [\n  'headline1',\n  'headline2',\n  'headline3',\n  'headline4',\n  'headline5',\n  'headline6',\n  'subtitle1',\n  'subtitle2',\n  'body1',\n  'body2',\n  'caption',\n  'button',\n  'overline'\n]\n\nexport const mdcTypoMixin = name => {\n  return {\n    render(createElement) {\n      return createElement(\n        this.tag,\n        {\n          class: {\n            'mdc-typo': true,\n            [name]: true,\n            [`mdc-typography--${this.typo}`]: true\n          },\n          attrs: this.$attrs,\n          on: this.$listeners\n        },\n        this.$slots.default\n      )\n    }\n  }\n}\n\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\n  return {\n    props: {\n      tag: {\n        type: String,\n        default: defaultTag\n      },\n      typo: {\n        type: String,\n        default: defaultTypo,\n        validator: value => validTypos.indexOf(value) !== -1\n      }\n    }\n  }\n}\n\nexport const mdcTextSection = {\n  name: 'mdc-text-section',\n  props: {\n    tag: {\n      type: String,\n      default: 'section'\n    }\n  },\n  render(createElement) {\n    return createElement(\n      this.tag,\n      {\n        class: {\n          'mdc-typography': true,\n          'mdc-text-section': true\n        },\n        attrs: this.$attrs,\n        on: this.$listeners\n      },\n      this.$slots.default\n    )\n  }\n}\n\nexport const mdcText = {\n  name: 'mdc-text',\n  mixins: [mdcTypoMixin('mdc-text'), mdcTypoPropMixin('p', 'body1', typos)]\n}\n\nexport const mdcDisplay = {\n  name: 'mdc-display',\n  mixins: [\n    mdcTypoMixin('mdc-display'),\n    mdcTypoPropMixin('h1', 'headline4', [\n      'headline4',\n      'headline3',\n      'headline2',\n      'headline1'\n    ])\n  ]\n}\n\nexport const mdcHeadline = {\n  name: 'mdc-headline',\n  mixins: [\n    mdcTypoMixin('mdc-headline'),\n    mdcTypoPropMixin('h2', 'headline5', ['headline5'])\n  ]\n}\n\nexport const mdcTitle = {\n  name: 'mdc-title',\n  mixins: [\n    mdcTypoMixin('mdc-title'),\n    mdcTypoPropMixin('h3', 'headline6', ['headline6'])\n  ]\n}\n\nexport const mdcSubHeading = {\n  name: 'mdc-subheading',\n  mixins: [\n    mdcTypoMixin('mdc-subheading'),\n    mdcTypoPropMixin('h4', 'subtitle2', ['subtitle1', 'subtitle2'])\n  ]\n}\n\nexport const mdcBody = {\n  name: 'mdc-body',\n  mixins: [\n    mdcTypoMixin('mdc-body'),\n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])\n  ]\n}\n\nexport const mdcCaption = {\n  name: 'mdc-caption',\n  mixins: [\n    mdcTypoMixin('mdc-caption'),\n    mdcTypoPropMixin('span', 'caption', ['caption'])\n  ]\n}\n","import { BasePlugin } from '../base'\nimport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n} from './mdc-typography.js'\n\nexport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n}\n\nexport default BasePlugin({\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n})\n","//\n// vue PlugIn\n//\nimport VueMDCButton from './button'\nimport VueMDCCard from './card'\nimport VueMDCCheckbox from './checkbox'\nimport VueMDCChipSet from './chips'\nimport VueMDCDialog from './dialog'\nimport VueMDCDrawer from './drawer'\nimport VueMDCElevation from './elevation'\nimport VueMDCFab from './fab'\nimport VueMDCGridList from './grid-list'\nimport VueMDCIcon from './icon'\nimport VueMDCIconToggle from './icon-toggle'\nimport VueMDCLayoutApp from './layout-app'\nimport VueMDCLayoutGrid from './layout-grid'\nimport VueMDCLinearProgress from './linear-progress'\nimport VueMDCList from './list'\nimport VueMDCMenu from './menu'\nimport VueMDCRadio from './radio'\nimport VueMDCRipple from './ripple'\nimport VueMDCSelect from './select'\nimport VueMDCSlider from './slider'\nimport VueMDCSnackbar from './snackbar'\nimport VueMDCSwitch from './switch'\nimport VueMDCTabs from './tabs'\nimport VueMDCTextfield from './textfield'\nimport VueMDCTheme from './theme'\nimport VueMDCToolbar from './toolbar'\nimport VueMDCTopAppBar from './top-app-bar'\nimport VueMDCTypography from './typography'\n\nexport default {\n  version: '__VERSION__',\n  install(vm) {\n    vm.use(VueMDCButton)\n    vm.use(VueMDCCard)\n    vm.use(VueMDCCheckbox)\n    vm.use(VueMDCChipSet)\n    vm.use(VueMDCDialog)\n    vm.use(VueMDCDrawer)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCFab)\n    vm.use(VueMDCGridList)\n    vm.use(VueMDCIcon)\n    vm.use(VueMDCIconToggle)\n    vm.use(VueMDCLayoutApp)\n    vm.use(VueMDCLayoutGrid)\n    vm.use(VueMDCLinearProgress)\n    vm.use(VueMDCList)\n    vm.use(VueMDCMenu)\n    vm.use(VueMDCRadio)\n    vm.use(VueMDCRipple)\n    vm.use(VueMDCSelect)\n    vm.use(VueMDCSlider)\n    vm.use(VueMDCSnackbar)\n    vm.use(VueMDCSwitch)\n    vm.use(VueMDCTabs)\n    vm.use(VueMDCTextfield)\n    vm.use(VueMDCTheme)\n    vm.use(VueMDCToolbar)\n    vm.use(VueMDCTopAppBar)\n    vm.use(VueMDCTypography)\n  }\n}\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from './base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","CustomLink","type","String","default","Object","h","element","babelHelpers.extends","link","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","CustomButton","attrs","role","href","CustomButtonMixin","extractIconProp","iconProp","material-icons","Array","reduce","result","value","className","split","textContent","DispatchEventMixin","$emit","event","target","eventTarget","args","eventArgs","$listeners","_this","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","_this2","$el","activeElement","contains","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","vma_uid_","_uid","MDCFoundation","adapter","adapter_","cssClasses","handler","varName","strings","numbers","supportsCssVariables_","supportsCssVariables","windowObj","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","getMatchesProperty","HTMLElementPrototype","filter","p","pop","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","addClass","isUnbounded","layoutInternal_","FG_ACTIVATION","removeClass","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","keyCode","isSurfaceActive","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","requestAnimationFrame","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","_this16","BG_FOCUSED","_this17","RippleBase","vm","options","MATCHES","disabled","$set","classes","$delete","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElement","prototype","RippleMixin","ripple","init","destroy","render","mdcButtonBase","raised","unelevated","outlined","dense","src","square","fullBleed","icon","MDCComponent","root","foundation","root_","initialize","foundation_","getDefaultFoundation","initialSyncWithDOM","Error","unbounded_","setUnbounded","activate","deactivate","MDCRipple","createAdapter","dataset","setUnbounded_","instance","util","classList","add","style","setProperty","attr","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","updateAriaChecked_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","isIndeterminate","setNativeControlAttr","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","removeNativeControlAttr","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","transformStyleProperties","getCorrectEventName","getCorrectPropertyName","Number","label","$slots","hasLabel","alignEnd","setDisabled","setIndeterminate","$refs","control","setAttribute","removeAttribute","offsetWidth","parentNode","formField","setChecked","isArray","isChecked","idx","concat","slice","propertyName","MDCChipFoundation","shouldRemoveOnTrailingIconClick_","interactionHandler_","handleInteraction","transitionEndHandler_","handleTransitionEnd","trailingIconInteractionHandler_","handleTrailingIconInteraction","registerEventHandler","registerTrailingIconInteractionHandler","deregisterEventHandler","_this3","deregisterTrailingIconInteractionHandler","hasClass","SELECTED","selected","shouldRemove","CHIP_EXIT","notifyInteraction","eventTargetHasClass","notifyRemoval","chipWidth","getComputedStyleValue","setStyleProperty","LEADING_ICON","addClassToLeadingIcon","HIDDEN_LEADING_ICON","CHECKMARK","removeClassFromLeadingIcon","stopPropagation","notifyTrailingIconInteraction","beginExit","mdcChipSet","leadingIcon","leadingIconClasses","trailingIcon","trailingIconClasses","haveleadingIcon","INTERACTION_EVENT","TRAILING_ICON_INTERACTION_EVENT","REMOVAL_EVENT","chip","getPropertyValue","property","toggleSelected","isSelected","MDCChipSetFoundation","selectedChips_","chipInteractionHandler_","handleChipInteraction_","chipRemovalHandler_","handleChipRemoval_","chipFoundation","CHOICE","deselectAll_","setSelected","index","splice","detail","FILTER","deselect","select","removeChip","choice","input","$nextTick","$destroy","MDCDialogFoundation","isOpen_","componentClickHandler_","BACKDROP","cancel","dialogClickHandler_","handleDialogClick_","documentKeydownHandler_","handleTransitionEnd_","deregisterSurfaceInteractionHandler","deregisterDocumentKeydownHandler","untrapFocusOnSurface","deregisterTransitionEndHandler","ANIMATING","OPEN","enableScroll_","disableScroll_","registerDocumentKeydownHandler","registerSurfaceInteractionHandler","registerTransitionEndHandler","shouldNotify","notifyAccept","close","notifyCancel","ACCEPT_BTN","accept","CANCEL_BTN","isDialog","trapFocusOnSurface","addBodyClass","SCROLL_LOCK","removeBodyClass","candidate","candidateIndexAttr","candidateIndex","elementDocument","ownerDocument","basicTabbables","orderedTabbables","isUnavailable","isOffCache","defaultView","isOff","nodeComputedStyle","i","display","visibility","createIsUnavailable","candidateSelectors","candidates","querySelectorAll","join","includeContainer","matches","Element","msMatchesSelector","webkitMatchesSelector","candidateSelector","apply","unshift","l","parseInt","getAttribute","isNaN","tabIndex","tagName","tabbableNodes","sort","a","b","listeningFocusTrap","tryFocus","focus","toLowerCase","module","userOptions","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","active","paused","tabEvent","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","trap","activateOptions","defaultedActivateOptions","onActivate","deactivateOptions","defaultedDeactivateOptions","returnFocus","onDeactivate","addListeners","pause","getNodeForOption","firstFocusNode","checkFocus","checkClick","checkPointerDown","checkKey","removeListeners","optionName","optionValue","clickOutsideDeactivates","preventDefault","stopImmediatePropagation","blur","shiftKey","hasAttribute","currentFocusIndex","isEscapeEvent","updateTabbableNodes","tabbable","mdcButton","dark","scrollable","open","focusTrap","surfaceEl","acceptButtonEl","createFocusTrap","createFocusTrapInstance","surface","notify","FOCUSABLE_ELEMENTS","MDCSlidableDrawerFoundation","rootCssClass","animatingCssClass","openCssClass","rootCssClass_","animatingCssClass_","openCssClass_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","hasNecessaryDom","detabinate_","registerDrawerInteractionHandler","deregisterDrawerInteractionHandler","retabinate_","notifyOpen","notifyClose","elements","getFocusableElements","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","currentX_","updateRaf_","updateDrawer_","bind","prepareForTouchEnd_","abs","newPosition_","setTranslateX","isRootTransitioningEventTarget_","min","MDCPersistentDrawerFoundation","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","remapEvent","eventName","getTransformPropertyName","transformPropertyName","drawer","_refresh","MDCTemporaryDrawerFoundation","newOpacity","OPACITY_VAR_NAME","media","_small","matchMedia","_large","mdcPermanentDrawer","mdcPersistentDrawer","mdcTemporaryDrawer","val","required","mdcDrawer","permanent","persistent","temporary","drawerType","small","large","toggleOn","toggleOnEventSource","toggleOnSource","$on","toggle","openOn","openOnEventSource","openOnSource","show","closeOn","closeOnEventSource","closeOnSource","addListener","refreshMedia","removeListener","$off","isPermanent","open_","isOpen","isResponsive","isTemporary","isPersistent","temporaryClose","activated","startIcon","mini","absolute","fixed","MDCGridListFoundation","alignCenter","resizeFrame_","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","setStyleForTilesElement","mdcGrid","narrowGutter","headerCaption","ratio","iconAlignStart","iconAlignEnd","withSupportText","interactive","TILE_SELECTOR","TILES_SELECTOR","endIcon","addRipple","removeRipple","isInteractive","text","MDCIconToggleFoundation","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","isSpace","keyupHandler_","refreshToggleData","getTabIndex","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","content","setText","dataAttr","getAttr","JSON","parse","isDisabled","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","accent","stringify","toggleOff","iconClasses","isKeyboardActivated","fixedColumnWidth","alignLeft","alignRight","spanOptions","num","isFinite","span","order","phone","tablet","desktop","align","MDCLinearProgressFoundation","determinate_","INDETERMINATE_CLASS","reverse_","REVERSED_CLASS","progress_","isDeterminate","setScale_","getPrimaryBar","getBuffer","isReversed","CLOSED_CLASS","scaleValue","transformStyleProperty","setStyle","ProgressPropType","mdc-linear-progress--accent","setProgress","progress","setBuffer","buffer","setDeterminate","setReverse","reverse","primary","mdcList","avatarList","twoLine","bordered","inset","padded","attributeName","origin","position","CornerBit","Corner","MDCMenuFoundation","handlePossibleSelected_","handleKeyboardDown_","handleKeyboardUp_","documentClickHandler_","handleDocumentClick_","openAnimationEndTimerId_","closeAnimationEndTimerId_","selectedTriggerTimerId_","animationRequestId_","dimensions_","itemHeight_","anchorCorner_","TOP_START","anchorMargin_","right","bottom","measures_","selectedIndex_","rememberSelection_","quickOpen_","keyDownWithinMenu_","deregisterBodyClickHandler","corner","margin","rememberSelection","setSelectedIndex","quickOpen","focusIndex","focusItemAtIndex","isFocused","getIndexForEventTarget","altKey","ctrlKey","metaKey","isTab","isArrowUp","isArrowDown","isEnter","focusedItemIndex","getFocusedItemIndex","lastItemIndex","getNumberOfItems","isEscape","getAttributeForEventTarget","ARIA_DISABLED_ATTR","targetIndex","notifySelected","SELECTED_TRIGGER_DELAY","anchorRect","getAnchorDimensions","viewport","getWindowDimensions","TOP_LEFT","viewportDistance","anchorHeight","anchorWidth","menuHeight","menuWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","MARGIN_TO_EDGE","avoidVerticalOverlap","canOverlapVertically","maxHeight","hasAnchor","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuHeight","getMenuMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","ANCHOR_TO_MENU_WIDTH_RATIO","OFFSET_TO_MENU_HEIGHT_RATIO","verticalOffsetPercent","originPercent","setTransformOrigin","setPosition","setMaxHeight","saveFocus","ANIMATING_OPEN","getInnerDimensions","autoPosition_","focusOnOpen_","registerBodyClickHandler","TRANSITION_OPEN_DURATION","ANIMATING_CLOSED","TRANSITION_CLOSE_DURATION","restoreFocus","prevSelectedIndex","rmAttrForOptionAtIndex","rmClassForOptionAtIndex","SELECTED_LIST_ITEM","setAttrForOptionAtIndex","addClassForOptionAtIndex","nv","setQuickOpen","setAnchorCorner","setAnchorMargin","refreshItems","items","slotObserver","MutationObserver","observe","_previousFocus","offsetHeight","parentElement","innerWidth","innerHeight","SELECTED_EVENT","CANCEL_EVENT","anchorCorner","anchorMargin","disconnect","MDCRadioFoundation","setValue","picked","getValue","sync","MDCSelectFoundation","handleFocus_","handleBlur_","selectionHandler_","handleSelect_","floatLabelWithValue_","getSelectedIndex","optionHasValue","floatLabel","notchOutline","activateBottomLine","deactivateBottomLine","openNotch","hasOutline","labelScale","LABEL_SCALE","labelWidth","getLabelWidth","closeOutline","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shouldShake","LABEL_SHAKE","shouldFloat","LABEL_FLOAT_ABOVE","labelClasses","MDCLineRippleFoundation","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","isDeactivating","lineClasses","lineStyles","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","getHeight","cornerWidth","leadingStrokeLength","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","MDCnotchedOutlineFoundationFoundation","outlinedClasses","outlinedPath","outlinedIdle","box","line","native_control","selectedIndex","outline","notch","closeNotch","float","refreshIndex","findIndex","KEY_IDS","numMarkers","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","rect_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","handleDown_","handleKeydown_","IS_DISCRETE","HAS_TRACK_MARKER","evtName","registerThumbContainerInteractionHandler","getStep","deregisterThumbContainerInteractionHandler","getMin","getMax","step","indivisible","ceil","removeTrackMarkers","appendTrackMarkers","lastStepRatio","flex","setLastTrackMarkersStyleProperty","updateUIForCurrentValue_","setValue_","ARIA_VALUEMAX","setupTrackMarker","ARIA_VALUEMIN","toggleClass_","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","deregisterBodyInteractionHandler","registerBodyInteractionHandler","setValueFromEvt_","targetTouches","getPageX_","computeValueFromPageX_","pctComplete","isRTL","keyId","getKeyId_","getValueForKeyId_","FOCUS","kbdEvt","delta","PAGE_FACTOR","shouldFireInput","force","valueSetToBoundary","quantize_","ARIA_VALUENOW","notifyInput","setMarkerValue","translatePx","transformProp","transitionendEvtName","onTransitionEnd","setThumbContainerStyleProperty","setTrackStyleProperty","ACTIVE","inTransit","IN_TRANSIT","shouldBePresent","displayMarkers","setMin","setMax","setStep","thumbContainer","thumbStyles","trackStyles","markerValue","lastTrackMarkersStyles","hasMarkers","layoutOn","layoutOnEventSource","layoutOnSource","MDCSnackbarFoundation","actionWasClicked_","dismissOnAction_","firstFocus_","pointerDownRecognized_","snackbarHasFocus_","snackbarData_","queue_","actionClickHandler_","invokeAction_","visibilitychangeHandler_","timeoutId_","visibilityIsHidden","cleanup_","timeout","MESSAGE_TIMEOUT","handlePossibleTabKeyboardFocus_","registerActionClickHandler","setAriaHidden","setActionAriaHidden","deregisterActionClickHandler","deregisterCapturedBlurHandler","deregisterVisibilityChangeHandler","deregisterCapturedInteractionHandler","dismissOnAction","message","actionHandler","actionText","registerVisibilityChangeHandler","registerCapturedBlurHandler","registerCapturedInteractionHandler","MULTILINE","ACTION_ON_BOTTOM","setMessageText","multiline","actionOnBottom","setActionText","actionHandler_","setActionHidden_","unsetAriaHidden","notifyShow","setFocusOnAction_","setFocus","notifyHide","showNext_","shift","isHidden","unsetActionAriaHidden","alignStart","hidden","actionHidden","button","snack","eventSource","setDismissOnAction","dismissesOnAction","MDCTabFoundation","computedWidth_","computedLeft_","isActive_","preventDefaultOnClick_","isActive","preventDefaultOnClick","getOffsetLeft","offsetLeft","tab","setActive","getComputedWidth","getComputedLeft","preventsDefaultOnClick","setPreventDefaultOnClick","measureSelf","MDCTabBarFoundation","isIndicatorShown_","activeTabIndex_","bindOnMDCTabSelectedEvent","activeTabIndex","findActiveTabIndex_","unbindOnMDCTabSelectedEvent","forEachTabIndex_","measureTabAtIndex","layoutIndicator_","isIndicatorFirstRender","setStyleForIndicator","transformValue","getComputedLeftForTabAtIndex","getComputedWidthForTabAtIndex","getOffsetWidthForIndicator","isTabActiveAtIndex","iterator","numTabs","getNumberOfTabs","prevActiveTabIndex","setTabActiveAtIndex","onSelect","indicatorStyles","indicator","tabs","isDefaultPreventedOnClick","resetTabs","tabElements","TAB_SELECTOR","__vue__","hasText","hasIcon","getActiveTabIndex","switchToTabAtIndex","childList","subtree","MDCTextFieldHelperTextFoundation","setContent","HELPER_TEXT_PERSISTENT","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","ROLE","hide_","MDCTextFieldIconFoundation","ICON_ROLE","notifyIconAction","observer","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","isValid","isBadInput_","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","styleValidity_","DENSE","DENSE_LABEL_SCALE","styleFocused_","activateLineRipple","shakeLabel","showToScreenReader","targetClientRect","evtCoords","clientX","clientY","setLineRippleTransformOrigin","deactivateLineRipple","shouldRemoveLabelFloat","getNativeInput_","isNativeInputValid_","styleDisabled_","setAriaLabel","validity","badInput","valid","INVALID","setValidity","FOCUSED","fullwidth","helptextPersistent","helptextValidation","help","setValid","rootClasses","helperTextFoundation","setPersistent","setValidation","lineRipple","lineRippleFoundation","lineRippleClasses","lineRippleStyles","helpClasses","hasLeadingIcon","hasTrailingIcon","iconFoundation","labelFoundation","outlineFoundation","outlineClasses","outlinePathAttr","idleOutlineElement","outlineIdle","MDCTextfieldFoundation","setRippleCenter","mutationsList","mutation","getAttributesList","targetNode","attributes","shake","textbox","THEME_COLORS","THEME_STYLES","color","background","MDCToolbarFoundation","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","FIXED","FIXED_LASTROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","initKeyRatio_","setKeyHeights_","registerScrollHandler","deregisterScrollHandler","setStyleForFixedAdjustElement","toolbarHeight","scrollTop","flexibleExpansionHeight","newToolbarRowHeight","getRowHeight_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYDistance","maxTranslateYRatio","scrollThreshold","scrollThresholdRatio","updateAdjustElementStyles","getViewportScrollY","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","getFirstRowElementOffsetHeight","getOffsetHeight","breakpoint","TOOLBAR_MOBILE_BREAKPOINT","getViewportWidth","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_ROW_HEIGHT","FLEXIBLE_MAX","FLEXIBLE_MIN","translateDistance","FIXED_AT_LAST_ROW","setStyleForFlexibleRowElement","updateElementStylesDefaultBehavior_","maxTitleSize","MAX_TITLE_SIZE","minTitleSize","MIN_TITLE_SIZE","currentTitleSize","setStyleForTitleElement","waterfall","fixedLastrow","flexible","flexibleDefault","FIRST_ROW_SELECTOR","rootStyles","TITLE_SELECTOR","adjustStyles","shrinkToFit","MDCTopAppBarBaseFoundation","navClickHandler_","notifyNavigationIconClicked","registerNavigationIconInteractionHandler","deregisterNavigationIconInteractionHandler","MDCShortTopAppBarFoundation","isCollapsed","shortAppBarScrollHandler_","isAlwaysCollapsed","SHORT_COLLAPSED_CLASS","getTotalActionItems","SHORT_HAS_ACTION_ITEM_CLASS","short","shortCollapsed","prominent","clientHeight","navigationIcon","MDCTopAppBarFoundation","ACTION_ITEM_SELECTOR","mdcTypoMixin","typo","$attrs","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","mdcTextSection","mdcText","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCDialog","VueMDCDrawer","VueMDCElevation","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTopAppBar","VueMDCTypography","plugin","_Vue","Vue","global"],"mappings":"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"}