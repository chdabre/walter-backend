{"version":3,"file":"index.js","sources":["../../components/base/apply-passive.js","../../components/base/base-plugin.js","../../components/base/custom-link.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/chips/chip/adapter.js","../../node_modules/@material/chips/chip/constants.js","../../node_modules/@material/chips/chip/foundation.js","../../components/chips/mdc-chip.vue","../../node_modules/@material/chips/chip-set/adapter.js","../../node_modules/@material/chips/chip-set/constants.js","../../node_modules/@material/chips/chip-set/foundation.js","../../components/chips/mdc-chip-set.vue","../../components/chips/index.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link: Object\n  },\n  render(h, context) {\n    let element\n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link']\n      data.props = Object.assign({ tag: context.props.tag }, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = { click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag\n    }\n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String\n  },\n  computed: {\n    link() {\n      return (\n        this.to && {\n          to: this.to,\n          exact: this.exact,\n          append: this.append,\n          replace: this.replace,\n          activeClass: this.activeClass,\n          exactActiveClass: this.exactActiveClass\n        }\n      )\n    }\n  },\n  components: {\n    CustomLink\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the leading icon element.\n   * @param {string} className\n   */\n  addClassToLeadingIcon(className) {}\n\n  /**\n   * Removes a class from the leading icon element.\n   * @param {string} className\n   */\n  removeClassFromLeadingIcon(className) {}\n\n  /**\n   * Returns true if target has className, false otherwise.\n   * @param {!EventTarget} target\n   * @param {string} className\n   * @return {boolean}\n   */\n  eventTargetHasClass(target, className) {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n\n  /**\n   * Registers an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the trailing icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTrailingIconInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction() {}\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval() {}\n\n  /**\n   * Returns the computed property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getComputedStyleValue(propertyName) {}\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyleProperty(propertyName, value) {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n  SELECTED: 'mdc-chip--selected',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings, cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      addClassToLeadingIcon: () => {},\n      removeClassFromLeadingIcon: () => {},\n      eventTargetHasClass: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n      registerTrailingIconInteractionHandler: () => {},\n      deregisterTrailingIconInteractionHandler: () => {},\n      notifyInteraction: () => {},\n      notifyTrailingIconInteraction: () => {},\n      notifyRemoval: () => {},\n      getComputedStyleValue: () => {},\n      setStyleProperty: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /**\n     * Whether a trailing icon click should immediately trigger exit/removal of the chip.\n     * @private {boolean}\n     * */\n    this.shouldRemoveOnTrailingIconClick_ = true;\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n    /** @private {function(!Event): undefined} */\n    this.trailingIconInteractionHandler_ = (evt) => this.handleTrailingIconInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.registerTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterEventHandler(evtType, this.interactionHandler_);\n    });\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n    ['click', 'keydown', 'touchstart', 'pointerdown', 'mousedown'].forEach((evtType) => {\n      this.adapter_.deregisterTrailingIconInteractionHandler(evtType, this.trailingIconInteractionHandler_);\n    });\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isSelected() {\n    return this.adapter_.hasClass(cssClasses.SELECTED);\n  }\n\n  /**\n   * @param {boolean} selected\n   */\n  setSelected(selected) {\n    if (selected) {\n      this.adapter_.addClass(cssClasses.SELECTED);\n    } else {\n      this.adapter_.removeClass(cssClasses.SELECTED);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick_;\n  }\n\n  /**\n   * @param {boolean} shouldRemove\n   */\n  setShouldRemoveOnTrailingIconClick(shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter_.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Handle transition end event on the chip when it is about to be removed.\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHIP_EXIT)) {\n      if (evt.propertyName === 'width') {\n        this.adapter_.notifyRemoval();\n      } else if (evt.propertyName === 'opacity') {\n        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n        const chipWidth = this.adapter_.getComputedStyleValue('width');\n\n        // On the next frame (once we get the computed width), explicitly set the chip's width\n        // to its current pixel width, so we aren't transitioning out of 'auto'.\n        requestAnimationFrame(() => {\n          this.adapter_.setStyleProperty('width', chipWidth);\n\n          // To mitigate jitter, start transitioning padding and margin before width.\n          this.adapter_.setStyleProperty('padding', '0');\n          this.adapter_.setStyleProperty('margin', '0');\n\n          // On the next frame (once width is explicitly set), transition width to 0.\n          requestAnimationFrame(() => {\n            this.adapter_.setStyleProperty('width', '0');\n          });\n        });\n      }\n      return;\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (evt.propertyName !== 'opacity') {\n      return;\n    }\n    if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.LEADING_ICON) &&\n        this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    } else if (this.adapter_.eventTargetHasClass(/** @type {!EventTarget} */ (evt.target), cssClasses.CHECKMARK) &&\n               !this.adapter_.hasClass(cssClasses.SELECTED)) {\n      this.adapter_.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   * @param {!Event} evt\n   */\n  handleTrailingIconInteraction(evt) {\n    evt.stopPropagation();\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyTrailingIconInteraction();\n      if (this.shouldRemoveOnTrailingIconClick_) {\n        this.beginExit();\n      }\n    }\n  }\n}\n\n/**\n * @typedef {{\n *   detail: {\n *     chip: {foundation: !MDCChipFoundation},\n *   },\n *   bubbles: boolean,\n * }}\n */\nlet MDCChipInteractionEventType;\n\nexport {MDCChipFoundation, MDCChipInteractionEventType};\n","<template>\n  <div\n    :class=\"classes\"\n    :style=\"styles\"\n    tabindex=\"0\"\n    v-on=\"$listeners\">\n    <i\n      v-if=\"haveleadingIcon\"\n      ref=\"leadingIcon\"\n      :class=\"leadingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--leading\"\n    >{{ leadingIcon }}</i>\n    <div\n      v-if=\"isFilter\"\n      class=\"mdc-chip__checkmark\">\n      <svg\n        class=\"mdc-chip__checkmark-svg\"\n        viewBox=\"-2 -3 30 30\">\n        <path\n          class=\"mdc-chip__checkmark-path\"\n          fill=\"none\"\n          stroke=\"black\"\n          d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n      </svg>\n    </div>\n    <div class=\"mdc-chip__text\">\n      <slot/>\n    </div>\n    <i\n      v-if=\"havetrailingIcon\"\n      ref=\"trailingIcon\"\n      :class=\"trailingClasses\"\n      class=\"mdc-chip__icon mdc-chip__icon--trailing\"\n      tabindex=\"0\"\n      role=\"button\"\n    >{{ trailingIcon }}</i>\n  </div>\n</template>\napplyPassive\n<script>\nimport { MDCChipFoundation } from '@material/chips/chip/foundation'\nimport { CustomLinkMixin, emitCustomEvent, applyPassive } from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-chip',\n  mixins: [CustomLinkMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  inject: ['mdcChipSet'],\n  data() {\n    return {\n      classes: {\n        'mdc-chip': true\n      },\n      styles: {}\n    }\n  },\n  computed: {\n    isFilter() {\n      return this.mdcChipSet && this.mdcChipSet.filter\n    },\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      )\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          'material-icons': !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      )\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      addClassToLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.add(className)\n        }\n      },\n      removeClassFromLeadingIcon: className => {\n        if (this.haveleadingIcon) {\n          this.$refs.leadingIcon.classList.remove(className)\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerEventHandler: (evtType, handler) =>\n        this.$el.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) =>\n        this.$el.removeEventListener(evtType, handler),\n      notifyInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n      notifyTrailingIconInteraction: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.TRAILING_ICON_INTERACTION_EVENT,\n          {\n            chip: this\n          },\n          true\n        )\n      },\n\n      registerTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.addEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      deregisterTrailingIconInteractionHandler: (evtType, handler) => {\n        if (this.$refs.trailingIcon) {\n          this.$refs.trailingIcon.removeEventListener(\n            evtType,\n            handler,\n            applyPassive()\n          )\n        }\n      },\n      notifyRemoval: () => {\n        emitCustomEvent(\n          this.$el,\n          MDCChipFoundation.strings.REMOVAL_EVENT,\n          { chip: this },\n          true\n        )\n      },\n      getComputedStyleValue: propertyName =>\n        window.getComputedStyle(this.$el).getPropertyValue(propertyName),\n      setStyleProperty: (property, value) =>\n        this.$set(this.styles, property, value)\n    })\n\n    this.foundation.init()\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    toggleSelected() {\n      this.foundation.toggleSelected()\n    },\n    isSelected() {\n      return this.foundation.isSelected()\n    }\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipInteractionEventType} from '../chip/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!MDCChipInteractionEventType): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!MDCChipInteractionEventType): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Removes the chip object from the chip set.\n   * @param {!Object} chip\n   */\n  removeChip(chip) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\n// eslint-disable-next-line no-unused-vars\nimport {MDCChipFoundation, MDCChipInteractionEventType} from '../chip/foundation';\nimport {strings, cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      removeChip: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n\n    /**\n     * The selected chips in the set. Only used for choice chip set or filter chip set.\n     * @private {!Array<!MDCChipFoundation>}\n     */\n    this.selectedChips_ = [];\n\n    /** @private {function(!MDCChipInteractionEventType): undefined} */\n    this.chipInteractionHandler_ = (evt) => this.handleChipInteraction_(evt);\n    /** @private {function(!MDCChipInteractionEventType): undefined} */\n    this.chipRemovalHandler_ = (evt) => this.handleChipRemoval_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.registerInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.INTERACTION_EVENT, this.chipInteractionHandler_);\n    this.adapter_.deregisterInteractionHandler(\n      MDCChipFoundation.strings.REMOVAL_EVENT, this.chipRemovalHandler_);\n  }\n\n  /**\n   * Selects the given chip. Deselects all other chips if the chip set is of the choice variant.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  select(chipFoundation) {\n    if (this.adapter_.hasClass(cssClasses.CHOICE)) {\n      this.deselectAll_();\n    }\n    chipFoundation.setSelected(true);\n    this.selectedChips_.push(chipFoundation);\n  }\n\n  /**\n   * Deselects the given chip.\n   * @param {!MDCChipFoundation} chipFoundation\n   */\n  deselect(chipFoundation) {\n    const index = this.selectedChips_.indexOf(chipFoundation);\n    if (index >= 0) {\n      this.selectedChips_.splice(index, 1);\n    }\n    chipFoundation.setSelected(false);\n  }\n\n  /** Deselects all selected chips. */\n  deselectAll_() {\n    this.selectedChips_.forEach((chipFoundation) => {\n      chipFoundation.setSelected(false);\n    });\n    this.selectedChips_.length = 0;\n  }\n\n  /**\n   * Handles a chip interaction event\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipInteraction_(evt) {\n    const chipFoundation = evt.detail.chip.foundation;\n    if (this.adapter_.hasClass(cssClasses.CHOICE) || this.adapter_.hasClass(cssClasses.FILTER)) {\n      if (chipFoundation.isSelected()) {\n        this.deselect(chipFoundation);\n      } else {\n        this.select(chipFoundation);\n      }\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   * @param {!MDCChipInteractionEventType} evt\n   * @private\n   */\n  handleChipRemoval_(evt) {\n    const {chip} = evt.detail;\n    this.deselect(chip.foundation);\n    this.adapter_.removeChip(chip);\n  }\n}\n\nexport default MDCChipSetFoundation;\n","<template>\n  <div\n    :class=\"classes\"\n    v-on=\"$listeners\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation'\nexport default {\n  name: 'mdc-chip-set',\n  props: {\n    choice: [Boolean],\n    filter: [Boolean],\n    input: [Boolean]\n  },\n  provide() {\n    return { mdcChipSet: this }\n  },\n  data() {\n    return {\n      classes: {\n        'mdc-chip-set': true,\n        'mdc-chip-set--choice': this.choice,\n        'mdc-chip-set--filter': this.filter,\n        'mdc-chip-set--input': this.input\n      }\n    }\n  },\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$el.classList.contains(className),\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      },\n      removeChip: chip => {\n        // TODO: may need refactoring\n        this.$nextTick(() => chip.$destroy())\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    this.foundation.destroy()\n  },\n  methods: {}\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { mdcChip, mdcChipSet }\n\nexport default BasePlugin({\n  mdcChip,\n  mdcChipSet\n})\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","key","component","name","CustomLink","type","String","default","Object","h","context","element","data","babelHelpers.extends","props","link","parent","$router","$root","$options","tag","on","click","nativeOn","children","CustomLinkMixin","Boolean","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","createEvent","initCustomEvent","dispatchEvent","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCChipAdapter","className","target","handler","propertyName","value","strings","cssClasses","MDCChipFoundation","defaultAdapter","shouldRemoveOnTrailingIconClick_","interactionHandler_","handleInteraction","transitionEndHandler_","handleTransitionEnd","trailingIconInteractionHandler_","handleTrailingIconInteraction","forEach","registerEventHandler","registerTrailingIconInteractionHandler","deregisterEventHandler","deregisterTrailingIconInteractionHandler","hasClass","SELECTED","selected","addClass","removeClass","shouldRemove","CHIP_EXIT","keyCode","notifyInteraction","eventTargetHasClass","notifyRemoval","chipWidth","getComputedStyleValue","setStyleProperty","LEADING_ICON","addClassToLeadingIcon","HIDDEN_LEADING_ICON","CHECKMARK","removeClassFromLeadingIcon","stopPropagation","notifyTrailingIconInteraction","beginExit","render","mdcChipSet","filter","leadingIcon","leadingIconClasses","trailingIcon","trailingIconClasses","foundation","$set","classes","$delete","$el","classList","contains","haveleadingIcon","$refs","add","remove","removeEventListener","INTERACTION_EVENT","TRAILING_ICON_INTERACTION_EVENT","REMOVAL_EVENT","chip","getComputedStyle","getPropertyValue","property","styles","init","ripple","RippleBase","destroy","toggleSelected","isSelected","MDCChipSetAdapter","MDCChipSetFoundation","selectedChips_","chipInteractionHandler_","handleChipInteraction_","chipRemovalHandler_","handleChipRemoval_","registerInteractionHandler","deregisterInteractionHandler","chipFoundation","CHOICE","deselectAll_","setSelected","push","index","indexOf","splice","length","detail","FILTER","deselect","select","removeChip","choice","input","$nextTick","$destroy"],"mappings":"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"}