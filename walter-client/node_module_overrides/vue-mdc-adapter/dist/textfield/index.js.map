{"version":3,"file":"index.js","sources":["../../components/base/apply-passive.js","../../components/base/base-plugin.js","../../components/base/custom-element.js","../../components/base/custom-event.js","../../components/base/custom-icon.js","../../components/base/dispatch-focus-mixin.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/textfield/helper-text/adapter.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/adapter.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/textfield/adapter.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/foundation.js","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../components/textfield/mdc-textfield.vue","../../components/textfield/index.js"],"sourcesContent":["let supportsPassive_\n\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false\n    try {\n      globalObj.document.addEventListener('test', null, {\n        get passive() {\n          isSupported = { passive: true }\n        }\n      })\n    } catch (e) {\n      //empty\n    }\n\n    supportsPassive_ = isSupported\n  }\n\n  return supportsPassive_\n}\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","export const CustomElement = {\n  functional: true,\n  render(createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div',\n      context.data,\n      context.children\n    )\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export function extractIconProp(iconProp) {\n  if (typeof iconProp === 'string') {\n    return {\n      classes: { 'material-icons': true },\n      content: iconProp\n    }\n  } else if (iconProp instanceof Array) {\n    return {\n      classes: iconProp.reduce(\n        (result, value) => Object.assign(result, { [value]: true }),\n        {}\n      )\n    }\n  } else if (typeof iconProp === 'object') {\n    return {\n      classes: iconProp.className\n        .split(' ')\n        .reduce(\n          (result, value) => Object.assign(result, { [value]: true }),\n          {}\n        ),\n      content: iconProp.textContent\n    }\n  }\n}\n","export const DispatchFocusMixin = {\n  data() {\n    return { hasFocus: false }\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp() {\n      this._active = false\n    },\n    onFocusEvent() {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    onBlurEvent() {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(), 0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus =\n        this.$el === document.activeElement ||\n        this.$el.contains(document.activeElement)\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted() {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy() {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Gets the value of an attribute on the icon element.\n   * @param {string} attr\n   * @return {string}\n   */\n  getAttr(attr) {}\n\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the icon element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content of the icon element.\n   * @param {string} content\n   */\n  setContent(content) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Registers a validation attribute change listener on the input element.\n   * Handler accepts list of attribute names.\n   * @param {function(!Array<string>): undefined} handler\n   * @return {!MutationObserver}\n   */\n  registerValidationAttributeChangeHandler(handler) {}\n\n  /**\n   * Disconnects a validation attribute observer on the input element.\n   * @param {!MutationObserver} observer\n   */\n  deregisterValidationAttributeChangeHandler(observer) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n\n  /**\n   * Only implement if label exists.\n   * Shakes label if shouldShake is true.\n   * @param {boolean} shouldShake\n   */\n  shakeLabel(shouldShake) {}\n\n  /**\n   * Only implement if label exists.\n   * Floats the label above the input element if shouldFloat is true.\n   * @param {boolean} shouldFloat\n   */\n  floatLabel(shouldFloat) {}\n\n  /**\n   * Returns true if label element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasLabel() {}\n\n  /**\n   * Only implement if label exists.\n   * Returns width of label in pixels.\n   * @return {number}\n   */\n  getLabelWidth() {}\n\n  /**\n   * Returns true if outline element exists, false if it doesn't.\n   * @return {boolean}\n   */\n  hasOutline() {}\n\n  /**\n   * Only implement if outline element exists.\n   * Updates SVG Path and outline element based on the\n   * label element width and RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  notchOutline(labelWidth, isRtl) {}\n\n  /**\n   * Only implement if outline element exists.\n   * Closes notch in outline element.\n   */\n  closeOutline() {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.adapter_.hasLabel() && (this.getValue() || this.isBadInput_())) {\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    this.notchOutline(this.shouldFloat);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.notchOutline(this.shouldFloat);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the icon.\n   * @param {string} label\n   */\n  setIconAriaLabel(label) {\n    if (this.icon_) {\n      this.icon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the icon.\n   * @param {string} content\n   */\n  setIconContent(content) {\n    if (this.icon_) {\n      this.icon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div\n    :style=\"{width:fullwidth?'100%':undefined}\"\n    :id=\"id\"\n    class=\"mdc-textfield-wrapper\">\n\n    <div\n      ref=\"root\"\n      :class=\"rootClasses\">\n\n      <i\n        v-if=\"!!hasLeadingIcon\"\n        ref=\"icon\"\n        :class=\"hasLeadingIcon.classes\"\n        tabindex=\"0\"\n        class=\"mdc-text-field__icon\">\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\n      </i>\n\n      <!-- workarround for https://github.com/vuejs/rollup-plugin-vue/issues/174 -->\n      <!-- eslint-disable vue/html-self-closing -->\n      <textarea\n        v-if=\"multiline\"\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        :rows=\"rows\"\n        :cols=\"cols\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      ></textarea>\n\n      <input\n        v-else\n        ref=\"input\"\n        v-bind=\"$attrs\"\n        :id=\"vma_uid_\"\n        :class=\"inputClasses\"\n        :type=\"type\"\n        :minlength=\"minlength\"\n        :maxlength=\"maxlength\"\n        :placeholder=\"inputPlaceHolder\"\n        :aria-label=\"inputPlaceHolder\"\n        :aria-controls=\"inputAriaControls\"\n        v-on=\"$listeners\"\n        @input=\"updateValue($event.target.value)\"\n      >\n\n      <label\n        v-if=\"hasLabel\"\n        ref=\"label\"\n        :class=\"labelClassesUpgraded\"\n        :for=\"vma_uid_\">\n        {{ label }}\n      </label>\n\n      <i\n        v-if=\"!!hasTrailingIcon\"\n        ref=\"icon\"\n        :class=\"hasTrailingIcon.classes\"\n        tabindex=\"0\"\n        class=\"mdc-text-field__icon\">\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\n      </i>\n\n      <div\n        v-if=\"hasOutline\"\n        ref=\"outline\"\n        :class=\"outlineClasses\"\n        class=\"mdc-notched-outline\">\n        <svg>\n          <path\n            :d=\"outlinePathAttr\"\n            class=\"mdc-notched-outline__path\" />\n        </svg>\n      </div>\n      <div\n        v-if=\"hasOutline\"\n        ref=\"outlineIdle\"\n        class=\"mdc-notched-outline__idle\"/>\n      <div\n        v-if=\"hasLineRipple\"\n        ref=\"lineRipple\"\n        :class=\"lineRippleClasses\"\n        :style=\"lineRippleStyles\"/>\n\n    </div>\n\n    <p\n      v-if=\"helptext\"\n      ref=\"help\"\n      :id=\"'help-'+vma_uid_\"\n      :class=\"helpClasses\"\n      aria-hidden=\"true\">\n      {{ helptext }}\n    </p>\n\n  </div>\n</template>\n\n<script>\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation'\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\nimport MDCNotchedOutlineFoundation from '@material/notched-outline/foundation'\n\nimport {\n  extractIconProp,\n  DispatchFocusMixin,\n  CustomElementMixin,\n  VMAUniqueIdMixin,\n  applyPassive\n} from '../base'\nimport { RippleBase } from '../ripple'\n\nexport default {\n  name: 'mdc-textfield',\n  mixins: [CustomElementMixin, DispatchFocusMixin, VMAUniqueIdMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'model'\n  },\n  props: {\n    value: String,\n    type: {\n      type: String,\n      default: 'text',\n      validator: function(value) {\n        return (\n          [\n            'text',\n            'email',\n            'search',\n            'password',\n            'tel',\n            'url',\n            'number'\n          ].indexOf(value) !== -1\n        )\n      }\n    },\n    dense: Boolean,\n    label: String,\n    helptext: String,\n    helptextPersistent: Boolean,\n    helptextValidation: Boolean,\n    box: Boolean,\n    outline: Boolean,\n    disabled: Boolean,\n    required: Boolean,\n    valid: { type: Boolean, default: undefined },\n    fullwidth: Boolean,\n    multiline: Boolean,\n    leadingIcon: [String, Array, Object],\n    trailingIcon: [String, Array, Object],\n    size: { type: [Number, String], default: 20 },\n    minlength: { type: [Number, String], default: undefined },\n    maxlength: { type: [Number, String], default: undefined },\n    rows: { type: [Number, String], default: 8 },\n    cols: { type: [Number, String], default: 40 },\n    id: { type: String }\n  },\n  data: function() {\n    return {\n      text: this.value,\n      rootClasses: {\n        'mdc-textfield': true,\n        'mdc-text-field': true,\n        'mdc-text-field--upgraded': true,\n        'mdc-text-field--disabled': this.disabled,\n        'mdc-text-field--dense': this.dense,\n        'mdc-text-field--fullwidth': this.fullwidth,\n        'mdc-text-field--textarea': this.multiline,\n        'mdc-text-field--box': !this.fullwidth && this.box,\n        'mdc-text-field--outlined': !this.fullwidth && this.outline\n      },\n      inputClasses: {\n        'mdc-text-field__input': true\n      },\n      labelClasses: {\n        'mdc-floating-label': true\n      },\n      lineRippleClasses: {\n        'mdc-line-ripple': true\n      },\n      lineRippleStyles: {},\n      helpClasses: {\n        'mdc-text-field-helper-text': true,\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation\n      },\n      outlineClasses: {},\n      outlinePathAttr: undefined\n    }\n  },\n  computed: {\n    inputPlaceHolder() {\n      return this.fullwidth ? this.label : undefined\n    },\n    inputAriaControls() {\n      return this.help ? 'help-' + this.vma_uid_ : undefined\n    },\n    hasLabel() {\n      return !this.fullwidth && this.label\n    },\n    hasOutline() {\n      return !this.fullwidth && this.outline\n    },\n    hasLineRipple() {\n      return !this.hasOutline && !this.multiline\n    },\n    hasLeadingIcon() {\n      if (\n        (this.leadingIcon || this.$slots['leading-icon']) &&\n        !(this.trailingIcon || this.$slots['trailing-icon'])\n      ) {\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {}\n      }\n      return false\n    },\n    hasTrailingIcon() {\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {}\n      }\n      return false\n    },\n    labelClassesUpgraded() {\n      return Object.assign(this.labelClasses, {\n        'mdc-floating-label--float-above': this.value\n      })\n    }\n  },\n  watch: {\n    disabled() {\n      this.foundation && this.foundation.setDisabled(this.disabled)\n    },\n    required() {\n      this.$refs.input && (this.$refs.input.required = this.required)\n    },\n    valid() {\n      if (typeof this.valid !== 'undefined') {\n        this.foundation && this.foundation.setValid(this.valid)\n      }\n    },\n    dense() {\n      this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\n    },\n    helptextPersistent() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setPersistent(this.helptextPersistent)\n    },\n    helptextValidation() {\n      this.helperTextFoundation &&\n        this.helperTextFoundation.setValidation(this.helptextValidation)\n    },\n    value(value) {\n      if (this.foundation) {\n        if (value !== this.foundation.getValue()) {\n          this.foundation.setValue(value)\n        }\n      }\n    }\n  },\n  mounted() {\n    if (this.$refs.lineRipple) {\n      this.lineRippleFoundation = new MDCLineRippleFoundation({\n        addClass: className => {\n          this.$set(this.lineRippleClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.lineRippleClasses, className)\n        },\n        hasClass: className => {\n          this.$refs.lineRipple.classList.contains(className)\n        },\n        setStyle: (name, value) => {\n          this.$set(this.lineRippleStyles, name, value)\n        },\n        registerEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.addEventListener(evtType, handler)\n        },\n        deregisterEventHandler: (evtType, handler) => {\n          this.$refs.lineRipple.removeEventListener(evtType, handler)\n        }\n      })\n      this.lineRippleFoundation.init()\n    }\n\n    if (this.$refs.help) {\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\n        addClass: className => {\n          this.$set(this.helpClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.helpClasses, className)\n        },\n        hasClass: className => {\n          return this.$refs.help.classList.contains(className)\n        },\n        setAttr: (name, value) => {\n          this.$refs.help.setAttribute(name, value)\n        },\n        removeAttr: name => {\n          this.$refs.help.removeAttribute(name)\n        },\n        setContent: (/*content*/) => {\n          // help text get's updated from {{helptext}}\n          // this.$refs.help.textContent = content;\n        }\n      })\n      this.helperTextFoundation.init()\n    }\n\n    if (this.$refs.icon) {\n      if (this.hasLeadingIcon) {\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true)\n      } else if (this.hasTrailingIcon) {\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true)\n      }\n\n      this.iconFoundation = new MDCTextFieldIconFoundation({\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\n        getAttr: attr => this.$refs.icon.getAttribute(attr),\n        removeAttr: attr => this.$refs.icon.removeAttribute(attr),\n        setContent: (/*content*/) => {\n          // icon text get's updated from {{{{ hasTrailingIcon.content }}}}\n          // this.$refs.icon.textContent = content;\n        },\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.icon.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.icon.removeEventListener(evtType, handler)\n        },\n        notifyIconAction: () => this.$emit('icon-action')\n      })\n      this.iconFoundation.init()\n    }\n\n    if (this.$refs.label) {\n      this.labelFoundation = new MDCFloatingLabelFoundation({\n        addClass: className => {\n          this.$set(this.labelClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.labelClasses, className)\n        },\n        getWidth: () => this.$refs.label.offsetWidth,\n        registerInteractionHandler: (evtType, handler) => {\n          this.$refs.label.addEventListener(evtType, handler)\n        },\n        deregisterInteractionHandler: (evtType, handler) => {\n          this.$refs.label.removeEventListener(evtType, handler)\n        }\n      })\n      this.labelFoundation.init()\n    }\n\n    if (this.$refs.outline) {\n      this.outlineFoundation = new MDCNotchedOutlineFoundation({\n        getWidth: () => this.$refs.outline.offsetWidth,\n        getHeight: () => this.$refs.outline.offsetHeight,\n        addClass: className => {\n          this.$set(this.outlineClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.outlineClasses, className)\n        },\n        setOutlinePathAttr: value => {\n          this.outlinePathAttr = value\n        },\n        getIdleOutlineStyleValue: propertyName => {\n          const idleOutlineElement = this.$refs.outlineIdle\n          if (idleOutlineElement) {\n            return window\n              .getComputedStyle(idleOutlineElement)\n              .getPropertyValue(propertyName)\n          }\n        }\n      })\n      this.outlineFoundation.init()\n    }\n\n    this.foundation = new MDCTextfieldFoundation(\n      {\n        addClass: className => {\n          this.$set(this.rootClasses, className, true)\n        },\n        removeClass: className => {\n          this.$delete(this.rootClasses, className)\n        },\n        hasClass: className => {\n          this.$refs.root.classList.contains(className)\n        },\n        registerTextFieldInteractionHandler: (evtType, handler) => {\n          this.$refs.root.addEventListener(evtType, handler)\n        },\n        deregisterTextFieldInteractionHandler: (evtType, handler) => {\n          this.$refs.root.removeEventListener(evtType, handler)\n        },\n        isFocused: () => {\n          return document.activeElement === this.$refs.input\n        },\n        isRtl: () =>\n          window\n            .getComputedStyle(this.$refs.root)\n            .getPropertyValue('direction') === 'rtl',\n        deactivateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.deactivate()\n          }\n        },\n        activateLineRipple: () => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.activate()\n          }\n        },\n        setLineRippleTransformOrigin: normalizedX => {\n          if (this.lineRippleFoundation) {\n            this.lineRippleFoundation.setRippleCenter(normalizedX)\n          }\n        },\n        registerInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.addEventListener(evtType, handler, applyPassive())\n        },\n        deregisterInputInteractionHandler: (evtType, handler) => {\n          this.$refs.input.removeEventListener(evtType, handler, applyPassive())\n        },\n        registerValidationAttributeChangeHandler: handler => {\n          const getAttributesList = mutationsList =>\n            mutationsList.map(mutation => mutation.attributeName)\n          const observer = new MutationObserver(mutationsList =>\n            handler(getAttributesList(mutationsList))\n          )\n          const targetNode = this.$refs.input\n          const config = { attributes: true }\n          observer.observe(targetNode, config)\n          return observer\n        },\n        deregisterValidationAttributeChangeHandler: observer => {\n          observer.disconnect()\n        },\n        shakeLabel: shouldShake => {\n          this.labelFoundation.shake(shouldShake)\n        },\n        floatLabel: shouldFloat => {\n          this.labelFoundation.float(shouldFloat)\n        },\n        hasLabel: () => {\n          return !!this.$refs.label\n        },\n        getLabelWidth: () => {\n          return this.labelFoundation.getWidth()\n        },\n        getNativeInput: () => {\n          return this.$refs.input\n        },\n        hasOutline: () => !!this.hasOutline,\n        notchOutline: (notchWidth, isRtl) =>\n          this.outlineFoundation.notch(notchWidth, isRtl),\n        closeOutline: () => this.outlineFoundation.closeNotch()\n      },\n      {\n        helperText: this.helperTextFoundation,\n        icon: this.iconFoundation\n      }\n    )\n\n    this.foundation.init()\n    this.foundation.setValue(this.value)\n    this.foundation.setDisabled(this.disabled)\n    this.$refs.input && (this.$refs.input.required = this.required)\n    if (typeof this.valid !== 'undefined') {\n      this.foundation.setValid(this.valid)\n    }\n\n    if (this.textbox) {\n      this.ripple = new RippleBase(this)\n      this.ripple.init()\n    }\n  },\n  beforeDestroy() {\n    this.foundation && this.foundation.destroy()\n    this.lineRippleFoundation && this.lineRippleFoundation.destroy()\n    this.helperTextFoundation && this.helperTextFoundation.destroy()\n    this.iconFoundation && this.iconFoundation.destroy()\n    this.labelFoundation && this.labelFoundation.destroy()\n    this.outlineFoundation && this.outlineFoundation.destroy()\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    updateValue(value) {\n      this.$emit('model', value)\n    },\n    focus() {\n      this.$refs.input && this.$refs.input.focus()\n    },\n    blur() {\n      this.$refs.input && this.$refs.input.blur()\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport { mdcTextField }\n\nexport default BasePlugin({\n  mdcTextField\n})\n"],"names":["supportsPassive_","applyPassive","globalObj","window","forceRefresh","undefined","isSupported","document","addEventListener","passive","e","BasePlugin","components","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","extractIconProp","iconProp","Array","reduce","result","value","babelHelpers.extends","className","split","textContent","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","$el","activeElement","contains","$emit","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","scope","Math","floor","random","toString","VMAUniqueIdMixin","vma_uid_","_uid","MDCFoundation","adapter","adapter_","MDCTextFieldHelperTextAdapter","attr","content","strings","cssClasses","MDCTextFieldHelperTextFoundation","defaultAdapter","setContent","isPersistent","addClass","HELPER_TEXT_PERSISTENT","removeClass","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","hasClass","helperTextIsValidationMsg","validationMsgNeedsDisplay","setAttr","ROLE","hide_","MDCTextFieldIconAdapter","evtType","handler","MDCTextFieldIconFoundation","savedTabIndex_","interactionHandler_","evt","handleInteraction","getAttr","forEach","registerInteractionHandler","deregisterInteractionHandler","disabled","ICON_ROLE","label","type","keyCode","notifyIconAction","MDCTextFieldAdapter","observer","normalizedX","shouldShake","shouldFloat","labelWidth","isRtl","numbers","VALIDATION_ATTR_WHITELIST","MDCTextFieldFoundation","isValid","isFocused_","getValue","isBadInput_","foundationMap","helperText_","helperText","icon_","icon","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","validationObserver_","UPGRADED","hasLabel","floatLabel","notchOutline","isFocused","registerInputInteractionHandler","registerTextFieldInteractionHandler","registerValidationAttributeChangeHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","deregisterValidationAttributeChangeHandler","getNativeInput","some","attributeName","indexOf","styleValidity_","openNotch","hasOutline","isDense","DENSE","labelScale","DENSE_LABEL_SCALE","LABEL_SCALE","getLabelWidth","closeOutline","styleFocused_","activateLineRipple","shakeLabel","showToScreenReader","targetClientRect","target","getBoundingClientRect","evtCoords","x","clientX","y","clientY","left","setLineRippleTransformOrigin","deactivateLineRipple","input","getNativeInput_","shouldRemoveLabelFloat","isNativeInputValid_","styleDisabled_","setAriaLabel","validity","badInput","valid","INVALID","setValidity","FOCUSED","isDisabled","DISABLED","setDisabled","MDCLineRippleAdapter","propertyName","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","setStyle","isDeactivating","MDCFloatingLabelAdapter","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","LABEL_SHAKE","LABEL_FLOAT_ABOVE","MDCNotchedOutlineAdapter","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","render","String","Boolean","default","Object","Number","dense","fullwidth","multiline","box","outline","helptextPersistent","helptextValidation","help","leadingIcon","$slots","trailingIcon","labelClasses","foundation","$refs","required","setValid","$set","rootClasses","helperTextFoundation","setPersistent","setValidation","setValue","lineRipple","lineRippleFoundation","lineRippleClasses","$delete","classList","lineRippleStyles","init","helpClasses","setAttribute","removeAttribute","hasLeadingIcon","hasTrailingIcon","iconFoundation","getAttribute","labelFoundation","offsetWidth","outlineFoundation","offsetHeight","outlineClasses","outlinePathAttr","idleOutlineElement","outlineIdle","getComputedStyle","getPropertyValue","MDCTextfieldFoundation","root","deactivate","activate","setRippleCenter","getAttributesList","mutationsList","map","mutation","MutationObserver","targetNode","config","attributes","observe","disconnect","shake","float","notch","closeNotch","textbox","ripple","RippleBase","destroy","focus","blur"],"mappings":"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"}