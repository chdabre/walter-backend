{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-event.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/base/component.js","../../node_modules/@material/base/index.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/foundation.js","../../components/select/mdc-select-label.vue","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../components/select/mdc-select-line-ripple.vue","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/foundation.js","../../components/select/mdc-select-notched-outline.vue","../../components/select/mdc-select.vue","../../components/select/index.js"],"sourcesContent":["export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent(el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\nimport MDCComponent from './component';\n\nexport {MDCFoundation, MDCComponent};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n};\n\nconst strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getSelectedIndex: () => /* number */ -1,\n      setSelectedIndex: (/* index: number */) => {},\n      setDisabled: (/* disabled: boolean */) => {},\n      getValue: () => /* string */ '',\n      setValue: (/* value: string */) => {},\n      isRtl: () => false,\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    this.focusHandler_ = (evt) => this.handleFocus_(evt);\n    this.blurHandler_ = (evt) => this.handleBlur_(evt);\n    this.selectionHandler_ = (evt) => this.handleSelect_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerInteractionHandler('change', this.selectionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterInteractionHandler('change', this.selectionHandler_);\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.floatLabelWithValue_();\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.adapter_.setDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  floatLabelWithValue_() {\n    const optionHasValue = this.adapter_.getValue().length > 0;\n    this.adapter_.floatLabel(optionHasValue);\n    this.notchOutline(optionHasValue);\n  }\n\n  handleFocus_() {\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n  }\n\n  handleBlur_() {\n    this.floatLabelWithValue_();\n    this.adapter_.deactivateBottomLine();\n  }\n\n  handleSelect_() {\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\n  <label\n    :class=\"labelClasses\"\n    class=\"mdc-floating-label\">\n    <slot />\n  </label>\n</template>\n\n<script>\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\n\nexport default {\n  name: 'mdc-select-label',\n  data() {\n    return {\n      labelClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCFloatingLabelFoundation({\n      addClass: className => {\n        this.$set(this.labelClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.labelClasses, className)\n      },\n      getWidth: () => this.$el.offsetWidth,\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\n  <div\n    :class=\"lineClasses\"\n    :style=\"lineStyles\"\n    class=\"mdc-line-ripple\"/>\n</template>\n\n<script>\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\n\nexport default {\n  name: 'mdc-select-line-ripple',\n  data() {\n    return {\n      lineClasses: {},\n      lineStyles: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLineRippleFoundation({\n      addClass: className => {\n        this.$set(this.lineClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.lineClasses, className)\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      setStyle: (name, value) => {\n        this.$set(this.lineStyles, name, value)\n      },\n      registerEventHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterEventHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div>\n    <div\n      ref=\"outlined\"\n      :class=\"outlinedClasses\"\n      class=\"mdc-notched-outline\">\n      <svg>\n        <path\n          ref=\"outlinedPath\"\n          class=\"mdc-notched-outline__path\"/>\n      </svg>\n    </div>\n    <div\n      ref=\"outlinedIdle\"\n      class=\"mdc-notched-outline__idle\"/>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundationFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-select-notched-outline',\n  data() {\n    return {\n      outlinedClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundationFoundation({\n      getWidth: () => this.$refs.outlined.offsetWidth,\n      getHeight: () => this.$refs.outlined.offsetHeight,\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n      setOutlinePathAttr: value => {\n        const path = this.$refs.outlinedPath\n        path.setAttribute('d', value)\n      },\n      getIdleOutlineStyleValue: propertyName => {\n        return window\n          .getComputedStyle(this.$refs.outlinedIdle)\n          .getPropertyValue(propertyName)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"rootClasses\"\n    :style=\"styles\"\n    class=\"mdc-select\">\n    <select\n      ref=\"native_control\"\n      v-bind=\"$attrs\"\n      class=\"mdc-select__native-control\"\n      v-on=\"listeners\">\n      <option\n        v-if=\"!!label\"\n        class=\"mdc-option\"\n        value=\"\"\n        disabled\n        selected/>\n      <slot/>\n    </select>\n    <!-- label -->\n    <select-label\n      v-if=\"label\"\n      ref=\"label\">{{ label }}</select-label>\n    <!-- line ripple -->\n    <select-line-riple\n      v-if=\"!outlined\"\n      ref=\"line\"/>\n    <!-- outline -->\n    <select-notched-outline\n      v-if=\"outlined\"\n      ref=\"outline\"\n    />\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\n\nimport SelectLabel from './mdc-select-label.vue'\nimport SelectLineRiple from './mdc-select-line-ripple.vue'\nimport SelectNotchedOutline from './mdc-select-notched-outline.vue'\n\nexport default {\n  name: 'mdc-select',\n  components: {\n    SelectLabel,\n    SelectLineRiple,\n    SelectNotchedOutline\n  },\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    box: Boolean,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': this.box,\n        'mdc-select--outlined': this.outlined,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.$emit('change', event.target.value)\n      }\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value)\n    },\n    value: 'refreshIndex'\n  },\n  mounted() {\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      activateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.activate()\n        }\n      },\n      deactivateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.deactivate()\n        }\n      },\n      setDisabled: disabled => (this.$refs.native_control.disabled = disabled),\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.native_control.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.native_control.removeEventListener(type, handler),\n      getSelectedIndex: () => this.$refs.native_control.selectedIndex,\n      setSelectedIndex: index =>\n        (this.$refs.native_control.selectedIndex = index),\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n      isRtl: () => {\n        return (\n          window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n          'rtl'\n        )\n      },\n      notchOutline: (labelWidth, isRtl) => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.notch(labelWidth, isRtl)\n        }\n      },\n      closeOutline: () => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.closeNotch()\n        }\n      },\n      hasOutline: () => !!this.$refs.outline,\n      floatLabel: value => {\n        if (this.$refs.label) {\n          this.$refs.label.foundation.float(value)\n        }\n      },\n      hasLabel: () => !!this.$refs.label,\n      getLabelWidth: () => {\n        if (this.$refs.label) {\n          return this.$refs.label.foundation.getWidth()\n        }\n      }\n    })\n\n    this.foundation.init()\n\n    this.foundation.setDisabled(this.disabled)\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.foundation.setSelectedIndex(idx)\n      }\n    }\n  }\n}\n</script>\n","import { BasePlugin } from '../base'\nimport mdcSelect from './mdc-select.vue'\n\nexport { mdcSelect }\n\nexport default BasePlugin({\n  mdcSelect\n})\n"],"names":["BasePlugin","components","key","component","name","scope","Math","floor","random","toString","MDCFoundation","adapter","adapter_","MDCComponent","root","foundation","undefined","root_","args","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","cssClasses","strings","numbers","MDCSelectFoundation","babelHelpers.extends","defaultAdapter","focusHandler_","handleFocus_","blurHandler_","handleBlur_","selectionHandler_","handleSelect_","registerInteractionHandler","deregisterInteractionHandler","index","setSelectedIndex","floatLabelWithValue_","value","setValue","getSelectedIndex","disabled","DISABLED","setDisabled","addClass","removeClass","optionHasValue","getValue","length","floatLabel","notchOutline","activateBottomLine","deactivateBottomLine","openNotch","hasOutline","hasLabel","labelScale","LABEL_SCALE","labelWidth","getLabelWidth","isRtl","closeOutline","MDCFloatingLabelAdapter","className","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shouldShake","LABEL_SHAKE","shouldFloat","LABEL_FLOAT_ABOVE","render","$set","labelClasses","$delete","$el","offsetWidth","MDCLineRippleAdapter","propertyName","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","setStyle","isDeactivating","hasClass","lineClasses","classList","contains","lineStyles","MDCNotchedOutlineAdapter","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","MDCnotchedOutlineFoundationFoundation","$refs","outlined","offsetHeight","outlinedClasses","outlinedPath","setAttribute","window","getComputedStyle","outlinedIdle","getPropertyValue","String","Boolean","type","box","classes","$listeners","$emit","event","target","line","activate","deactivate","native_control","selectedIndex","outline","notch","closeNotch","label","float","refreshIndex","slotObserver","MutationObserver","observe","ripple","RippleBase","disconnect","options","querySelectorAll","idx","findIndex"],"mappings":"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"}