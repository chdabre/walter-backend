{"version":3,"file":"select.min.js","sources":["../../node_modules/@material/base/foundation.js","../../components/base/uniqueid-mixin.js","../../node_modules/@material/select/constants.js","../../node_modules/@material/base/component.js","../../node_modules/@material/select/foundation.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../node_modules/@material/floating-label/constants.js","../../node_modules/@material/floating-label/adapter.js","../../node_modules/@material/floating-label/foundation.js","../../components/select/mdc-select-label.vue","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/foundation.js","../../components/select/mdc-select-line-ripple.vue","../../node_modules/@material/notched-outline/constants.js","../../node_modules/@material/notched-outline/adapter.js","../../node_modules/@material/notched-outline/foundation.js","../../components/select/mdc-select.vue","../../components/select/mdc-select-notched-outline.vue","../../components/base/auto-init.js","../../components/select/entry.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","const scope =\n  Math.floor(Math.random() * Math.floor(0x10000000)).toString() + '-'\n\nexport const VMAUniqueIdMixin = {\n  beforeCreate() {\n    this.vma_uid_ = scope + this._uid\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst cssClasses = {\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  ROOT: 'mdc-select',\n  OUTLINED: 'mdc-select--outlined',\n};\n\nconst strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => false,\n      floatLabel: (/* value: boolean */) => {},\n      activateBottomLine: () => {},\n      deactivateBottomLine: () => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getSelectedIndex: () => /* number */ -1,\n      setSelectedIndex: (/* index: number */) => {},\n      setDisabled: (/* disabled: boolean */) => {},\n      getValue: () => /* string */ '',\n      setValue: (/* value: string */) => {},\n      isRtl: () => false,\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n\n    this.focusHandler_ = (evt) => this.handleFocus_(evt);\n    this.blurHandler_ = (evt) => this.handleBlur_(evt);\n    this.selectionHandler_ = (evt) => this.handleSelect_(evt);\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerInteractionHandler('change', this.selectionHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterInteractionHandler('change', this.selectionHandler_);\n  }\n\n  setSelectedIndex(index) {\n    this.adapter_.setSelectedIndex(index);\n    this.floatLabelWithValue_();\n  }\n\n  setValue(value) {\n    this.adapter_.setValue(value);\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.adapter_.setDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  floatLabelWithValue_() {\n    const optionHasValue = this.adapter_.getValue().length > 0;\n    this.adapter_.floatLabel(optionHasValue);\n    this.notchOutline(optionHasValue);\n  }\n\n  handleFocus_() {\n    this.adapter_.floatLabel(true);\n    this.notchOutline(true);\n    this.adapter_.activateBottomLine();\n  }\n\n  handleBlur_() {\n    this.floatLabelWithValue_();\n    this.adapter_.deactivateBottomLine();\n  }\n\n  handleSelect_() {\n    this.setSelectedIndex(this.adapter_.getSelectedIndex());\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline() || !this.adapter_.hasLabel()) {\n      return;\n    }\n\n    if (openNotch) {\n      const labelScale = numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  let supportsCssVariables = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables = false;\n  }\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVariables;\n  }\n  return supportsCssVariables;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => this.handleFocus();\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => this.handleBlur();\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n        // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n        this.layoutInternal_();\n      }\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n\n    if (this.activationTimer_) {\n      clearTimeout(this.activationTimer_);\n      this.activationTimer_ = 0;\n      const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n      this.adapter_.removeClass(FG_ACTIVATION);\n    }\n\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.registerResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    }\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation_();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation_();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  checkElementMadeActive_(e) {\n    return (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal_();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus() {\n    requestAnimationFrame(() =>\n      this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur() {\n    requestAnimationFrame(() =>\n      this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin(components) {\n  return {\n    version: '__VERSION__',\n    install: vm => {\n      for (let key in components) {\n        let component = components[key]\n        vm.component(component.name, component)\n      }\n    },\n    components\n  }\n}\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {\n  supportsCssVariables,\n  getMatchesProperty,\n  applyPassive\n} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n  static get MATCHES() {\n    /* global HTMLElement */\n    return (\n      RippleBase._matches ||\n      (RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n    )\n  }\n\n  static isSurfaceActive(ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor(vm, options) {\n    super(\n      Object.assign(\n        {\n          browserSupportsCssVars: () => {\n            return supportsCssVariables(window)\n          },\n          isUnbounded: () => {\n            return false\n          },\n          isSurfaceActive: () => {\n            return vm.$el[RippleBase.MATCHES](':active')\n          },\n          isSurfaceDisabled: () => {\n            return vm.disabled\n          },\n          addClass(className) {\n            vm.$set(vm.classes, className, true)\n          },\n          removeClass(className) {\n            vm.$delete(vm.classes, className)\n          },\n          containsEventTarget: target => vm.$el.contains(target),\n          registerInteractionHandler: (evt, handler) => {\n            vm.$el.addEventListener(evt, handler, applyPassive())\n          },\n          deregisterInteractionHandler: (evt, handler) => {\n            vm.$el.removeEventListener(evt, handler, applyPassive())\n          },\n          registerDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.addEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          deregisterDocumentInteractionHandler: (evtType, handler) =>\n            document.documentElement.removeEventListener(\n              evtType,\n              handler,\n              applyPassive()\n            ),\n          registerResizeHandler: handler => {\n            return window.addEventListener('resize', handler)\n          },\n          deregisterResizeHandler: handler => {\n            return window.removeEventListener('resize', handler)\n          },\n          updateCssVariable: (varName, value) => {\n            vm.$set(vm.styles, varName, value)\n          },\n          computeBoundingRect: () => {\n            return vm.$el.getBoundingClientRect()\n          },\n          getWindowPageOffset: () => {\n            return { x: window.pageXOffset, y: window.pageYOffset }\n          }\n        },\n        options\n      )\n    )\n  }\n}\n\nexport const RippleMixin = {\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted() {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.ripple.destroy()\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Floating Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the floating label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCFloatingLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n}\n\nexport default MDCFloatingLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","<template>\n  <label\n    :class=\"labelClasses\"\n    class=\"mdc-floating-label\">\n    <slot />\n  </label>\n</template>\n\n<script>\nimport MDCFloatingLabelFoundation from '@material/floating-label/foundation'\n\nexport default {\n  name: 'mdc-select-label',\n  data() {\n    return {\n      labelClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCFloatingLabelFoundation({\n      addClass: className => {\n        this.$set(this.labelClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.labelClasses, className)\n      },\n      getWidth: () => this.$el.offsetWidth,\n      registerInteractionHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets the style property with propertyName to value on the root element.\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setStyle(propertyName, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","<template>\n  <div\n    :class=\"lineClasses\"\n    :style=\"lineStyles\"\n    class=\"mdc-line-ripple\"/>\n</template>\n\n<script>\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\n\nexport default {\n  name: 'mdc-select-line-ripple',\n  data() {\n    return {\n      lineClasses: {},\n      lineStyles: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCLineRippleFoundation({\n      addClass: className => {\n        this.$set(this.lineClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.lineClasses, className)\n      },\n      hasClass: className => {\n        this.$el.classList.contains(className)\n      },\n      setStyle: (name, value) => {\n        this.$set(this.lineStyles, name, value)\n      },\n      registerEventHandler: (evtType, handler) => {\n        this.$el.addEventListener(evtType, handler)\n      },\n      deregisterEventHandler: (evtType, handler) => {\n        this.$el.removeEventListener(evtType, handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Notched Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Notched Outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCNotchedOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Adds a class to the root element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCNotchedOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedNotchWidth = notchWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","<template>\n  <div\n    :id=\"id\"\n    :class=\"rootClasses\"\n    :style=\"styles\"\n    class=\"mdc-select\">\n    <select\n      ref=\"native_control\"\n      v-bind=\"$attrs\"\n      class=\"mdc-select__native-control\"\n      v-on=\"listeners\">\n      <option\n        v-if=\"!!label\"\n        class=\"mdc-option\"\n        value=\"\"\n        disabled\n        selected/>\n      <slot/>\n    </select>\n    <!-- label -->\n    <select-label\n      v-if=\"label\"\n      ref=\"label\">{{ label }}</select-label>\n    <!-- line ripple -->\n    <select-line-riple\n      v-if=\"!outlined\"\n      ref=\"line\"/>\n    <!-- outline -->\n    <select-notched-outline\n      v-if=\"outlined\"\n      ref=\"outline\"\n    />\n  </div>\n</template>\n\n<script>\nimport MDCSelectFoundation from '@material/select/foundation'\nimport { RippleBase } from '../ripple'\n\nimport SelectLabel from './mdc-select-label.vue'\nimport SelectLineRiple from './mdc-select-line-ripple.vue'\nimport SelectNotchedOutline from './mdc-select-notched-outline.vue'\n\nexport default {\n  name: 'mdc-select',\n  components: {\n    SelectLabel,\n    SelectLineRiple,\n    SelectNotchedOutline\n  },\n  inheritAttrs: false,\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: String,\n    disabled: Boolean,\n    label: String,\n    box: Boolean,\n    outlined: Boolean,\n    id: { type: String }\n  },\n  data() {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    rootClasses() {\n      return {\n        'mdc-select--box': this.box,\n        'mdc-select--outlined': this.outlined,\n        ...this.classes\n      }\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.$emit('change', event.target.value)\n      }\n    }\n  },\n  watch: {\n    disabled(value) {\n      this.foundation && this.foundation.setDisabled(value)\n    },\n    value: 'refreshIndex'\n  },\n  mounted() {\n    this.foundation = new MDCSelectFoundation({\n      addClass: className => this.$set(this.classes, className, true),\n      removeClass: className => this.$delete(this.classes, className),\n      hasClass: className => this.$el.classList.contains(className),\n      activateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.activate()\n        }\n      },\n      deactivateBottomLine: () => {\n        if (this.$refs.line) {\n          this.$refs.line.foundation.deactivate()\n        }\n      },\n      setDisabled: disabled => (this.$refs.native_control.disabled = disabled),\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.native_control.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.native_control.removeEventListener(type, handler),\n      getSelectedIndex: () => this.$refs.native_control.selectedIndex,\n      setSelectedIndex: index =>\n        (this.$refs.native_control.selectedIndex = index),\n      getValue: () => this.$refs.native_control.value,\n      setValue: value => (this.$refs.native_control.value = value),\n      isRtl: () => {\n        return (\n          window.getComputedStyle(this.$el).getPropertyValue('direction') ===\n          'rtl'\n        )\n      },\n      notchOutline: (labelWidth, isRtl) => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.notch(labelWidth, isRtl)\n        }\n      },\n      closeOutline: () => {\n        if (this.$refs.outline) {\n          this.$refs.outline.foundation.closeNotch()\n        }\n      },\n      hasOutline: () => !!this.$refs.outline,\n      floatLabel: value => {\n        if (this.$refs.label) {\n          this.$refs.label.foundation.float(value)\n        }\n      },\n      hasLabel: () => !!this.$refs.label,\n      getLabelWidth: () => {\n        if (this.$refs.label) {\n          return this.$refs.label.foundation.getWidth()\n        }\n      }\n    })\n\n    this.foundation.init()\n\n    this.foundation.setDisabled(this.disabled)\n\n    // initial sync with DOM\n    this.refreshIndex()\n    this.slotObserver = new MutationObserver(() => this.refreshIndex())\n    this.slotObserver.observe(this.$refs.native_control, {\n      childList: true,\n      subtree: true\n    })\n\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy() {\n    this.slotObserver.disconnect()\n\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n\n    this.ripple && this.ripple.destroy()\n  },\n  methods: {\n    refreshIndex() {\n      const options = [...this.$refs.native_control.querySelectorAll('option')]\n\n      const idx = options.findIndex(({ value }) => {\n        return this.value === value\n      })\n\n      if (this.$refs.native_control.selectedIndex !== idx) {\n        this.foundation.setSelectedIndex(idx)\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <div\n      ref=\"outlined\"\n      :class=\"outlinedClasses\"\n      class=\"mdc-notched-outline\">\n      <svg>\n        <path\n          ref=\"outlinedPath\"\n          class=\"mdc-notched-outline__path\"/>\n      </svg>\n    </div>\n    <div\n      ref=\"outlinedIdle\"\n      class=\"mdc-notched-outline__idle\"/>\n  </div>\n</template>\n\n<script>\nimport MDCnotchedOutlineFoundationFoundation from '@material/notched-outline/foundation'\n\nexport default {\n  name: 'mdc-select-notched-outline',\n  data() {\n    return {\n      outlinedClasses: {}\n    }\n  },\n  mounted() {\n    this.foundation = new MDCnotchedOutlineFoundationFoundation({\n      getWidth: () => this.$refs.outlined.offsetWidth,\n      getHeight: () => this.$refs.outlined.offsetHeight,\n      addClass: className => {\n        this.$set(this.outlinedClasses, className, true)\n      },\n      removeClass: className => {\n        this.$delete(this.outlinedClasses, className)\n      },\n      setOutlinePathAttr: value => {\n        const path = this.$refs.outlinedPath\n        path.setAttribute('d', value)\n      },\n      getIdleOutlineStyleValue: propertyName => {\n        return window\n          .getComputedStyle(this.$refs.outlinedIdle)\n          .getPropertyValue(propertyName)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy() {\n    let foundation = this.foundation\n    this.foundation = null\n    foundation.destroy()\n  }\n}\n</script>\n","export function autoInit(plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n","import './styles.scss'\nimport { autoInit } from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["MDCFoundation","Math","floor","random","toString","adapter","adapter_","cssClasses","root","foundation","undefined","root_","args","initialize","foundation_","this","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","strings","numbers","MDCSelectFoundation","babelHelpers.extends","defaultAdapter","focusHandler_","_this","handleFocus_","blurHandler_","handleBlur_","selectionHandler_","handleSelect_","registerInteractionHandler","deregisterInteractionHandler","index","setSelectedIndex","floatLabelWithValue_","value","setValue","getSelectedIndex","disabled","DISABLED","setDisabled","addClass","removeClass","optionHasValue","getValue","length","floatLabel","notchOutline","activateBottomLine","deactivateBottomLine","openNotch","hasOutline","hasLabel","labelScale","LABEL_SCALE","labelWidth","getLabelWidth","isRtl","closeOutline","className","target","varName","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","isSupported","passive","e","components","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","handleFocus","handleBlur","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","_this2","isUnbounded","layoutInternal_","FG_ACTIVATION","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","type","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","checkElementMadeActive_","animateActivation_","key","keyCode","isSurfaceActive","event","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","requestAnimationFrame","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","_this16","BG_FOCUSED","_this17","RippleBase","vm","options","windowObj","supportsCssVariables","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","$el","MATCHES","$set","classes","$delete","contains","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shouldShake","LABEL_SHAKE","shouldFloat","LABEL_FLOAT_ABOVE","render","labelClasses","offsetWidth","propertyName","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","setStyle","isDeactivating","hasClass","lineClasses","classList","name","lineStyles","MDCNotchedOutlineFoundation","notchWidth","OUTLINE_NOTCHED","updateSvgPath_","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","getHeight","cornerWidth","leadingStrokeLength","abs","paddedNotchWidth","pathMiddle","path","setOutlinePathAttr","MDCnotchedOutlineFoundationFoundation","$refs","outlined","offsetHeight","outlinedClasses","outlinedPath","setAttribute","outlinedIdle","getPropertyValue","String","Boolean","box","$listeners","$emit","line","activate","deactivate","native_control","selectedIndex","outline","notch","closeNotch","label","float","refreshIndex","slotObserver","MutationObserver","observe","ripple","disconnect","idx","querySelectorAll","findIndex","_this3","component","plugin","_Vue","Vue","global","use"],"mappings":"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"}